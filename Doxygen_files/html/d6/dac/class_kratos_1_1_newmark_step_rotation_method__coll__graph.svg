<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::NewmarkStepRotationMethod&lt; TVariableType, TValueType &gt; Pages: 1 -->
<!--zoomable 7505 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 365;
var viewHeight = 7505;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::NewmarkStepRotationMethod&lt; TVariableType, TValueType &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Short class definition.">
<polygon fill="#bfbfbf" stroke="black" points="80.5,-0.5 80.5,-442.5 286.5,-442.5 286.5,-0.5 80.5,-0.5"/>
<text text-anchor="start" x="88.5" y="-430.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NewmarkStepRotation</text>
<text text-anchor="middle" x="183.5" y="-419.5" font-family="Helvetica,sans-Serif" font-size="10.00">Method&lt; TVariableType, TValueType &gt;</text>
<polyline fill="none" stroke="black" points="80.5,-412.5 286.5,-412.5 "/>
<text text-anchor="middle" x="183.5" y="-400.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="80.5,-393.5 286.5,-393.5 "/>
<text text-anchor="start" x="88.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Update()</text>
<text text-anchor="start" x="88.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="88.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Update()</text>
<text text-anchor="start" x="88.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="88.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="88.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="88.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Update()</text>
<text text-anchor="start" x="88.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="88.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BasePointerType</text>
<text text-anchor="start" x="88.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="88.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VariablePointer</text>
<text text-anchor="start" x="88.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DerivedType</text>
<text text-anchor="start" x="88.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="88.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="88.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="88.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="88.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="88.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="88.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="88.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="88.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="88.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="88.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d4/db7/class_kratos_1_1_newmark_step_method.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="94,-480.5 94,-1208.5 273,-1208.5 273,-480.5 94,-480.5"/>
<text text-anchor="start" x="102" y="-1196.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NewmarkStepMethod</text>
<text text-anchor="middle" x="183.5" y="-1185.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TVariableType, TValueType &gt;</text>
<polyline fill="none" stroke="black" points="94,-1178.5 273,-1178.5 "/>
<text text-anchor="start" x="102" y="-1166.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpStepVariable</text>
<polyline fill="none" stroke="black" points="94,-1159.5 273,-1159.5 "/>
<text text-anchor="start" x="102" y="-1147.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-1136.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-1125.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-1114.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-1103.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-1092.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="102" y="-1081.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-1070.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ HasStepVariable()</text>
<text text-anchor="start" x="102" y="-1059.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetStepVariable()</text>
<text text-anchor="start" x="102" y="-1048.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="102" y="-1037.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="102" y="-1026.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="102" y="-1015.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="102" y="-1004.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromFirstDerivative()</text>
<text text-anchor="start" x="102" y="-993.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromSecondDerivative()</text>
<text text-anchor="start" x="102" y="-982.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictFromVariable()</text>
<text text-anchor="start" x="102" y="-971.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictStepVariable()</text>
<text text-anchor="start" x="102" y="-960.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictVariable()</text>
<text text-anchor="start" x="102" y="-949.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictFirstDerivative()</text>
<text text-anchor="start" x="102" y="-938.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictSecondDerivative()</text>
<text text-anchor="start" x="102" y="-927.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateFromVariable()</text>
<text text-anchor="start" x="102" y="-916.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateStepVariable()</text>
<text text-anchor="start" x="102" y="-905.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateVariable()</text>
<text text-anchor="start" x="102" y="-894.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateFirstDerivative()</text>
<text text-anchor="start" x="102" y="-883.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateSecondDerivative()</text>
<text text-anchor="start" x="102" y="-872.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="102" y="-861.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BasePointerType</text>
<text text-anchor="start" x="102" y="-850.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="102" y="-839.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VariablePointer</text>
<text text-anchor="start" x="102" y="-828.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DerivedType</text>
<text text-anchor="start" x="102" y="-817.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="102" y="-806.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="102" y="-795.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpStepVariable</text>
<text text-anchor="start" x="102" y="-784.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="102" y="-773.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="102" y="-762.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="102" y="-751.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-740.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-729.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-718.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-707.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-696.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="102" y="-685.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-674.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HasStepVariable()</text>
<text text-anchor="start" x="102" y="-663.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetStepVariable()</text>
<text text-anchor="start" x="102" y="-652.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="102" y="-641.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="102" y="-630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="102" y="-619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="102" y="-608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromFirstDerivative()</text>
<text text-anchor="start" x="102" y="-597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromSecondDerivative()</text>
<text text-anchor="start" x="102" y="-586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictFromVariable()</text>
<text text-anchor="start" x="102" y="-575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictStepVariable()</text>
<text text-anchor="start" x="102" y="-564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictVariable()</text>
<text text-anchor="start" x="102" y="-553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictFirstDerivative()</text>
<text text-anchor="start" x="102" y="-542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictSecondDerivative()</text>
<text text-anchor="start" x="102" y="-531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateFromVariable()</text>
<text text-anchor="start" x="102" y="-520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateStepVariable()</text>
<text text-anchor="start" x="102" y="-509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateVariable()</text>
<text text-anchor="start" x="102" y="-498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateFirstDerivative()</text>
<text text-anchor="start" x="102" y="-487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateSecondDerivative()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M183.5,-470.34C183.5,-461.04 183.5,-451.81 183.5,-442.7"/>
<polygon fill="none" stroke="midnightblue" points="180,-470.46 183.5,-480.46 187,-470.46 180,-470.46"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../df/d06/class_kratos_1_1_newmark_method.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="92.5,-1246.5 92.5,-2106.5 274.5,-2106.5 274.5,-1246.5 92.5,-1246.5"/>
<text text-anchor="start" x="100.5" y="-2094.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NewmarkMethod</text>
<text text-anchor="middle" x="183.5" y="-2083.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TVariableType, TValueType &gt;</text>
<polyline fill="none" stroke="black" points="92.5,-2076.5 274.5,-2076.5 "/>
<text text-anchor="middle" x="183.5" y="-2064.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="92.5,-2057.5 274.5,-2057.5 "/>
<text text-anchor="start" x="100.5" y="-2045.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-2034.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-2023.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-2012.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-2001.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-1990.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="100.5" y="-1979.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-1968.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateParameters()</text>
<text text-anchor="start" x="100.5" y="-1957.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetParameters()</text>
<text text-anchor="start" x="100.5" y="-1946.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetProcessInfoParameters()</text>
<text text-anchor="start" x="100.5" y="-1935.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="100.5" y="-1924.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="100.5" y="-1913.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="100.5" y="-1902.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="100.5" y="-1891.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromVariable()</text>
<text text-anchor="start" x="100.5" y="-1880.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromFirstDerivative()</text>
<text text-anchor="start" x="100.5" y="-1869.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromSecondDerivative()</text>
<text text-anchor="start" x="100.5" y="-1858.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictFromVariable()</text>
<text text-anchor="start" x="100.5" y="-1847.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictFromFirstDerivative()</text>
<text text-anchor="start" x="100.5" y="-1836.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictVariable()</text>
<text text-anchor="start" x="100.5" y="-1825.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictFirstDerivative()</text>
<text text-anchor="start" x="100.5" y="-1814.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictSecondDerivative()</text>
<text text-anchor="start" x="100.5" y="-1803.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateFromVariable()</text>
<text text-anchor="start" x="100.5" y="-1792.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateFromFirstDerivative()</text>
<text text-anchor="start" x="100.5" y="-1781.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateFromSecondDerivative()</text>
<text text-anchor="start" x="100.5" y="-1770.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateVariable()</text>
<text text-anchor="start" x="100.5" y="-1759.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateFirstDerivative()</text>
<text text-anchor="start" x="100.5" y="-1748.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateSecondDerivative()</text>
<text text-anchor="start" x="100.5" y="-1737.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetFirstDerivativeInertial</text>
<text text-anchor="start" x="100.5" y="-1726.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="100.5" y="-1715.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetSecondDerivativeInertial</text>
<text text-anchor="start" x="100.5" y="-1704.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="100.5" y="-1693.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="100.5" y="-1682.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BasePointerType</text>
<text text-anchor="start" x="100.5" y="-1671.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="100.5" y="-1660.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VariablePointer</text>
<text text-anchor="start" x="100.5" y="-1649.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="100.5" y="-1638.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="100.5" y="-1627.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="100.5" y="-1616.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="100.5" y="-1605.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="100.5" y="-1594.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-1583.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-1572.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-1561.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-1550.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-1539.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="100.5" y="-1528.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-1517.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateParameters()</text>
<text text-anchor="start" x="100.5" y="-1506.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetParameters()</text>
<text text-anchor="start" x="100.5" y="-1495.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetProcessInfoParameters()</text>
<text text-anchor="start" x="100.5" y="-1484.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="100.5" y="-1473.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="100.5" y="-1462.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="100.5" y="-1451.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="100.5" y="-1440.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromVariable()</text>
<text text-anchor="start" x="100.5" y="-1429.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromFirstDerivative()</text>
<text text-anchor="start" x="100.5" y="-1418.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromSecondDerivative()</text>
<text text-anchor="start" x="100.5" y="-1407.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictFromVariable()</text>
<text text-anchor="start" x="100.5" y="-1396.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictFromFirstDerivative()</text>
<text text-anchor="start" x="100.5" y="-1385.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictVariable()</text>
<text text-anchor="start" x="100.5" y="-1374.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictFirstDerivative()</text>
<text text-anchor="start" x="100.5" y="-1363.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictSecondDerivative()</text>
<text text-anchor="start" x="100.5" y="-1352.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateFromVariable()</text>
<text text-anchor="start" x="100.5" y="-1341.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateFromFirstDerivative()</text>
<text text-anchor="start" x="100.5" y="-1330.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateFromSecondDerivative()</text>
<text text-anchor="start" x="100.5" y="-1319.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateVariable()</text>
<text text-anchor="start" x="100.5" y="-1308.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateFirstDerivative()</text>
<text text-anchor="start" x="100.5" y="-1297.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateSecondDerivative()</text>
<text text-anchor="start" x="100.5" y="-1286.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFirstDerivativeInertial</text>
<text text-anchor="start" x="100.5" y="-1275.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="100.5" y="-1264.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSecondDerivativeInertial</text>
<text text-anchor="start" x="100.5" y="-1253.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M183.5,-1236.21C183.5,-1226.99 183.5,-1217.79 183.5,-1208.62"/>
<polygon fill="none" stroke="midnightblue" points="180,-1236.22 183.5,-1246.22 187,-1236.22 180,-1236.22"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../d0/dd4/class_kratos_1_1_time_integration_method.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="1,-2154.5 1,-3817.5 180,-3817.5 180,-2154.5 1,-2154.5"/>
<text text-anchor="start" x="9" y="-3805.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::TimeIntegrationMethod</text>
<text text-anchor="middle" x="90.5" y="-3794.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TVariableType, TValueType &gt;</text>
<polyline fill="none" stroke="black" points="1,-3787.5 180,-3787.5 "/>
<text text-anchor="start" x="9" y="-3775.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpVariable</text>
<text text-anchor="start" x="9" y="-3764.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpFirstDerivative</text>
<text text-anchor="start" x="9" y="-3753.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpSecondDerivative</text>
<text text-anchor="start" x="9" y="-3742.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpPrimaryVariable</text>
<text text-anchor="start" x="9" y="-3731.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpInputVariable</text>
<text text-anchor="start" x="9" y="-3720.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpFirstDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-3709.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="9" y="-3698.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpSecondDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-3687.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="9" y="-3676.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpFirstDerivativeInertial</text>
<text text-anchor="start" x="9" y="-3665.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="9" y="-3654.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpSecondDerivativeInertial</text>
<text text-anchor="start" x="9" y="-3643.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<polyline fill="none" stroke="black" points="1,-3636.5 180,-3636.5 "/>
<text text-anchor="start" x="9" y="-3624.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-3613.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-3602.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-3591.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-3580.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-3569.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="9" y="-3558.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-3547.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateParameters()</text>
<text text-anchor="start" x="9" y="-3536.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetParameters()</text>
<text text-anchor="start" x="9" y="-3525.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetProcessInfoParameters()</text>
<text text-anchor="start" x="9" y="-3514.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetInputVariable()</text>
<text text-anchor="start" x="9" y="-3503.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPrimaryVariableName()</text>
<text text-anchor="start" x="9" y="-3492.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetVariableName()</text>
<text text-anchor="start" x="9" y="-3481.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ HasVariableName()</text>
<text text-anchor="start" x="9" y="-3470.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ HasStepVariable()</text>
<text text-anchor="start" x="9" y="-3459.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetStepVariable()</text>
<text text-anchor="start" x="9" y="-3448.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Assign()</text>
<text text-anchor="start" x="9" y="-3437.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Predict()</text>
<text text-anchor="start" x="9" y="-3426.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Update()</text>
<text text-anchor="start" x="9" y="-3415.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="9" y="-3404.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetFirstDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-3393.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-3382.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSecondDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-3371.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-3360.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetFirstDerivativeInertial</text>
<text text-anchor="start" x="9" y="-3349.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-3338.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSecondDerivativeInertial</text>
<text text-anchor="start" x="9" y="-3327.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-3316.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetFlags()</text>
<text text-anchor="start" x="9" y="-3305.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetFlags()</text>
<text text-anchor="start" x="9" y="-3294.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetFlags()</text>
<text text-anchor="start" x="9" y="-3283.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="9" y="-3272.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="9" y="-3261.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="9" y="-3250.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetPointerMethods()</text>
<text text-anchor="start" x="9" y="-3239.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetPointerAssignMethod()</text>
<text text-anchor="start" x="9" y="-3228.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromVariable()</text>
<text text-anchor="start" x="9" y="-3217.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromFirstDerivative()</text>
<text text-anchor="start" x="9" y="-3206.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromSecondDerivative()</text>
<text text-anchor="start" x="9" y="-3195.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignVariable()</text>
<text text-anchor="start" x="9" y="-3184.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFirstDerivative()</text>
<text text-anchor="start" x="9" y="-3173.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSecondDerivative()</text>
<text text-anchor="start" x="9" y="-3162.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictFromVariable()</text>
<text text-anchor="start" x="9" y="-3151.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictFromFirstDerivative()</text>
<text text-anchor="start" x="9" y="-3140.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 10 more...</text>
<text text-anchor="start" x="9" y="-3129.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetKineticParameter()</text>
<text text-anchor="start" x="9" y="-3118.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetFirstDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-3107.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="9" y="-3096.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetSecondDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-3085.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="9" y="-3074.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetInertialParameter()</text>
<text text-anchor="start" x="9" y="-3063.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetFirstDerivativeInertial</text>
<text text-anchor="start" x="9" y="-3052.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="9" y="-3041.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetSecondDerivativeInertial</text>
<text text-anchor="start" x="9" y="-3030.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="9" y="-3019.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="9" y="-3008.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VariablePointer</text>
<text text-anchor="start" x="9" y="-2997.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ValuePointer</text>
<text text-anchor="start" x="9" y="-2986.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MethodPointer</text>
<text text-anchor="start" x="9" y="-2975.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MethodFactorPointer</text>
<text text-anchor="start" x="9" y="-2964.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethodPointer</text>
<text text-anchor="start" x="9" y="-2953.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="9" y="-2942.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="9" y="-2931.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpVariable</text>
<text text-anchor="start" x="9" y="-2920.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpFirstDerivative</text>
<text text-anchor="start" x="9" y="-2909.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpSecondDerivative</text>
<text text-anchor="start" x="9" y="-2898.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpPrimaryVariable</text>
<text text-anchor="start" x="9" y="-2887.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpInputVariable</text>
<text text-anchor="start" x="9" y="-2876.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpFirstDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-2865.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="9" y="-2854.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpSecondDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-2843.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="9" y="-2832.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpFirstDerivativeInertial</text>
<text text-anchor="start" x="9" y="-2821.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="9" y="-2810.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpSecondDerivativeInertial</text>
<text text-anchor="start" x="9" y="-2799.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="9" y="-2788.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="9" y="-2777.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="9" y="-2766.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="9" y="-2755.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-2744.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-2733.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-2722.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-2711.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-2700.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="9" y="-2689.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-2678.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateParameters()</text>
<text text-anchor="start" x="9" y="-2667.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetParameters()</text>
<text text-anchor="start" x="9" y="-2656.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetProcessInfoParameters()</text>
<text text-anchor="start" x="9" y="-2645.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetInputVariable()</text>
<text text-anchor="start" x="9" y="-2634.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPrimaryVariableName()</text>
<text text-anchor="start" x="9" y="-2623.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetVariableName()</text>
<text text-anchor="start" x="9" y="-2612.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HasVariableName()</text>
<text text-anchor="start" x="9" y="-2601.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HasStepVariable()</text>
<text text-anchor="start" x="9" y="-2590.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetStepVariable()</text>
<text text-anchor="start" x="9" y="-2579.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Assign()</text>
<text text-anchor="start" x="9" y="-2568.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Predict()</text>
<text text-anchor="start" x="9" y="-2557.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="9" y="-2546.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="9" y="-2535.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFirstDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-2524.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-2513.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSecondDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-2502.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-2491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFirstDerivativeInertial</text>
<text text-anchor="start" x="9" y="-2480.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-2469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSecondDerivativeInertial</text>
<text text-anchor="start" x="9" y="-2458.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-2447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="9" y="-2436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="9" y="-2425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="9" y="-2414.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="9" y="-2403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="9" y="-2392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="9" y="-2381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPointerMethods()</text>
<text text-anchor="start" x="9" y="-2370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPointerAssignMethod()</text>
<text text-anchor="start" x="9" y="-2359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromVariable()</text>
<text text-anchor="start" x="9" y="-2348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromFirstDerivative()</text>
<text text-anchor="start" x="9" y="-2337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromSecondDerivative()</text>
<text text-anchor="start" x="9" y="-2326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignVariable()</text>
<text text-anchor="start" x="9" y="-2315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFirstDerivative()</text>
<text text-anchor="start" x="9" y="-2304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSecondDerivative()</text>
<text text-anchor="start" x="9" y="-2293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictFromVariable()</text>
<text text-anchor="start" x="9" y="-2282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictFromFirstDerivative()</text>
<text text-anchor="start" x="9" y="-2271.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 10 more...</text>
<text text-anchor="start" x="9" y="-2260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetKineticParameter()</text>
<text text-anchor="start" x="9" y="-2249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFirstDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-2238.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="9" y="-2227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSecondDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-2216.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="9" y="-2205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetInertialParameter()</text>
<text text-anchor="start" x="9" y="-2194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFirstDerivativeInertial</text>
<text text-anchor="start" x="9" y="-2183.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="9" y="-2172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSecondDerivativeInertial</text>
<text text-anchor="start" x="9" y="-2161.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M150.32,-2144.05C151.21,-2131.46 152.1,-2118.98 152.98,-2106.62"/>
<polygon fill="none" stroke="midnightblue" points="146.81,-2143.94 149.6,-2154.16 153.8,-2144.44 146.81,-2143.94"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="0,-5654.5 0,-6525.5 149,-6525.5 149,-5654.5 0,-5654.5"/>
<text text-anchor="middle" x="74.5" y="-6513.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="0,-6506.5 149,-6506.5 "/>
<text text-anchor="middle" x="74.5" y="-6494.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-6487.5 149,-6487.5 "/>
<text text-anchor="start" x="8" y="-6475.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-6464.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="8" y="-6453.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="8" y="-6442.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="8" y="-6431.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="8" y="-6420.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="8" y="-6409.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="8" y="-6398.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="8" y="-6387.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="8" y="-6376.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="8" y="-6365.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="8" y="-6354.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="8" y="-6343.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="8" y="-6332.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="8" y="-6321.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="8" y="-6310.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="8" y="-6299.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="8" y="-6288.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="8" y="-6277.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="8" y="-6266.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-6255.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-6244.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-6233.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="8" y="-6222.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="8" y="-6211.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="8" y="-6200.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="8" y="-6189.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="8" y="-6178.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="8" y="-6167.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-6156.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-6145.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="8" y="-6134.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="8" y="-6123.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="8" y="-6112.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="8" y="-6101.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="8" y="-6090.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="8" y="-6079.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="8" y="-6068.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="8" y="-6057.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="8" y="-6046.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="8" y="-6035.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="8" y="-6024.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="8" y="-6013.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="8" y="-6002.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="8" y="-5991.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="8" y="-5980.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="8" y="-5969.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="8" y="-5958.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="8" y="-5947.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="8" y="-5936.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="8" y="-5925.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-5914.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="8" y="-5903.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="8" y="-5892.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="8" y="-5881.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="8" y="-5870.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="8" y="-5859.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="8" y="-5848.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="8" y="-5837.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="8" y="-5826.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="8" y="-5815.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="8" y="-5804.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="8" y="-5793.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="8" y="-5782.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="8" y="-5771.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="8" y="-5760.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="8" y="-5749.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="8" y="-5738.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="8" y="-5727.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="8" y="-5716.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-5705.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-5694.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-5683.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="8" y="-5672.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="8" y="-5661.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M76.79,-5644.29C79.25,-5169.02 83.19,-4404.72 86.22,-3817.54"/>
<polygon fill="none" stroke="midnightblue" points="73.29,-5644.4 76.74,-5654.41 80.29,-5644.43 73.29,-5644.4"/>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="../../d5/ddd/class_kratos_1_1_node.html" target="_top" xlink:title="This class defines the node.">
<polygon fill="none" stroke="black" points="103,-3887.5 103,-5616.5 316,-5616.5 316,-3887.5 103,-3887.5"/>
<text text-anchor="middle" x="209.5" y="-5604.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Node</text>
<polyline fill="none" stroke="black" points="103,-5597.5 316,-5597.5 "/>
<text text-anchor="middle" x="209.5" y="-5585.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="103,-5578.5 316,-5578.5 "/>
<text text-anchor="start" x="111" y="-5566.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-5555.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-5544.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-5533.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-5522.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-5511.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-5500.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-5489.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-5478.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-5467.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-5456.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 9 more...</text>
<text text-anchor="start" x="111" y="-5445.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="111" y="-5434.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator==()</text>
<text text-anchor="start" x="111" y="-5423.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="111" y="-5412.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="111" y="-5401.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="111" y="-5390.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="111" y="-5379.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="111" y="-5368.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="111" y="-5357.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CreateSolutionStepData()</text>
<text text-anchor="start" x="111" y="-5346.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CloneSolutionStepData()</text>
<text text-anchor="start" x="111" y="-5335.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ OverwriteSolutionStepData()</text>
<text text-anchor="start" x="111" y="-5324.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearSolutionStepsData()</text>
<text text-anchor="start" x="111" y="-5313.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetSolutionStepVariables</text>
<text text-anchor="start" x="111" y="-5302.5" font-family="Helvetica,sans-Serif" font-size="10.00">List()</text>
<text text-anchor="start" x="111" y="-5291.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionStepData()</text>
<text text-anchor="start" x="111" y="-5280.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionStepData()</text>
<text text-anchor="start" x="111" y="-5269.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Data()</text>
<text text-anchor="start" x="111" y="-5258.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetData()</text>
<text text-anchor="start" x="111" y="-5247.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetData()</text>
<text text-anchor="start" x="111" y="-5236.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 17 more...</text>
<text text-anchor="start" x="111" y="-5225.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Fix()</text>
<text text-anchor="start" x="111" y="-5214.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Free()</text>
<text text-anchor="start" x="111" y="-5203.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetBufferSize()</text>
<text text-anchor="start" x="111" y="-5192.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBufferSize()</text>
<text text-anchor="start" x="111" y="-5181.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetInitialPosition()</text>
<text text-anchor="start" x="111" y="-5170.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetInitialPosition()</text>
<text text-anchor="start" x="111" y="-5159.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ X0()</text>
<text text-anchor="start" x="111" y="-5148.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Y0()</text>
<text text-anchor="start" x="111" y="-5137.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Z0()</text>
<text text-anchor="start" x="111" y="-5126.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ X0()</text>
<text text-anchor="start" x="111" y="-5115.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Y0()</text>
<text text-anchor="start" x="111" y="-5104.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Z0()</text>
<text text-anchor="start" x="111" y="-5093.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetInitialPosition()</text>
<text text-anchor="start" x="111" y="-5082.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetInitialPosition()</text>
<text text-anchor="start" x="111" y="-5071.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetVariablesList()</text>
<text text-anchor="start" x="111" y="-5060.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetVariablesList()</text>
<text text-anchor="start" x="111" y="-5049.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDofPosition()</text>
<text text-anchor="start" x="111" y="-5038.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDof()</text>
<text text-anchor="start" x="111" y="-5027.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDof()</text>
<text text-anchor="start" x="111" y="-5016.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDofs()</text>
<text text-anchor="start" x="111" y="-5005.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDofs()</text>
<text text-anchor="start" x="111" y="-4994.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetDof()</text>
<text text-anchor="start" x="111" y="-4983.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetDof()</text>
<text text-anchor="start" x="111" y="-4972.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pAddDof()</text>
<text text-anchor="start" x="111" y="-4961.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pAddDof()</text>
<text text-anchor="start" x="111" y="-4950.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pAddDof()</text>
<text text-anchor="start" x="111" y="-4939.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AddDof()</text>
<text text-anchor="start" x="111" y="-4928.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AddDof()</text>
<text text-anchor="start" x="111" y="-4917.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ HasDofFor()</text>
<text text-anchor="start" x="111" y="-4906.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsFixed()</text>
<text text-anchor="start" x="111" y="-4895.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsActive()</text>
<text text-anchor="start" x="111" y="-4884.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="111" y="-4873.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="111" y="-4862.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="111" y="-4851.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="111" y="-4840.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="111" y="-4829.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointType</text>
<text text-anchor="start" x="111" y="-4818.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofType</text>
<text text-anchor="start" x="111" y="-4807.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="111" y="-4796.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="111" y="-4785.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsContainerType</text>
<text text-anchor="start" x="111" y="-4774.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStepsNodalDataContainerType</text>
<text text-anchor="start" x="111" y="-4763.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="111" y="-4752.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_INTRUSIVE</text>
<text text-anchor="start" x="111" y="-4741.5" font-family="Helvetica,sans-Serif" font-size="10.00">_POINTER_DEFINITION()</text>
<text text-anchor="start" x="111" y="-4730.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNodalData</text>
<text text-anchor="start" x="111" y="-4719.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mDofs</text>
<text text-anchor="start" x="111" y="-4708.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mData</text>
<text text-anchor="start" x="111" y="-4697.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitialPosition</text>
<text text-anchor="start" x="111" y="-4686.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNodeLock</text>
<text text-anchor="start" x="111" y="-4675.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReferenceCounter</text>
<text text-anchor="start" x="111" y="-4664.5" font-family="Helvetica,sans-Serif" font-size="10.00">* intrusive_ptr_add_ref</text>
<text text-anchor="start" x="111" y="-4653.5" font-family="Helvetica,sans-Serif" font-size="10.00">* intrusive_ptr_release</text>
<text text-anchor="start" x="111" y="-4642.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SortDofs()</text>
<text text-anchor="start" x="111" y="-4631.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="111" y="-4620.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="111" y="-4609.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="111" y="-4598.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-4587.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-4576.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-4565.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-4554.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-4543.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-4532.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-4521.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-4510.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-4499.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-4488.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 9 more...</text>
<text text-anchor="start" x="111" y="-4477.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="111" y="-4466.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==()</text>
<text text-anchor="start" x="111" y="-4455.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="111" y="-4444.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="111" y="-4433.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="111" y="-4422.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="111" y="-4411.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="111" y="-4400.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="111" y="-4389.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CreateSolutionStepData()</text>
<text text-anchor="start" x="111" y="-4378.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CloneSolutionStepData()</text>
<text text-anchor="start" x="111" y="-4367.5" font-family="Helvetica,sans-Serif" font-size="10.00">* OverwriteSolutionStepData()</text>
<text text-anchor="start" x="111" y="-4356.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearSolutionStepsData()</text>
<text text-anchor="start" x="111" y="-4345.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSolutionStepVariables</text>
<text text-anchor="start" x="111" y="-4334.5" font-family="Helvetica,sans-Serif" font-size="10.00">List()</text>
<text text-anchor="start" x="111" y="-4323.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStepData()</text>
<text text-anchor="start" x="111" y="-4312.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStepData()</text>
<text text-anchor="start" x="111" y="-4301.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Data()</text>
<text text-anchor="start" x="111" y="-4290.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetData()</text>
<text text-anchor="start" x="111" y="-4279.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetData()</text>
<text text-anchor="start" x="111" y="-4268.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 17 more...</text>
<text text-anchor="start" x="111" y="-4257.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Fix()</text>
<text text-anchor="start" x="111" y="-4246.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Free()</text>
<text text-anchor="start" x="111" y="-4235.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetBufferSize()</text>
<text text-anchor="start" x="111" y="-4224.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBufferSize()</text>
<text text-anchor="start" x="111" y="-4213.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetInitialPosition()</text>
<text text-anchor="start" x="111" y="-4202.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetInitialPosition()</text>
<text text-anchor="start" x="111" y="-4191.5" font-family="Helvetica,sans-Serif" font-size="10.00">* X0()</text>
<text text-anchor="start" x="111" y="-4180.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Y0()</text>
<text text-anchor="start" x="111" y="-4169.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Z0()</text>
<text text-anchor="start" x="111" y="-4158.5" font-family="Helvetica,sans-Serif" font-size="10.00">* X0()</text>
<text text-anchor="start" x="111" y="-4147.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Y0()</text>
<text text-anchor="start" x="111" y="-4136.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Z0()</text>
<text text-anchor="start" x="111" y="-4125.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetInitialPosition()</text>
<text text-anchor="start" x="111" y="-4114.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetInitialPosition()</text>
<text text-anchor="start" x="111" y="-4103.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetVariablesList()</text>
<text text-anchor="start" x="111" y="-4092.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetVariablesList()</text>
<text text-anchor="start" x="111" y="-4081.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDofPosition()</text>
<text text-anchor="start" x="111" y="-4070.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDof()</text>
<text text-anchor="start" x="111" y="-4059.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDof()</text>
<text text-anchor="start" x="111" y="-4048.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDofs()</text>
<text text-anchor="start" x="111" y="-4037.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDofs()</text>
<text text-anchor="start" x="111" y="-4026.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetDof()</text>
<text text-anchor="start" x="111" y="-4015.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetDof()</text>
<text text-anchor="start" x="111" y="-4004.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pAddDof()</text>
<text text-anchor="start" x="111" y="-3993.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pAddDof()</text>
<text text-anchor="start" x="111" y="-3982.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pAddDof()</text>
<text text-anchor="start" x="111" y="-3971.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddDof()</text>
<text text-anchor="start" x="111" y="-3960.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddDof()</text>
<text text-anchor="start" x="111" y="-3949.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HasDofFor()</text>
<text text-anchor="start" x="111" y="-3938.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsFixed()</text>
<text text-anchor="start" x="111" y="-3927.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsActive()</text>
<text text-anchor="start" x="111" y="-3916.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="111" y="-3905.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="111" y="-3894.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node6 -->
<g id="edge9" class="edge">
<title>Node5&#45;&gt;Node6</title>
<path fill="none" stroke="midnightblue" d="M119.43,-5644.35C120.36,-5635.14 121.3,-5625.87 122.24,-5616.55"/>
<polygon fill="none" stroke="midnightblue" points="115.95,-5644.01 118.42,-5654.32 122.91,-5644.72 115.95,-5644.01"/>
</g>
<!-- Node6&#45;&gt;Node4 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M151.24,-3887.41C149.94,-3868.16 148.64,-3848.89 147.35,-3829.66"/>
<polygon fill="none" stroke="#404040" points="147.35,-3829.65 142.95,-3823.94 146.54,-3817.68 150.93,-3823.4 147.35,-3829.65"/>
<text text-anchor="middle" x="180.5" y="-3861" font-family="Helvetica,sans-Serif" font-size="10.00"> #mpAssign</text>
<text text-anchor="middle" x="180.5" y="-3850" font-family="Helvetica,sans-Serif" font-size="10.00">#mpPredict</text>
<text text-anchor="middle" x="180.5" y="-3839" font-family="Helvetica,sans-Serif" font-size="10.00">#mpUpdate</text>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="../../d3/d3f/class_kratos_1_1_point.html" target="_top" xlink:title="Point class.">
<polygon fill="none" stroke="black" points="167,-5808.5 167,-6371.5 316,-6371.5 316,-5808.5 167,-5808.5"/>
<text text-anchor="middle" x="241.5" y="-6359.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Point</text>
<polyline fill="none" stroke="black" points="167,-6352.5 316,-6352.5 "/>
<text text-anchor="middle" x="241.5" y="-6340.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="167,-6333.5 316,-6333.5 "/>
<text text-anchor="start" x="175" y="-6321.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Point()</text>
<text text-anchor="start" x="175" y="-6310.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Point()</text>
<text text-anchor="start" x="175" y="-6299.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Point()</text>
<text text-anchor="start" x="175" y="-6288.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Point()</text>
<text text-anchor="start" x="175" y="-6277.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Point()</text>
<text text-anchor="start" x="175" y="-6266.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Point()</text>
<text text-anchor="start" x="175" y="-6255.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~Point()</text>
<text text-anchor="start" x="175" y="-6244.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="175" y="-6233.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator==()</text>
<text text-anchor="start" x="175" y="-6222.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SquaredDistance()</text>
<text text-anchor="start" x="175" y="-6211.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Distance()</text>
<text text-anchor="start" x="175" y="-6200.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="175" y="-6189.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="175" y="-6178.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="175" y="-6167.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="175" y="-6156.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CoordinatesArrayType</text>
<text text-anchor="start" x="175" y="-6145.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="175" y="-6134.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="175" y="-6123.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="175" y="-6112.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="175" y="-6101.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="175" y="-6090.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="175" y="-6079.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="175" y="-6068.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Point()</text>
<text text-anchor="start" x="175" y="-6057.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Point()</text>
<text text-anchor="start" x="175" y="-6046.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Point()</text>
<text text-anchor="start" x="175" y="-6035.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Point()</text>
<text text-anchor="start" x="175" y="-6024.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Point()</text>
<text text-anchor="start" x="175" y="-6013.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Point()</text>
<text text-anchor="start" x="175" y="-6002.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Point()</text>
<text text-anchor="start" x="175" y="-5991.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="175" y="-5980.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==()</text>
<text text-anchor="start" x="175" y="-5969.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SquaredDistance()</text>
<text text-anchor="start" x="175" y="-5958.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Distance()</text>
<text text-anchor="start" x="175" y="-5947.5" font-family="Helvetica,sans-Serif" font-size="10.00">* X()</text>
<text text-anchor="start" x="175" y="-5936.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Y()</text>
<text text-anchor="start" x="175" y="-5925.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Z()</text>
<text text-anchor="start" x="175" y="-5914.5" font-family="Helvetica,sans-Serif" font-size="10.00">* X()</text>
<text text-anchor="start" x="175" y="-5903.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Y()</text>
<text text-anchor="start" x="175" y="-5892.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Z()</text>
<text text-anchor="start" x="175" y="-5881.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Coordinates()</text>
<text text-anchor="start" x="175" y="-5870.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Coordinates()</text>
<text text-anchor="start" x="175" y="-5859.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Dimension()</text>
<text text-anchor="start" x="175" y="-5848.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="175" y="-5837.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="175" y="-5826.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="175" y="-5815.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetAllCoordinates()</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node6 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node6</title>
<path fill="none" stroke="midnightblue" d="M234.53,-5798.08C233.19,-5742.02 231.72,-5680.7 230.19,-5616.75"/>
<polygon fill="none" stroke="midnightblue" points="231.03,-5798.2 234.77,-5808.12 238.03,-5798.04 231.03,-5798.2"/>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="../../d4/ddc/class_kratos_1_1array__1d.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="159.5,-6563.5 159.5,-7379.5 323.5,-7379.5 323.5,-6563.5 159.5,-6563.5"/>
<text text-anchor="middle" x="241.5" y="-7367.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::array_1d&lt; double, 3 &gt;</text>
<polyline fill="none" stroke="black" points="159.5,-7360.5 323.5,-7360.5 "/>
<text text-anchor="middle" x="241.5" y="-7348.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="159.5,-7341.5 323.5,-7341.5 "/>
<text text-anchor="start" x="167.5" y="-7329.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="167.5" y="-7318.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="167.5" y="-7307.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="167.5" y="-7296.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="167.5" y="-7285.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="167.5" y="-7274.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="167.5" y="-7263.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="167.5" y="-7252.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="167.5" y="-7241.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="167.5" y="-7230.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="167.5" y="-7219.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="167.5" y="-7208.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="167.5" y="-7197.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="167.5" y="-7186.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator+=()</text>
<text text-anchor="start" x="167.5" y="-7175.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator&#45;=()</text>
<text text-anchor="start" x="167.5" y="-7164.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator/=()</text>
<text text-anchor="start" x="167.5" y="-7153.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator==()</text>
<text text-anchor="start" x="167.5" y="-7142.5" font-family="Helvetica,sans-Serif" font-size="10.00">* size_type</text>
<text text-anchor="start" x="167.5" y="-7131.5" font-family="Helvetica,sans-Serif" font-size="10.00">* difference_type</text>
<text text-anchor="start" x="167.5" y="-7120.5" font-family="Helvetica,sans-Serif" font-size="10.00">* value_type</text>
<text text-anchor="start" x="167.5" y="-7109.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reference</text>
<text text-anchor="start" x="167.5" y="-7098.5" font-family="Helvetica,sans-Serif" font-size="10.00">* reference</text>
<text text-anchor="start" x="167.5" y="-7087.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_type</text>
<text text-anchor="start" x="167.5" y="-7076.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pointer</text>
<text text-anchor="start" x="167.5" y="-7065.5" font-family="Helvetica,sans-Serif" font-size="10.00">* self_type</text>
<text text-anchor="start" x="167.5" y="-7054.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_closure_type</text>
<text text-anchor="start" x="167.5" y="-7043.5" font-family="Helvetica,sans-Serif" font-size="10.00">* closure_type</text>
<text text-anchor="start" x="167.5" y="-7032.5" font-family="Helvetica,sans-Serif" font-size="10.00">* vector_temporary_type</text>
<text text-anchor="start" x="167.5" y="-7021.5" font-family="Helvetica,sans-Serif" font-size="10.00">* storage_category</text>
<text text-anchor="start" x="167.5" y="-7010.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="167.5" y="-6999.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="167.5" y="-6988.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reverse_iterator</text>
<text text-anchor="start" x="167.5" y="-6977.5" font-family="Helvetica,sans-Serif" font-size="10.00">* reverse_iterator</text>
<text text-anchor="start" x="167.5" y="-6966.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_iterator_type</text>
<text text-anchor="start" x="167.5" y="-6955.5" font-family="Helvetica,sans-Serif" font-size="10.00">* iterator_type</text>
<text text-anchor="start" x="167.5" y="-6944.5" font-family="Helvetica,sans-Serif" font-size="10.00">* find()</text>
<text text-anchor="start" x="167.5" y="-6933.5" font-family="Helvetica,sans-Serif" font-size="10.00">* find()</text>
<text text-anchor="start" x="167.5" y="-6922.5" font-family="Helvetica,sans-Serif" font-size="10.00">* size()</text>
<text text-anchor="start" x="167.5" y="-6911.5" font-family="Helvetica,sans-Serif" font-size="10.00">* minus_assign()</text>
<text text-anchor="start" x="167.5" y="-6900.5" font-family="Helvetica,sans-Serif" font-size="10.00">* data()</text>
<text text-anchor="start" x="167.5" y="-6889.5" font-family="Helvetica,sans-Serif" font-size="10.00">* data()</text>
<text text-anchor="start" x="167.5" y="-6878.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="167.5" y="-6867.5" font-family="Helvetica,sans-Serif" font-size="10.00">* data_</text>
<text text-anchor="start" x="167.5" y="-6856.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="167.5" y="-6845.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="167.5" y="-6834.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="167.5" y="-6823.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="167.5" y="-6812.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="167.5" y="-6801.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="167.5" y="-6790.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="167.5" y="-6779.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="167.5" y="-6768.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="167.5" y="-6757.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="167.5" y="-6746.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="167.5" y="-6735.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="167.5" y="-6724.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="167.5" y="-6713.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator+=()</text>
<text text-anchor="start" x="167.5" y="-6702.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&#45;=()</text>
<text text-anchor="start" x="167.5" y="-6691.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator/=()</text>
<text text-anchor="start" x="167.5" y="-6680.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==()</text>
<text text-anchor="start" x="167.5" y="-6669.5" font-family="Helvetica,sans-Serif" font-size="10.00">* resize()</text>
<text text-anchor="start" x="167.5" y="-6658.5" font-family="Helvetica,sans-Serif" font-size="10.00">* assign_temporary()</text>
<text text-anchor="start" x="167.5" y="-6647.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator*=()</text>
<text text-anchor="start" x="167.5" y="-6636.5" font-family="Helvetica,sans-Serif" font-size="10.00">* plus_assign()</text>
<text text-anchor="start" x="167.5" y="-6625.5" font-family="Helvetica,sans-Serif" font-size="10.00">* assign()</text>
<text text-anchor="start" x="167.5" y="-6614.5" font-family="Helvetica,sans-Serif" font-size="10.00">* swap()</text>
<text text-anchor="start" x="167.5" y="-6603.5" font-family="Helvetica,sans-Serif" font-size="10.00">* insert_element()</text>
<text text-anchor="start" x="167.5" y="-6592.5" font-family="Helvetica,sans-Serif" font-size="10.00">* erase_element()</text>
<text text-anchor="start" x="167.5" y="-6581.5" font-family="Helvetica,sans-Serif" font-size="10.00">* clear()</text>
<text text-anchor="start" x="167.5" y="-6570.5" font-family="Helvetica,sans-Serif" font-size="10.00">* swap</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node7 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node7</title>
<path fill="none" stroke="midnightblue" d="M241.5,-6552.99C241.5,-6491.48 241.5,-6429.4 241.5,-6371.56"/>
<polygon fill="none" stroke="midnightblue" points="238,-6553.25 241.5,-6563.25 245,-6553.25 238,-6553.25"/>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:title=" ">
<polygon fill="none" stroke="#bfbfbf" points="170,-7417.5 170,-7496.5 313,-7496.5 313,-7417.5 170,-7417.5"/>
<text text-anchor="start" x="178" y="-7484.5" font-family="Helvetica,sans-Serif" font-size="10.00">boost::numeric::ublas</text>
<text text-anchor="start" x="178" y="-7473.5" font-family="Helvetica,sans-Serif" font-size="10.00">::vector_expression&lt;</text>
<text text-anchor="middle" x="241.5" y="-7462.5" font-family="Helvetica,sans-Serif" font-size="10.00"> array_1d&lt; double, N &gt; &gt;</text>
<polyline fill="none" stroke="#bfbfbf" points="170,-7455.5 313,-7455.5 "/>
<text text-anchor="middle" x="241.5" y="-7443.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#bfbfbf" points="170,-7436.5 313,-7436.5 "/>
<text text-anchor="middle" x="241.5" y="-7424.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node9&#45;&gt;Node8 -->
<g id="edge8" class="edge">
<title>Node9&#45;&gt;Node8</title>
<path fill="none" stroke="midnightblue" d="M241.5,-7407.18C241.5,-7398.86 241.5,-7389.66 241.5,-7379.75"/>
<polygon fill="none" stroke="midnightblue" points="238,-7407.25 241.5,-7417.25 245,-7407.25 238,-7407.25"/>
</g>
<!-- Node10 -->
<g id="node10" class="node">
<title>Node10</title>
<g id="a_node10"><a xlink:href="../../dc/d5c/struct_kratos_1_1_newmark_method_1_1_newmark_parameters.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="198.5,-2902.5 198.5,-3069.5 356.5,-3069.5 356.5,-2902.5 198.5,-2902.5"/>
<text text-anchor="start" x="206.5" y="-3057.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NewmarkMethod</text>
<text text-anchor="start" x="206.5" y="-3046.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TVariableType, TValueType</text>
<text text-anchor="middle" x="277.5" y="-3035.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::NewmarkParameters</text>
<polyline fill="none" stroke="black" points="198.5,-3028.5 356.5,-3028.5 "/>
<text text-anchor="start" x="206.5" y="-3016.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ beta</text>
<text text-anchor="start" x="206.5" y="-3005.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ gamma</text>
<text text-anchor="start" x="206.5" y="-2994.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ delta_time</text>
<text text-anchor="start" x="206.5" y="-2983.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ c0</text>
<text text-anchor="start" x="206.5" y="-2972.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ c1</text>
<text text-anchor="start" x="206.5" y="-2961.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ c2</text>
<text text-anchor="start" x="206.5" y="-2950.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ c3</text>
<text text-anchor="start" x="206.5" y="-2939.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ c4</text>
<text text-anchor="start" x="206.5" y="-2928.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ c5</text>
<polyline fill="none" stroke="black" points="198.5,-2921.5 356.5,-2921.5 "/>
<text text-anchor="start" x="206.5" y="-2909.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetParameters()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node3 -->
<g id="edge10" class="edge">
<title>Node10&#45;&gt;Node3</title>
<path fill="none" stroke="#404040" d="M271.55,-2902.22C260.4,-2747.19 235.67,-2403.1 215.24,-2119"/>
<polygon fill="none" stroke="#404040" points="215.22,-2118.77 210.8,-2113.07 214.36,-2106.8 218.78,-2112.49 215.22,-2118.77"/>
<text text-anchor="middle" x="251" y="-2128" font-family="Helvetica,sans-Serif" font-size="10.00"> #mNewmark</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_newmark_step_rotation_method__coll__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
