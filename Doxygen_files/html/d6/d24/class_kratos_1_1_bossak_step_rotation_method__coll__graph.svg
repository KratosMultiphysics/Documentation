<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::BossakStepRotationMethod&lt; TVariableType, TValueType &gt; Pages: 1 -->
<!--zoomable 8106 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 365;
var viewHeight = 8106;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::BossakStepRotationMethod&lt; TVariableType, TValueType &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Short class definition.">
<polygon fill="#bfbfbf" stroke="black" points="94,-0.5 94,-563.5 273,-563.5 273,-0.5 94,-0.5"/>
<text text-anchor="start" x="102" y="-551.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::BossakStepRotation</text>
<text text-anchor="start" x="102" y="-540.5" font-family="Helvetica,sans-Serif" font-size="10.00">Method&lt; TVariableType,</text>
<text text-anchor="middle" x="183.5" y="-529.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TValueType &gt;</text>
<polyline fill="none" stroke="black" points="94,-522.5 273,-522.5 "/>
<text text-anchor="start" x="102" y="-510.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mAlpha</text>
<polyline fill="none" stroke="black" points="94,-503.5 273,-503.5 "/>
<text text-anchor="start" x="102" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BossakStepRotationMethod()</text>
<text text-anchor="start" x="102" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BossakStepRotationMethod()</text>
<text text-anchor="start" x="102" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BossakStepRotationMethod()</text>
<text text-anchor="start" x="102" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BossakStepRotationMethod()</text>
<text text-anchor="start" x="102" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BossakStepRotationMethod()</text>
<text text-anchor="start" x="102" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="102" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~BossakStepRotationMethod()</text>
<text text-anchor="start" x="102" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateParameters()</text>
<text text-anchor="start" x="102" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetParameters()</text>
<text text-anchor="start" x="102" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetProcessInfoParameters()</text>
<text text-anchor="start" x="102" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="102" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="102" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="102" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetSecondDerivativeKinetic</text>
<text text-anchor="start" x="102" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="102" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetSecondDerivativeInertial</text>
<text text-anchor="start" x="102" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="102" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="102" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BasePointerType</text>
<text text-anchor="start" x="102" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="102" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VariablePointer</text>
<text text-anchor="start" x="102" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DerivedType</text>
<text text-anchor="start" x="102" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="102" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="102" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mAlpha</text>
<text text-anchor="start" x="102" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="102" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="102" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="102" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BossakStepRotationMethod()</text>
<text text-anchor="start" x="102" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BossakStepRotationMethod()</text>
<text text-anchor="start" x="102" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BossakStepRotationMethod()</text>
<text text-anchor="start" x="102" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BossakStepRotationMethod()</text>
<text text-anchor="start" x="102" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BossakStepRotationMethod()</text>
<text text-anchor="start" x="102" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="102" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~BossakStepRotationMethod()</text>
<text text-anchor="start" x="102" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateParameters()</text>
<text text-anchor="start" x="102" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetParameters()</text>
<text text-anchor="start" x="102" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetProcessInfoParameters()</text>
<text text-anchor="start" x="102" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="102" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="102" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="102" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSecondDerivativeKinetic</text>
<text text-anchor="start" x="102" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="102" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSecondDerivativeInertial</text>
<text text-anchor="start" x="102" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../da/d6a/class_kratos_1_1_newmark_step_rotation_method.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="80.5,-601.5 80.5,-1043.5 286.5,-1043.5 286.5,-601.5 80.5,-601.5"/>
<text text-anchor="start" x="88.5" y="-1031.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NewmarkStepRotation</text>
<text text-anchor="middle" x="183.5" y="-1020.5" font-family="Helvetica,sans-Serif" font-size="10.00">Method&lt; TVariableType, TValueType &gt;</text>
<polyline fill="none" stroke="black" points="80.5,-1013.5 286.5,-1013.5 "/>
<text text-anchor="middle" x="183.5" y="-1001.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="80.5,-994.5 286.5,-994.5 "/>
<text text-anchor="start" x="88.5" y="-982.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Update()</text>
<text text-anchor="start" x="88.5" y="-971.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-960.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-949.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-938.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-927.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-916.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="88.5" y="-905.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-894.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Update()</text>
<text text-anchor="start" x="88.5" y="-883.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="88.5" y="-872.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="88.5" y="-861.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="88.5" y="-850.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Update()</text>
<text text-anchor="start" x="88.5" y="-839.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="88.5" y="-828.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BasePointerType</text>
<text text-anchor="start" x="88.5" y="-817.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="88.5" y="-806.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VariablePointer</text>
<text text-anchor="start" x="88.5" y="-795.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DerivedType</text>
<text text-anchor="start" x="88.5" y="-784.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="88.5" y="-773.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="88.5" y="-762.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="88.5" y="-751.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="88.5" y="-740.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="88.5" y="-729.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-718.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-707.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-696.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-685.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-674.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="88.5" y="-663.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~NewmarkStepRotationMethod()</text>
<text text-anchor="start" x="88.5" y="-652.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="88.5" y="-641.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="88.5" y="-630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="88.5" y="-619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="88.5" y="-608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M183.5,-591.14C183.5,-582.12 183.5,-573.03 183.5,-563.93"/>
<polygon fill="none" stroke="midnightblue" points="180,-591.31 183.5,-601.31 187,-591.31 180,-591.31"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d4/db7/class_kratos_1_1_newmark_step_method.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="94,-1081.5 94,-1809.5 273,-1809.5 273,-1081.5 94,-1081.5"/>
<text text-anchor="start" x="102" y="-1797.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NewmarkStepMethod</text>
<text text-anchor="middle" x="183.5" y="-1786.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TVariableType, TValueType &gt;</text>
<polyline fill="none" stroke="black" points="94,-1779.5 273,-1779.5 "/>
<text text-anchor="start" x="102" y="-1767.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpStepVariable</text>
<polyline fill="none" stroke="black" points="94,-1760.5 273,-1760.5 "/>
<text text-anchor="start" x="102" y="-1748.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-1737.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-1726.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-1715.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-1704.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-1693.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="102" y="-1682.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-1671.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ HasStepVariable()</text>
<text text-anchor="start" x="102" y="-1660.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetStepVariable()</text>
<text text-anchor="start" x="102" y="-1649.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="102" y="-1638.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="102" y="-1627.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="102" y="-1616.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="102" y="-1605.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromFirstDerivative()</text>
<text text-anchor="start" x="102" y="-1594.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromSecondDerivative()</text>
<text text-anchor="start" x="102" y="-1583.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictFromVariable()</text>
<text text-anchor="start" x="102" y="-1572.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictStepVariable()</text>
<text text-anchor="start" x="102" y="-1561.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictVariable()</text>
<text text-anchor="start" x="102" y="-1550.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictFirstDerivative()</text>
<text text-anchor="start" x="102" y="-1539.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictSecondDerivative()</text>
<text text-anchor="start" x="102" y="-1528.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateFromVariable()</text>
<text text-anchor="start" x="102" y="-1517.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateStepVariable()</text>
<text text-anchor="start" x="102" y="-1506.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateVariable()</text>
<text text-anchor="start" x="102" y="-1495.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateFirstDerivative()</text>
<text text-anchor="start" x="102" y="-1484.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateSecondDerivative()</text>
<text text-anchor="start" x="102" y="-1473.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="102" y="-1462.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BasePointerType</text>
<text text-anchor="start" x="102" y="-1451.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="102" y="-1440.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VariablePointer</text>
<text text-anchor="start" x="102" y="-1429.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DerivedType</text>
<text text-anchor="start" x="102" y="-1418.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="102" y="-1407.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="102" y="-1396.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpStepVariable</text>
<text text-anchor="start" x="102" y="-1385.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="102" y="-1374.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="102" y="-1363.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="102" y="-1352.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-1341.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-1330.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-1319.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-1308.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-1297.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="102" y="-1286.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~NewmarkStepMethod()</text>
<text text-anchor="start" x="102" y="-1275.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HasStepVariable()</text>
<text text-anchor="start" x="102" y="-1264.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetStepVariable()</text>
<text text-anchor="start" x="102" y="-1253.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="102" y="-1242.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="102" y="-1231.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="102" y="-1220.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="102" y="-1209.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromFirstDerivative()</text>
<text text-anchor="start" x="102" y="-1198.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromSecondDerivative()</text>
<text text-anchor="start" x="102" y="-1187.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictFromVariable()</text>
<text text-anchor="start" x="102" y="-1176.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictStepVariable()</text>
<text text-anchor="start" x="102" y="-1165.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictVariable()</text>
<text text-anchor="start" x="102" y="-1154.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictFirstDerivative()</text>
<text text-anchor="start" x="102" y="-1143.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictSecondDerivative()</text>
<text text-anchor="start" x="102" y="-1132.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateFromVariable()</text>
<text text-anchor="start" x="102" y="-1121.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateStepVariable()</text>
<text text-anchor="start" x="102" y="-1110.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateVariable()</text>
<text text-anchor="start" x="102" y="-1099.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateFirstDerivative()</text>
<text text-anchor="start" x="102" y="-1088.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateSecondDerivative()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M183.5,-1071.34C183.5,-1062.04 183.5,-1052.81 183.5,-1043.7"/>
<polygon fill="none" stroke="midnightblue" points="180,-1071.46 183.5,-1081.46 187,-1071.46 180,-1071.46"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../df/d06/class_kratos_1_1_newmark_method.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="92.5,-1847.5 92.5,-2707.5 274.5,-2707.5 274.5,-1847.5 92.5,-1847.5"/>
<text text-anchor="start" x="100.5" y="-2695.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NewmarkMethod</text>
<text text-anchor="middle" x="183.5" y="-2684.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TVariableType, TValueType &gt;</text>
<polyline fill="none" stroke="black" points="92.5,-2677.5 274.5,-2677.5 "/>
<text text-anchor="middle" x="183.5" y="-2665.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="92.5,-2658.5 274.5,-2658.5 "/>
<text text-anchor="start" x="100.5" y="-2646.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-2635.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-2624.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-2613.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-2602.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-2591.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="100.5" y="-2580.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-2569.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateParameters()</text>
<text text-anchor="start" x="100.5" y="-2558.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetParameters()</text>
<text text-anchor="start" x="100.5" y="-2547.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetProcessInfoParameters()</text>
<text text-anchor="start" x="100.5" y="-2536.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="100.5" y="-2525.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="100.5" y="-2514.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="100.5" y="-2503.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="100.5" y="-2492.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromVariable()</text>
<text text-anchor="start" x="100.5" y="-2481.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromFirstDerivative()</text>
<text text-anchor="start" x="100.5" y="-2470.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromSecondDerivative()</text>
<text text-anchor="start" x="100.5" y="-2459.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictFromVariable()</text>
<text text-anchor="start" x="100.5" y="-2448.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictFromFirstDerivative()</text>
<text text-anchor="start" x="100.5" y="-2437.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictVariable()</text>
<text text-anchor="start" x="100.5" y="-2426.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictFirstDerivative()</text>
<text text-anchor="start" x="100.5" y="-2415.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictSecondDerivative()</text>
<text text-anchor="start" x="100.5" y="-2404.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateFromVariable()</text>
<text text-anchor="start" x="100.5" y="-2393.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateFromFirstDerivative()</text>
<text text-anchor="start" x="100.5" y="-2382.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateFromSecondDerivative()</text>
<text text-anchor="start" x="100.5" y="-2371.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateVariable()</text>
<text text-anchor="start" x="100.5" y="-2360.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateFirstDerivative()</text>
<text text-anchor="start" x="100.5" y="-2349.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateSecondDerivative()</text>
<text text-anchor="start" x="100.5" y="-2338.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetFirstDerivativeInertial</text>
<text text-anchor="start" x="100.5" y="-2327.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="100.5" y="-2316.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetSecondDerivativeInertial</text>
<text text-anchor="start" x="100.5" y="-2305.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="100.5" y="-2294.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="100.5" y="-2283.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BasePointerType</text>
<text text-anchor="start" x="100.5" y="-2272.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="100.5" y="-2261.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VariablePointer</text>
<text text-anchor="start" x="100.5" y="-2250.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="100.5" y="-2239.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="100.5" y="-2228.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="100.5" y="-2217.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="100.5" y="-2206.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="100.5" y="-2195.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-2184.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-2173.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-2162.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-2151.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-2140.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="100.5" y="-2129.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~NewmarkMethod()</text>
<text text-anchor="start" x="100.5" y="-2118.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateParameters()</text>
<text text-anchor="start" x="100.5" y="-2107.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetParameters()</text>
<text text-anchor="start" x="100.5" y="-2096.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetProcessInfoParameters()</text>
<text text-anchor="start" x="100.5" y="-2085.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="100.5" y="-2074.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="100.5" y="-2063.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="100.5" y="-2052.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="100.5" y="-2041.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromVariable()</text>
<text text-anchor="start" x="100.5" y="-2030.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromFirstDerivative()</text>
<text text-anchor="start" x="100.5" y="-2019.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromSecondDerivative()</text>
<text text-anchor="start" x="100.5" y="-2008.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictFromVariable()</text>
<text text-anchor="start" x="100.5" y="-1997.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictFromFirstDerivative()</text>
<text text-anchor="start" x="100.5" y="-1986.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictVariable()</text>
<text text-anchor="start" x="100.5" y="-1975.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictFirstDerivative()</text>
<text text-anchor="start" x="100.5" y="-1964.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictSecondDerivative()</text>
<text text-anchor="start" x="100.5" y="-1953.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateFromVariable()</text>
<text text-anchor="start" x="100.5" y="-1942.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateFromFirstDerivative()</text>
<text text-anchor="start" x="100.5" y="-1931.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateFromSecondDerivative()</text>
<text text-anchor="start" x="100.5" y="-1920.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateVariable()</text>
<text text-anchor="start" x="100.5" y="-1909.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateFirstDerivative()</text>
<text text-anchor="start" x="100.5" y="-1898.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateSecondDerivative()</text>
<text text-anchor="start" x="100.5" y="-1887.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFirstDerivativeInertial</text>
<text text-anchor="start" x="100.5" y="-1876.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="100.5" y="-1865.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSecondDerivativeInertial</text>
<text text-anchor="start" x="100.5" y="-1854.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M183.5,-1837.21C183.5,-1827.99 183.5,-1818.79 183.5,-1809.62"/>
<polygon fill="none" stroke="midnightblue" points="180,-1837.22 183.5,-1847.22 187,-1837.22 180,-1837.22"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../d0/dd4/class_kratos_1_1_time_integration_method.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="1,-2755.5 1,-4418.5 180,-4418.5 180,-2755.5 1,-2755.5"/>
<text text-anchor="start" x="9" y="-4406.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::TimeIntegrationMethod</text>
<text text-anchor="middle" x="90.5" y="-4395.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TVariableType, TValueType &gt;</text>
<polyline fill="none" stroke="black" points="1,-4388.5 180,-4388.5 "/>
<text text-anchor="start" x="9" y="-4376.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpVariable</text>
<text text-anchor="start" x="9" y="-4365.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpFirstDerivative</text>
<text text-anchor="start" x="9" y="-4354.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpSecondDerivative</text>
<text text-anchor="start" x="9" y="-4343.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpPrimaryVariable</text>
<text text-anchor="start" x="9" y="-4332.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpInputVariable</text>
<text text-anchor="start" x="9" y="-4321.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpFirstDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-4310.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="9" y="-4299.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpSecondDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-4288.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="9" y="-4277.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpFirstDerivativeInertial</text>
<text text-anchor="start" x="9" y="-4266.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="9" y="-4255.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpSecondDerivativeInertial</text>
<text text-anchor="start" x="9" y="-4244.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<polyline fill="none" stroke="black" points="1,-4237.5 180,-4237.5 "/>
<text text-anchor="start" x="9" y="-4225.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-4214.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-4203.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-4192.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-4181.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-4170.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="9" y="-4159.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-4148.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateParameters()</text>
<text text-anchor="start" x="9" y="-4137.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetParameters()</text>
<text text-anchor="start" x="9" y="-4126.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetProcessInfoParameters()</text>
<text text-anchor="start" x="9" y="-4115.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetInputVariable()</text>
<text text-anchor="start" x="9" y="-4104.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPrimaryVariableName()</text>
<text text-anchor="start" x="9" y="-4093.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetVariableName()</text>
<text text-anchor="start" x="9" y="-4082.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ HasVariableName()</text>
<text text-anchor="start" x="9" y="-4071.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ HasStepVariable()</text>
<text text-anchor="start" x="9" y="-4060.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetStepVariable()</text>
<text text-anchor="start" x="9" y="-4049.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Assign()</text>
<text text-anchor="start" x="9" y="-4038.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Predict()</text>
<text text-anchor="start" x="9" y="-4027.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Update()</text>
<text text-anchor="start" x="9" y="-4016.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="9" y="-4005.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetFirstDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-3994.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-3983.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSecondDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-3972.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-3961.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetFirstDerivativeInertial</text>
<text text-anchor="start" x="9" y="-3950.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-3939.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSecondDerivativeInertial</text>
<text text-anchor="start" x="9" y="-3928.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-3917.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetFlags()</text>
<text text-anchor="start" x="9" y="-3906.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetFlags()</text>
<text text-anchor="start" x="9" y="-3895.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetFlags()</text>
<text text-anchor="start" x="9" y="-3884.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="9" y="-3873.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="9" y="-3862.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="9" y="-3851.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetPointerMethods()</text>
<text text-anchor="start" x="9" y="-3840.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetPointerAssignMethod()</text>
<text text-anchor="start" x="9" y="-3829.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromVariable()</text>
<text text-anchor="start" x="9" y="-3818.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromFirstDerivative()</text>
<text text-anchor="start" x="9" y="-3807.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromSecondDerivative()</text>
<text text-anchor="start" x="9" y="-3796.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignVariable()</text>
<text text-anchor="start" x="9" y="-3785.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFirstDerivative()</text>
<text text-anchor="start" x="9" y="-3774.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSecondDerivative()</text>
<text text-anchor="start" x="9" y="-3763.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictFromVariable()</text>
<text text-anchor="start" x="9" y="-3752.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictFromFirstDerivative()</text>
<text text-anchor="start" x="9" y="-3741.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 10 more...</text>
<text text-anchor="start" x="9" y="-3730.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetKineticParameter()</text>
<text text-anchor="start" x="9" y="-3719.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetFirstDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-3708.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="9" y="-3697.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetSecondDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-3686.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="9" y="-3675.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetInertialParameter()</text>
<text text-anchor="start" x="9" y="-3664.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetFirstDerivativeInertial</text>
<text text-anchor="start" x="9" y="-3653.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="9" y="-3642.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetSecondDerivativeInertial</text>
<text text-anchor="start" x="9" y="-3631.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="9" y="-3620.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="9" y="-3609.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VariablePointer</text>
<text text-anchor="start" x="9" y="-3598.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ValuePointer</text>
<text text-anchor="start" x="9" y="-3587.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MethodPointer</text>
<text text-anchor="start" x="9" y="-3576.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MethodFactorPointer</text>
<text text-anchor="start" x="9" y="-3565.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethodPointer</text>
<text text-anchor="start" x="9" y="-3554.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="9" y="-3543.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="9" y="-3532.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpVariable</text>
<text text-anchor="start" x="9" y="-3521.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpFirstDerivative</text>
<text text-anchor="start" x="9" y="-3510.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpSecondDerivative</text>
<text text-anchor="start" x="9" y="-3499.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpPrimaryVariable</text>
<text text-anchor="start" x="9" y="-3488.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpInputVariable</text>
<text text-anchor="start" x="9" y="-3477.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpFirstDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-3466.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="9" y="-3455.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpSecondDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-3444.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="9" y="-3433.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpFirstDerivativeInertial</text>
<text text-anchor="start" x="9" y="-3422.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="9" y="-3411.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpSecondDerivativeInertial</text>
<text text-anchor="start" x="9" y="-3400.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="9" y="-3389.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="9" y="-3378.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="9" y="-3367.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="9" y="-3356.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-3345.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-3334.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-3323.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-3312.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-3301.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="9" y="-3290.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-3279.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateParameters()</text>
<text text-anchor="start" x="9" y="-3268.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetParameters()</text>
<text text-anchor="start" x="9" y="-3257.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetProcessInfoParameters()</text>
<text text-anchor="start" x="9" y="-3246.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetInputVariable()</text>
<text text-anchor="start" x="9" y="-3235.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPrimaryVariableName()</text>
<text text-anchor="start" x="9" y="-3224.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetVariableName()</text>
<text text-anchor="start" x="9" y="-3213.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HasVariableName()</text>
<text text-anchor="start" x="9" y="-3202.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HasStepVariable()</text>
<text text-anchor="start" x="9" y="-3191.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetStepVariable()</text>
<text text-anchor="start" x="9" y="-3180.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Assign()</text>
<text text-anchor="start" x="9" y="-3169.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Predict()</text>
<text text-anchor="start" x="9" y="-3158.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="9" y="-3147.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="9" y="-3136.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFirstDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-3125.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-3114.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSecondDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-3103.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-3092.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFirstDerivativeInertial</text>
<text text-anchor="start" x="9" y="-3081.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-3070.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSecondDerivativeInertial</text>
<text text-anchor="start" x="9" y="-3059.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-3048.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="9" y="-3037.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="9" y="-3026.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="9" y="-3015.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="9" y="-3004.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="9" y="-2993.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="9" y="-2982.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPointerMethods()</text>
<text text-anchor="start" x="9" y="-2971.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPointerAssignMethod()</text>
<text text-anchor="start" x="9" y="-2960.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromVariable()</text>
<text text-anchor="start" x="9" y="-2949.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromFirstDerivative()</text>
<text text-anchor="start" x="9" y="-2938.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromSecondDerivative()</text>
<text text-anchor="start" x="9" y="-2927.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignVariable()</text>
<text text-anchor="start" x="9" y="-2916.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFirstDerivative()</text>
<text text-anchor="start" x="9" y="-2905.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSecondDerivative()</text>
<text text-anchor="start" x="9" y="-2894.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictFromVariable()</text>
<text text-anchor="start" x="9" y="-2883.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictFromFirstDerivative()</text>
<text text-anchor="start" x="9" y="-2872.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 10 more...</text>
<text text-anchor="start" x="9" y="-2861.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetKineticParameter()</text>
<text text-anchor="start" x="9" y="-2850.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFirstDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-2839.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="9" y="-2828.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSecondDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-2817.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="9" y="-2806.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetInertialParameter()</text>
<text text-anchor="start" x="9" y="-2795.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFirstDerivativeInertial</text>
<text text-anchor="start" x="9" y="-2784.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="9" y="-2773.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSecondDerivativeInertial</text>
<text text-anchor="start" x="9" y="-2762.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M150.32,-2745.05C151.21,-2732.46 152.1,-2719.98 152.98,-2707.62"/>
<polygon fill="none" stroke="midnightblue" points="146.81,-2744.94 149.6,-2755.16 153.8,-2745.44 146.81,-2744.94"/>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="0,-6255.5 0,-7126.5 149,-7126.5 149,-6255.5 0,-6255.5"/>
<text text-anchor="middle" x="74.5" y="-7114.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="0,-7107.5 149,-7107.5 "/>
<text text-anchor="middle" x="74.5" y="-7095.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-7088.5 149,-7088.5 "/>
<text text-anchor="start" x="8" y="-7076.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-7065.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="8" y="-7054.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="8" y="-7043.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="8" y="-7032.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="8" y="-7021.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="8" y="-7010.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="8" y="-6999.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="8" y="-6988.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="8" y="-6977.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="8" y="-6966.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="8" y="-6955.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="8" y="-6944.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="8" y="-6933.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="8" y="-6922.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="8" y="-6911.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="8" y="-6900.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="8" y="-6889.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="8" y="-6878.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="8" y="-6867.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-6856.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-6845.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-6834.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="8" y="-6823.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="8" y="-6812.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="8" y="-6801.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="8" y="-6790.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="8" y="-6779.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="8" y="-6768.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-6757.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-6746.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="8" y="-6735.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="8" y="-6724.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="8" y="-6713.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="8" y="-6702.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="8" y="-6691.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="8" y="-6680.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="8" y="-6669.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="8" y="-6658.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="8" y="-6647.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="8" y="-6636.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="8" y="-6625.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="8" y="-6614.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="8" y="-6603.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="8" y="-6592.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="8" y="-6581.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="8" y="-6570.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="8" y="-6559.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="8" y="-6548.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="8" y="-6537.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="8" y="-6526.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-6515.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="8" y="-6504.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="8" y="-6493.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="8" y="-6482.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="8" y="-6471.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="8" y="-6460.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="8" y="-6449.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="8" y="-6438.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="8" y="-6427.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="8" y="-6416.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="8" y="-6405.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="8" y="-6394.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="8" y="-6383.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="8" y="-6372.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="8" y="-6361.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="8" y="-6350.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="8" y="-6339.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="8" y="-6328.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="8" y="-6317.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-6306.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-6295.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-6284.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="8" y="-6273.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="8" y="-6262.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M76.79,-6245.29C79.25,-5770.02 83.19,-5005.72 86.22,-4418.54"/>
<polygon fill="none" stroke="midnightblue" points="73.29,-6245.4 76.74,-6255.41 80.29,-6245.43 73.29,-6245.4"/>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="../../d5/ddd/class_kratos_1_1_node.html" target="_top" xlink:title="This class defines the node.">
<polygon fill="none" stroke="black" points="103,-4488.5 103,-6217.5 316,-6217.5 316,-4488.5 103,-4488.5"/>
<text text-anchor="middle" x="209.5" y="-6205.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Node</text>
<polyline fill="none" stroke="black" points="103,-6198.5 316,-6198.5 "/>
<text text-anchor="middle" x="209.5" y="-6186.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="103,-6179.5 316,-6179.5 "/>
<text text-anchor="start" x="111" y="-6167.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-6156.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-6145.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-6134.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-6123.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-6112.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-6101.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-6090.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-6079.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-6068.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-6057.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 9 more...</text>
<text text-anchor="start" x="111" y="-6046.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="111" y="-6035.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator==()</text>
<text text-anchor="start" x="111" y="-6024.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="111" y="-6013.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="111" y="-6002.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="111" y="-5991.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="111" y="-5980.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="111" y="-5969.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="111" y="-5958.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CreateSolutionStepData()</text>
<text text-anchor="start" x="111" y="-5947.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CloneSolutionStepData()</text>
<text text-anchor="start" x="111" y="-5936.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ OverwriteSolutionStepData()</text>
<text text-anchor="start" x="111" y="-5925.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearSolutionStepsData()</text>
<text text-anchor="start" x="111" y="-5914.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetSolutionStepVariables</text>
<text text-anchor="start" x="111" y="-5903.5" font-family="Helvetica,sans-Serif" font-size="10.00">List()</text>
<text text-anchor="start" x="111" y="-5892.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionStepData()</text>
<text text-anchor="start" x="111" y="-5881.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionStepData()</text>
<text text-anchor="start" x="111" y="-5870.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Data()</text>
<text text-anchor="start" x="111" y="-5859.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetData()</text>
<text text-anchor="start" x="111" y="-5848.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetData()</text>
<text text-anchor="start" x="111" y="-5837.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 17 more...</text>
<text text-anchor="start" x="111" y="-5826.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Fix()</text>
<text text-anchor="start" x="111" y="-5815.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Free()</text>
<text text-anchor="start" x="111" y="-5804.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetBufferSize()</text>
<text text-anchor="start" x="111" y="-5793.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBufferSize()</text>
<text text-anchor="start" x="111" y="-5782.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetInitialPosition()</text>
<text text-anchor="start" x="111" y="-5771.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetInitialPosition()</text>
<text text-anchor="start" x="111" y="-5760.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ X0()</text>
<text text-anchor="start" x="111" y="-5749.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Y0()</text>
<text text-anchor="start" x="111" y="-5738.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Z0()</text>
<text text-anchor="start" x="111" y="-5727.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ X0()</text>
<text text-anchor="start" x="111" y="-5716.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Y0()</text>
<text text-anchor="start" x="111" y="-5705.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Z0()</text>
<text text-anchor="start" x="111" y="-5694.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetInitialPosition()</text>
<text text-anchor="start" x="111" y="-5683.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetInitialPosition()</text>
<text text-anchor="start" x="111" y="-5672.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetVariablesList()</text>
<text text-anchor="start" x="111" y="-5661.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetVariablesList()</text>
<text text-anchor="start" x="111" y="-5650.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDofPosition()</text>
<text text-anchor="start" x="111" y="-5639.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDof()</text>
<text text-anchor="start" x="111" y="-5628.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDof()</text>
<text text-anchor="start" x="111" y="-5617.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDofs()</text>
<text text-anchor="start" x="111" y="-5606.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDofs()</text>
<text text-anchor="start" x="111" y="-5595.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetDof()</text>
<text text-anchor="start" x="111" y="-5584.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetDof()</text>
<text text-anchor="start" x="111" y="-5573.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pAddDof()</text>
<text text-anchor="start" x="111" y="-5562.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pAddDof()</text>
<text text-anchor="start" x="111" y="-5551.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pAddDof()</text>
<text text-anchor="start" x="111" y="-5540.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AddDof()</text>
<text text-anchor="start" x="111" y="-5529.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AddDof()</text>
<text text-anchor="start" x="111" y="-5518.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ HasDofFor()</text>
<text text-anchor="start" x="111" y="-5507.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsFixed()</text>
<text text-anchor="start" x="111" y="-5496.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsActive()</text>
<text text-anchor="start" x="111" y="-5485.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="111" y="-5474.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="111" y="-5463.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="111" y="-5452.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="111" y="-5441.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="111" y="-5430.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointType</text>
<text text-anchor="start" x="111" y="-5419.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofType</text>
<text text-anchor="start" x="111" y="-5408.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="111" y="-5397.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="111" y="-5386.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsContainerType</text>
<text text-anchor="start" x="111" y="-5375.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStepsNodalDataContainerType</text>
<text text-anchor="start" x="111" y="-5364.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="111" y="-5353.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_INTRUSIVE</text>
<text text-anchor="start" x="111" y="-5342.5" font-family="Helvetica,sans-Serif" font-size="10.00">_POINTER_DEFINITION()</text>
<text text-anchor="start" x="111" y="-5331.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNodalData</text>
<text text-anchor="start" x="111" y="-5320.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mDofs</text>
<text text-anchor="start" x="111" y="-5309.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mData</text>
<text text-anchor="start" x="111" y="-5298.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitialPosition</text>
<text text-anchor="start" x="111" y="-5287.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNodeLock</text>
<text text-anchor="start" x="111" y="-5276.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReferenceCounter</text>
<text text-anchor="start" x="111" y="-5265.5" font-family="Helvetica,sans-Serif" font-size="10.00">* intrusive_ptr_add_ref</text>
<text text-anchor="start" x="111" y="-5254.5" font-family="Helvetica,sans-Serif" font-size="10.00">* intrusive_ptr_release</text>
<text text-anchor="start" x="111" y="-5243.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SortDofs()</text>
<text text-anchor="start" x="111" y="-5232.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="111" y="-5221.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="111" y="-5210.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="111" y="-5199.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-5188.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-5177.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-5166.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-5155.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-5144.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-5133.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-5122.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-5111.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-5100.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-5089.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 9 more...</text>
<text text-anchor="start" x="111" y="-5078.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="111" y="-5067.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==()</text>
<text text-anchor="start" x="111" y="-5056.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="111" y="-5045.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="111" y="-5034.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="111" y="-5023.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="111" y="-5012.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="111" y="-5001.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="111" y="-4990.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CreateSolutionStepData()</text>
<text text-anchor="start" x="111" y="-4979.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CloneSolutionStepData()</text>
<text text-anchor="start" x="111" y="-4968.5" font-family="Helvetica,sans-Serif" font-size="10.00">* OverwriteSolutionStepData()</text>
<text text-anchor="start" x="111" y="-4957.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearSolutionStepsData()</text>
<text text-anchor="start" x="111" y="-4946.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSolutionStepVariables</text>
<text text-anchor="start" x="111" y="-4935.5" font-family="Helvetica,sans-Serif" font-size="10.00">List()</text>
<text text-anchor="start" x="111" y="-4924.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStepData()</text>
<text text-anchor="start" x="111" y="-4913.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStepData()</text>
<text text-anchor="start" x="111" y="-4902.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Data()</text>
<text text-anchor="start" x="111" y="-4891.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetData()</text>
<text text-anchor="start" x="111" y="-4880.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetData()</text>
<text text-anchor="start" x="111" y="-4869.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 17 more...</text>
<text text-anchor="start" x="111" y="-4858.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Fix()</text>
<text text-anchor="start" x="111" y="-4847.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Free()</text>
<text text-anchor="start" x="111" y="-4836.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetBufferSize()</text>
<text text-anchor="start" x="111" y="-4825.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBufferSize()</text>
<text text-anchor="start" x="111" y="-4814.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetInitialPosition()</text>
<text text-anchor="start" x="111" y="-4803.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetInitialPosition()</text>
<text text-anchor="start" x="111" y="-4792.5" font-family="Helvetica,sans-Serif" font-size="10.00">* X0()</text>
<text text-anchor="start" x="111" y="-4781.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Y0()</text>
<text text-anchor="start" x="111" y="-4770.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Z0()</text>
<text text-anchor="start" x="111" y="-4759.5" font-family="Helvetica,sans-Serif" font-size="10.00">* X0()</text>
<text text-anchor="start" x="111" y="-4748.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Y0()</text>
<text text-anchor="start" x="111" y="-4737.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Z0()</text>
<text text-anchor="start" x="111" y="-4726.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetInitialPosition()</text>
<text text-anchor="start" x="111" y="-4715.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetInitialPosition()</text>
<text text-anchor="start" x="111" y="-4704.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetVariablesList()</text>
<text text-anchor="start" x="111" y="-4693.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetVariablesList()</text>
<text text-anchor="start" x="111" y="-4682.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDofPosition()</text>
<text text-anchor="start" x="111" y="-4671.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDof()</text>
<text text-anchor="start" x="111" y="-4660.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDof()</text>
<text text-anchor="start" x="111" y="-4649.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDofs()</text>
<text text-anchor="start" x="111" y="-4638.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDofs()</text>
<text text-anchor="start" x="111" y="-4627.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetDof()</text>
<text text-anchor="start" x="111" y="-4616.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetDof()</text>
<text text-anchor="start" x="111" y="-4605.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pAddDof()</text>
<text text-anchor="start" x="111" y="-4594.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pAddDof()</text>
<text text-anchor="start" x="111" y="-4583.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pAddDof()</text>
<text text-anchor="start" x="111" y="-4572.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddDof()</text>
<text text-anchor="start" x="111" y="-4561.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddDof()</text>
<text text-anchor="start" x="111" y="-4550.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HasDofFor()</text>
<text text-anchor="start" x="111" y="-4539.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsFixed()</text>
<text text-anchor="start" x="111" y="-4528.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsActive()</text>
<text text-anchor="start" x="111" y="-4517.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="111" y="-4506.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="111" y="-4495.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node7 -->
<g id="edge10" class="edge">
<title>Node6&#45;&gt;Node7</title>
<path fill="none" stroke="midnightblue" d="M119.43,-6245.35C120.36,-6236.14 121.3,-6226.87 122.24,-6217.55"/>
<polygon fill="none" stroke="midnightblue" points="115.95,-6245.01 118.42,-6255.32 122.91,-6245.72 115.95,-6245.01"/>
</g>
<!-- Node7&#45;&gt;Node5 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node5</title>
<path fill="none" stroke="#404040" d="M151.24,-4488.41C149.94,-4469.16 148.64,-4449.89 147.35,-4430.66"/>
<polygon fill="none" stroke="#404040" points="147.35,-4430.65 142.95,-4424.94 146.54,-4418.68 150.93,-4424.4 147.35,-4430.65"/>
<text text-anchor="middle" x="180.5" y="-4462" font-family="Helvetica,sans-Serif" font-size="10.00"> #mpAssign</text>
<text text-anchor="middle" x="180.5" y="-4451" font-family="Helvetica,sans-Serif" font-size="10.00">#mpPredict</text>
<text text-anchor="middle" x="180.5" y="-4440" font-family="Helvetica,sans-Serif" font-size="10.00">#mpUpdate</text>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="../../d3/d3f/class_kratos_1_1_point.html" target="_top" xlink:title="Point class.">
<polygon fill="none" stroke="black" points="167,-6409.5 167,-6972.5 316,-6972.5 316,-6409.5 167,-6409.5"/>
<text text-anchor="middle" x="241.5" y="-6960.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Point</text>
<polyline fill="none" stroke="black" points="167,-6953.5 316,-6953.5 "/>
<text text-anchor="middle" x="241.5" y="-6941.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="167,-6934.5 316,-6934.5 "/>
<text text-anchor="start" x="175" y="-6922.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Point()</text>
<text text-anchor="start" x="175" y="-6911.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Point()</text>
<text text-anchor="start" x="175" y="-6900.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Point()</text>
<text text-anchor="start" x="175" y="-6889.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Point()</text>
<text text-anchor="start" x="175" y="-6878.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Point()</text>
<text text-anchor="start" x="175" y="-6867.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Point()</text>
<text text-anchor="start" x="175" y="-6856.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~Point()</text>
<text text-anchor="start" x="175" y="-6845.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="175" y="-6834.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator==()</text>
<text text-anchor="start" x="175" y="-6823.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SquaredDistance()</text>
<text text-anchor="start" x="175" y="-6812.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Distance()</text>
<text text-anchor="start" x="175" y="-6801.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="175" y="-6790.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="175" y="-6779.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="175" y="-6768.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="175" y="-6757.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CoordinatesArrayType</text>
<text text-anchor="start" x="175" y="-6746.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="175" y="-6735.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="175" y="-6724.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="175" y="-6713.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="175" y="-6702.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="175" y="-6691.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="175" y="-6680.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="175" y="-6669.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Point()</text>
<text text-anchor="start" x="175" y="-6658.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Point()</text>
<text text-anchor="start" x="175" y="-6647.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Point()</text>
<text text-anchor="start" x="175" y="-6636.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Point()</text>
<text text-anchor="start" x="175" y="-6625.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Point()</text>
<text text-anchor="start" x="175" y="-6614.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Point()</text>
<text text-anchor="start" x="175" y="-6603.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Point()</text>
<text text-anchor="start" x="175" y="-6592.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="175" y="-6581.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==()</text>
<text text-anchor="start" x="175" y="-6570.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SquaredDistance()</text>
<text text-anchor="start" x="175" y="-6559.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Distance()</text>
<text text-anchor="start" x="175" y="-6548.5" font-family="Helvetica,sans-Serif" font-size="10.00">* X()</text>
<text text-anchor="start" x="175" y="-6537.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Y()</text>
<text text-anchor="start" x="175" y="-6526.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Z()</text>
<text text-anchor="start" x="175" y="-6515.5" font-family="Helvetica,sans-Serif" font-size="10.00">* X()</text>
<text text-anchor="start" x="175" y="-6504.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Y()</text>
<text text-anchor="start" x="175" y="-6493.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Z()</text>
<text text-anchor="start" x="175" y="-6482.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Coordinates()</text>
<text text-anchor="start" x="175" y="-6471.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Coordinates()</text>
<text text-anchor="start" x="175" y="-6460.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Dimension()</text>
<text text-anchor="start" x="175" y="-6449.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="175" y="-6438.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="175" y="-6427.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="175" y="-6416.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetAllCoordinates()</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node7 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node7</title>
<path fill="none" stroke="midnightblue" d="M234.53,-6399.08C233.19,-6343.02 231.72,-6281.7 230.19,-6217.75"/>
<polygon fill="none" stroke="midnightblue" points="231.03,-6399.2 234.77,-6409.12 238.03,-6399.04 231.03,-6399.2"/>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="../../d4/ddc/class_kratos_1_1array__1d.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="159.5,-7164.5 159.5,-7980.5 323.5,-7980.5 323.5,-7164.5 159.5,-7164.5"/>
<text text-anchor="middle" x="241.5" y="-7968.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::array_1d&lt; double, 3 &gt;</text>
<polyline fill="none" stroke="black" points="159.5,-7961.5 323.5,-7961.5 "/>
<text text-anchor="middle" x="241.5" y="-7949.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="159.5,-7942.5 323.5,-7942.5 "/>
<text text-anchor="start" x="167.5" y="-7930.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="167.5" y="-7919.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="167.5" y="-7908.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="167.5" y="-7897.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="167.5" y="-7886.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="167.5" y="-7875.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="167.5" y="-7864.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="167.5" y="-7853.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="167.5" y="-7842.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="167.5" y="-7831.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="167.5" y="-7820.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="167.5" y="-7809.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="167.5" y="-7798.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="167.5" y="-7787.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator+=()</text>
<text text-anchor="start" x="167.5" y="-7776.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator&#45;=()</text>
<text text-anchor="start" x="167.5" y="-7765.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator/=()</text>
<text text-anchor="start" x="167.5" y="-7754.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator==()</text>
<text text-anchor="start" x="167.5" y="-7743.5" font-family="Helvetica,sans-Serif" font-size="10.00">* size_type</text>
<text text-anchor="start" x="167.5" y="-7732.5" font-family="Helvetica,sans-Serif" font-size="10.00">* difference_type</text>
<text text-anchor="start" x="167.5" y="-7721.5" font-family="Helvetica,sans-Serif" font-size="10.00">* value_type</text>
<text text-anchor="start" x="167.5" y="-7710.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reference</text>
<text text-anchor="start" x="167.5" y="-7699.5" font-family="Helvetica,sans-Serif" font-size="10.00">* reference</text>
<text text-anchor="start" x="167.5" y="-7688.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_type</text>
<text text-anchor="start" x="167.5" y="-7677.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pointer</text>
<text text-anchor="start" x="167.5" y="-7666.5" font-family="Helvetica,sans-Serif" font-size="10.00">* self_type</text>
<text text-anchor="start" x="167.5" y="-7655.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_closure_type</text>
<text text-anchor="start" x="167.5" y="-7644.5" font-family="Helvetica,sans-Serif" font-size="10.00">* closure_type</text>
<text text-anchor="start" x="167.5" y="-7633.5" font-family="Helvetica,sans-Serif" font-size="10.00">* vector_temporary_type</text>
<text text-anchor="start" x="167.5" y="-7622.5" font-family="Helvetica,sans-Serif" font-size="10.00">* storage_category</text>
<text text-anchor="start" x="167.5" y="-7611.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="167.5" y="-7600.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="167.5" y="-7589.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reverse_iterator</text>
<text text-anchor="start" x="167.5" y="-7578.5" font-family="Helvetica,sans-Serif" font-size="10.00">* reverse_iterator</text>
<text text-anchor="start" x="167.5" y="-7567.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_iterator_type</text>
<text text-anchor="start" x="167.5" y="-7556.5" font-family="Helvetica,sans-Serif" font-size="10.00">* iterator_type</text>
<text text-anchor="start" x="167.5" y="-7545.5" font-family="Helvetica,sans-Serif" font-size="10.00">* find()</text>
<text text-anchor="start" x="167.5" y="-7534.5" font-family="Helvetica,sans-Serif" font-size="10.00">* find()</text>
<text text-anchor="start" x="167.5" y="-7523.5" font-family="Helvetica,sans-Serif" font-size="10.00">* size()</text>
<text text-anchor="start" x="167.5" y="-7512.5" font-family="Helvetica,sans-Serif" font-size="10.00">* minus_assign()</text>
<text text-anchor="start" x="167.5" y="-7501.5" font-family="Helvetica,sans-Serif" font-size="10.00">* data()</text>
<text text-anchor="start" x="167.5" y="-7490.5" font-family="Helvetica,sans-Serif" font-size="10.00">* data()</text>
<text text-anchor="start" x="167.5" y="-7479.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="167.5" y="-7468.5" font-family="Helvetica,sans-Serif" font-size="10.00">* data_</text>
<text text-anchor="start" x="167.5" y="-7457.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="167.5" y="-7446.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="167.5" y="-7435.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="167.5" y="-7424.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="167.5" y="-7413.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="167.5" y="-7402.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="167.5" y="-7391.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="167.5" y="-7380.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="167.5" y="-7369.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="167.5" y="-7358.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="167.5" y="-7347.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="167.5" y="-7336.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="167.5" y="-7325.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="167.5" y="-7314.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator+=()</text>
<text text-anchor="start" x="167.5" y="-7303.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&#45;=()</text>
<text text-anchor="start" x="167.5" y="-7292.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator/=()</text>
<text text-anchor="start" x="167.5" y="-7281.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==()</text>
<text text-anchor="start" x="167.5" y="-7270.5" font-family="Helvetica,sans-Serif" font-size="10.00">* resize()</text>
<text text-anchor="start" x="167.5" y="-7259.5" font-family="Helvetica,sans-Serif" font-size="10.00">* assign_temporary()</text>
<text text-anchor="start" x="167.5" y="-7248.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator*=()</text>
<text text-anchor="start" x="167.5" y="-7237.5" font-family="Helvetica,sans-Serif" font-size="10.00">* plus_assign()</text>
<text text-anchor="start" x="167.5" y="-7226.5" font-family="Helvetica,sans-Serif" font-size="10.00">* assign()</text>
<text text-anchor="start" x="167.5" y="-7215.5" font-family="Helvetica,sans-Serif" font-size="10.00">* swap()</text>
<text text-anchor="start" x="167.5" y="-7204.5" font-family="Helvetica,sans-Serif" font-size="10.00">* insert_element()</text>
<text text-anchor="start" x="167.5" y="-7193.5" font-family="Helvetica,sans-Serif" font-size="10.00">* erase_element()</text>
<text text-anchor="start" x="167.5" y="-7182.5" font-family="Helvetica,sans-Serif" font-size="10.00">* clear()</text>
<text text-anchor="start" x="167.5" y="-7171.5" font-family="Helvetica,sans-Serif" font-size="10.00">* swap</text>
</a>
</g>
</g>
<!-- Node9&#45;&gt;Node8 -->
<g id="edge8" class="edge">
<title>Node9&#45;&gt;Node8</title>
<path fill="none" stroke="midnightblue" d="M241.5,-7153.99C241.5,-7092.48 241.5,-7030.4 241.5,-6972.56"/>
<polygon fill="none" stroke="midnightblue" points="238,-7154.25 241.5,-7164.25 245,-7154.25 238,-7154.25"/>
</g>
<!-- Node10 -->
<g id="node10" class="node">
<title>Node10</title>
<g id="a_node10"><a xlink:title=" ">
<polygon fill="none" stroke="#bfbfbf" points="170,-8018.5 170,-8097.5 313,-8097.5 313,-8018.5 170,-8018.5"/>
<text text-anchor="start" x="178" y="-8085.5" font-family="Helvetica,sans-Serif" font-size="10.00">boost::numeric::ublas</text>
<text text-anchor="start" x="178" y="-8074.5" font-family="Helvetica,sans-Serif" font-size="10.00">::vector_expression&lt;</text>
<text text-anchor="middle" x="241.5" y="-8063.5" font-family="Helvetica,sans-Serif" font-size="10.00"> array_1d&lt; double, N &gt; &gt;</text>
<polyline fill="none" stroke="#bfbfbf" points="170,-8056.5 313,-8056.5 "/>
<text text-anchor="middle" x="241.5" y="-8044.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#bfbfbf" points="170,-8037.5 313,-8037.5 "/>
<text text-anchor="middle" x="241.5" y="-8025.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node9 -->
<g id="edge9" class="edge">
<title>Node10&#45;&gt;Node9</title>
<path fill="none" stroke="midnightblue" d="M241.5,-8008.18C241.5,-7999.86 241.5,-7990.66 241.5,-7980.75"/>
<polygon fill="none" stroke="midnightblue" points="238,-8008.25 241.5,-8018.25 245,-8008.25 238,-8008.25"/>
</g>
<!-- Node11 -->
<g id="node11" class="node">
<title>Node11</title>
<g id="a_node11"><a xlink:href="../../dc/d5c/struct_kratos_1_1_newmark_method_1_1_newmark_parameters.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="198.5,-3503.5 198.5,-3670.5 356.5,-3670.5 356.5,-3503.5 198.5,-3503.5"/>
<text text-anchor="start" x="206.5" y="-3658.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NewmarkMethod</text>
<text text-anchor="start" x="206.5" y="-3647.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TVariableType, TValueType</text>
<text text-anchor="middle" x="277.5" y="-3636.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::NewmarkParameters</text>
<polyline fill="none" stroke="black" points="198.5,-3629.5 356.5,-3629.5 "/>
<text text-anchor="start" x="206.5" y="-3617.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ beta</text>
<text text-anchor="start" x="206.5" y="-3606.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ gamma</text>
<text text-anchor="start" x="206.5" y="-3595.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ delta_time</text>
<text text-anchor="start" x="206.5" y="-3584.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ c0</text>
<text text-anchor="start" x="206.5" y="-3573.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ c1</text>
<text text-anchor="start" x="206.5" y="-3562.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ c2</text>
<text text-anchor="start" x="206.5" y="-3551.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ c3</text>
<text text-anchor="start" x="206.5" y="-3540.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ c4</text>
<text text-anchor="start" x="206.5" y="-3529.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ c5</text>
<polyline fill="none" stroke="black" points="198.5,-3522.5 356.5,-3522.5 "/>
<text text-anchor="start" x="206.5" y="-3510.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetParameters()</text>
</a>
</g>
</g>
<!-- Node11&#45;&gt;Node4 -->
<g id="edge11" class="edge">
<title>Node11&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M271.55,-3503.22C260.4,-3348.19 235.67,-3004.1 215.24,-2720"/>
<polygon fill="none" stroke="#404040" points="215.22,-2719.77 210.8,-2714.07 214.36,-2707.8 218.78,-2713.49 215.22,-2719.77"/>
<text text-anchor="middle" x="251" y="-2729" font-family="Helvetica,sans-Serif" font-size="10.00"> #mNewmark</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_bossak_step_rotation_method__coll__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
