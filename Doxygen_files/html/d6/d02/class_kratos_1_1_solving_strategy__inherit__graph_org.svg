<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::SolvingStrategy&lt; TSparseSpace, TDenseSpace &gt; Pages: 1 -->
<svg width="6713pt" height="3571pt"
 viewBox="0.00 0.00 6713.00 3571.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 3567)">
<title>Kratos::SolvingStrategy&lt; TSparseSpace, TDenseSpace &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Solving strategy base class This is the base class from which we will derive all the strategies (impl...">
<polygon fill="#bfbfbf" stroke="black" points="3274.5,-2977.5 3274.5,-3562.5 3456.5,-3562.5 3456.5,-2977.5 3274.5,-2977.5"/>
<text text-anchor="start" x="3282.5" y="-3550.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::SolvingStrategy</text>
<text text-anchor="middle" x="3365.5" y="-3539.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace &gt;</text>
<polyline fill="none" stroke="black" points="3274.5,-3532.5 3456.5,-3532.5 "/>
<text text-anchor="start" x="3282.5" y="-3520.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<polyline fill="none" stroke="black" points="3274.5,-3513.5 3456.5,-3513.5 "/>
<text text-anchor="start" x="3282.5" y="-3501.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolvingStrategy()</text>
<text text-anchor="start" x="3282.5" y="-3490.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolvingStrategy()</text>
<text text-anchor="start" x="3282.5" y="-3479.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolvingStrategy()</text>
<text text-anchor="start" x="3282.5" y="-3468.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SolvingStrategy()</text>
<text text-anchor="start" x="3282.5" y="-3457.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="3282.5" y="-3446.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="3282.5" y="-3435.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="3282.5" y="-3424.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ValidateAndAssignParameters()</text>
<text text-anchor="start" x="3282.5" y="-3413.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="3282.5" y="-3402.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="3282.5" y="-3391.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="3282.5" y="-3380.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="3282.5" y="-3369.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="3282.5" y="-3358.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="3282.5" y="-3347.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="3282.5" y="-3336.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="3282.5" y="-3325.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="3282.5" y="-3314.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDofType</text>
<text text-anchor="start" x="3282.5" y="-3303.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="3282.5" y="-3292.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodesArrayType</text>
<text text-anchor="start" x="3282.5" y="-3281.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementsArrayType</text>
<text text-anchor="start" x="3282.5" y="-3270.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConditionsArrayType</text>
<text text-anchor="start" x="3282.5" y="-3259.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="3282.5" y="-3248.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="3282.5" y="-3237.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="3282.5" y="-3226.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpModelPart</text>
<text text-anchor="start" x="3282.5" y="-3215.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMoveMeshFlag</text>
<text text-anchor="start" x="3282.5" y="-3204.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
<text text-anchor="start" x="3282.5" y="-3193.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
<text text-anchor="start" x="3282.5" y="-3182.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
<text text-anchor="start" x="3282.5" y="-3171.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~SolvingStrategy()</text>
<text text-anchor="start" x="3282.5" y="-3160.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="3282.5" y="-3149.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Predict()</text>
<text text-anchor="start" x="3282.5" y="-3138.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="3282.5" y="-3127.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="3282.5" y="-3116.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="3282.5" y="-3105.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsConverged()</text>
<text text-anchor="start" x="3282.5" y="-3094.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateOutputData()</text>
<text text-anchor="start" x="3282.5" y="-3083.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="3282.5" y="-3072.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="3282.5" y="-3061.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="3282.5" y="-3050.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 17 more...</text>
<text text-anchor="start" x="3282.5" y="-3039.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="3282.5" y="-3028.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="3282.5" y="-3017.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="3282.5" y="-3006.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ValidateAndAssignParameters()</text>
<text text-anchor="start" x="3282.5" y="-2995.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="3282.5" y="-2984.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d3/d58/class_kratos_1_1_explicit_solving_strategy.html" target="_top" xlink:title="Explicit solving strategy base class.">
<polygon fill="none" stroke="black" points="266,-2284 266,-2825 447,-2825 447,-2284 266,-2284"/>
<text text-anchor="start" x="274" y="-2813" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ExplicitSolvingStrategy</text>
<text text-anchor="middle" x="356.5" y="-2802" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace &gt;</text>
<polyline fill="none" stroke="black" points="266,-2795 447,-2795 "/>
<text text-anchor="start" x="274" y="-2783" font-family="Helvetica,sans-Serif" font-size="10.00"># mRebuildLevel</text>
<polyline fill="none" stroke="black" points="266,-2776 447,-2776 "/>
<text text-anchor="start" x="274" y="-2764" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2753" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2742" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2731" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2720" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2709" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2698" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="274" y="-2687" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="274" y="-2676" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveWithLumpedMassMatrix()</text>
<text text-anchor="start" x="274" y="-2665" font-family="Helvetica,sans-Serif" font-size="10.00"># GetDeltaTime()</text>
<text text-anchor="start" x="274" y="-2654" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="274" y="-2643" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitBuilderType</text>
<text text-anchor="start" x="274" y="-2632" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitBuilderPointerType</text>
<text text-anchor="start" x="274" y="-2621" font-family="Helvetica,sans-Serif" font-size="10.00">* DofType</text>
<text text-anchor="start" x="274" y="-2610" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="274" y="-2599" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="274" y="-2588" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="274" y="-2577" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="274" y="-2566" font-family="Helvetica,sans-Serif" font-size="10.00">* mRebuildLevel</text>
<text text-anchor="start" x="274" y="-2555" font-family="Helvetica,sans-Serif" font-size="10.00">* mpExplicitBuilder</text>
<text text-anchor="start" x="274" y="-2544" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2533" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2522" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2511" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2500" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2489" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2478" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="274" y="-2467" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="274" y="-2456" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="274" y="-2445" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="274" y="-2434" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="274" y="-2423" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="274" y="-2412" font-family="Helvetica,sans-Serif" font-size="10.00">* SetRebuildLevel()</text>
<text text-anchor="start" x="274" y="-2401" font-family="Helvetica,sans-Serif" font-size="10.00">* GetRebuildLevel()</text>
<text text-anchor="start" x="274" y="-2390" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetExplicitBuilder()</text>
<text text-anchor="start" x="274" y="-2379" font-family="Helvetica,sans-Serif" font-size="10.00">* GetExplicitBuilder()</text>
<text text-anchor="start" x="274" y="-2368" font-family="Helvetica,sans-Serif" font-size="10.00">* GetExplicitBuilder()</text>
<text text-anchor="start" x="274" y="-2357" font-family="Helvetica,sans-Serif" font-size="10.00">* GetResidualNorm()</text>
<text text-anchor="start" x="274" y="-2346" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="274" y="-2335" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="274" y="-2324" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="274" y="-2313" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveWithLumpedMassMatrix()</text>
<text text-anchor="start" x="274" y="-2302" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDeltaTime()</text>
<text text-anchor="start" x="274" y="-2291" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node2 -->
<g id="edge1" class="edge">
<title>Node1&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M3264.2,-3244.98C2800.9,-3135.12 887.52,-2681.42 447.16,-2577"/>
<polygon fill="none" stroke="midnightblue" points="3263.68,-3248.45 3274.22,-3247.35 3265.29,-3241.64 3263.68,-3248.45"/>
</g>
<!-- Node10 -->
<g id="node8" class="node">
<title>Node10</title>
<g id="a_node8"><a xlink:href="../../d8/df2/class_kratos_1_1_implicit_solving_strategy.html" target="_top" xlink:title="Implicit solving strategy base class This is the base class from which we will derive all the implici...">
<polygon fill="none" stroke="black" points="3175,-2306 3175,-2803 3346,-2803 3346,-2306 3175,-2306"/>
<text text-anchor="start" x="3183" y="-2791" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ImplicitSolvingStrategy</text>
<text text-anchor="start" x="3183" y="-2780" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="3260.5" y="-2769" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="3175,-2762 3346,-2762 "/>
<text text-anchor="start" x="3183" y="-2750" font-family="Helvetica,sans-Serif" font-size="10.00"># mRebuildLevel</text>
<text text-anchor="start" x="3183" y="-2739" font-family="Helvetica,sans-Serif" font-size="10.00"># mStiffnessMatrixIsBuilt</text>
<polyline fill="none" stroke="black" points="3175,-2732 3346,-2732 "/>
<text text-anchor="start" x="3183" y="-2720" font-family="Helvetica,sans-Serif" font-size="10.00">+ ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="3183" y="-2709" font-family="Helvetica,sans-Serif" font-size="10.00">+ ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="3183" y="-2698" font-family="Helvetica,sans-Serif" font-size="10.00">+ ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="3183" y="-2687" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="3183" y="-2676" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="3183" y="-2665" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetRebuildLevel()</text>
<text text-anchor="start" x="3183" y="-2654" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetRebuildLevel()</text>
<text text-anchor="start" x="3183" y="-2643" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="3183" y="-2632" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="3183" y="-2621" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="3183" y="-2610" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="3183" y="-2599" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="3183" y="-2588" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="3183" y="-2577" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="3183" y="-2566" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="3183" y="-2555" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="3183" y="-2544" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="3183" y="-2533" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="3183" y="-2522" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="3183" y="-2511" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="3183" y="-2500" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="3183" y="-2489" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="3183" y="-2478" font-family="Helvetica,sans-Serif" font-size="10.00">* mRebuildLevel</text>
<text text-anchor="start" x="3183" y="-2467" font-family="Helvetica,sans-Serif" font-size="10.00">* mStiffnessMatrixIsBuilt</text>
<text text-anchor="start" x="3183" y="-2456" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="3183" y="-2445" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="3183" y="-2434" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="3183" y="-2423" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="3183" y="-2412" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="3183" y="-2401" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="3183" y="-2390" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="3183" y="-2379" font-family="Helvetica,sans-Serif" font-size="10.00">* SetRebuildLevel()</text>
<text text-anchor="start" x="3183" y="-2368" font-family="Helvetica,sans-Serif" font-size="10.00">* GetRebuildLevel()</text>
<text text-anchor="start" x="3183" y="-2357" font-family="Helvetica,sans-Serif" font-size="10.00">* SetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="3183" y="-2346" font-family="Helvetica,sans-Serif" font-size="10.00">* GetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="3183" y="-2335" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="3183" y="-2324" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="3183" y="-2313" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node10 -->
<g id="edge7" class="edge">
<title>Node1&#45;&gt;Node10</title>
<path fill="none" stroke="midnightblue" d="M3321.07,-2967.07C3313.03,-2912.45 3304.73,-2856.08 3296.96,-2803.23"/>
<polygon fill="none" stroke="midnightblue" points="3317.65,-2967.86 3322.57,-2977.25 3324.57,-2966.85 3317.65,-2967.86"/>
</g>
<!-- Node61 -->
<g id="node46" class="node">
<title>Node61</title>
<g id="a_node46"><a xlink:href="../../da/dbb/class_kratos_1_1_structure_adjoint_sensitivity_strategy.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="3364,-2405 3364,-2704 3579,-2704 3579,-2405 3364,-2405"/>
<text text-anchor="start" x="3372" y="-2692" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::StructureAdjoint</text>
<text text-anchor="start" x="3372" y="-2681" font-family="Helvetica,sans-Serif" font-size="10.00">SensitivityStrategy&lt; TSparse</text>
<text text-anchor="middle" x="3471.5" y="-2670" font-family="Helvetica,sans-Serif" font-size="10.00">Space, TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="3364,-2663 3579,-2663 "/>
<text text-anchor="middle" x="3471.5" y="-2651" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="3364,-2644 3579,-2644 "/>
<text text-anchor="start" x="3372" y="-2632" font-family="Helvetica,sans-Serif" font-size="10.00">+ StructureAdjointSensitivity</text>
<text text-anchor="start" x="3372" y="-2621" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="3372" y="-2610" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~StructureAdjointSensitivity</text>
<text text-anchor="start" x="3372" y="-2599" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="3372" y="-2588" font-family="Helvetica,sans-Serif" font-size="10.00">+ ComputeStrainEnergySensitivities()</text>
<text text-anchor="start" x="3372" y="-2577" font-family="Helvetica,sans-Serif" font-size="10.00">+ ComputeVolumeFractionSensitivities()</text>
<text text-anchor="start" x="3372" y="-2566" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="3372" y="-2555" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemePointerType</text>
<text text-anchor="start" x="3372" y="-2544" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverPointerType</text>
<text text-anchor="start" x="3372" y="-2533" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="3372" y="-2522" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="3372" y="-2511" font-family="Helvetica,sans-Serif" font-size="10.00">* mr_structure_model_part</text>
<text text-anchor="start" x="3372" y="-2500" font-family="Helvetica,sans-Serif" font-size="10.00">* mpAdjointModelPart</text>
<text text-anchor="start" x="3372" y="-2489" font-family="Helvetica,sans-Serif" font-size="10.00">* mpStrategy</text>
<text text-anchor="start" x="3372" y="-2478" font-family="Helvetica,sans-Serif" font-size="10.00">* m_dimension</text>
<text text-anchor="start" x="3372" y="-2467" font-family="Helvetica,sans-Serif" font-size="10.00">* StructureAdjointSensitivity</text>
<text text-anchor="start" x="3372" y="-2456" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="3372" y="-2445" font-family="Helvetica,sans-Serif" font-size="10.00">* ~StructureAdjointSensitivity</text>
<text text-anchor="start" x="3372" y="-2434" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="3372" y="-2423" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeStrainEnergySensitivities()</text>
<text text-anchor="start" x="3372" y="-2412" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeVolumeFractionSensitivities()</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node61 -->
<g id="edge45" class="edge">
<title>Node1&#45;&gt;Node61</title>
<path fill="none" stroke="midnightblue" d="M3410.32,-2967.34C3423.81,-2876.48 3438.04,-2780.73 3449.37,-2704.44"/>
<polygon fill="none" stroke="midnightblue" points="3406.85,-2966.84 3408.84,-2977.25 3413.78,-2967.87 3406.85,-2966.84"/>
</g>
<!-- Node62 -->
<g id="node47" class="node">
<title>Node62</title>
<g id="a_node47"><a xlink:href="../../db/db7/class_kratos_1_1_v_p_strategy.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="6285.5,-2168.5 6285.5,-2940.5 6497.5,-2940.5 6497.5,-2168.5 6285.5,-2168.5"/>
<text text-anchor="start" x="6293.5" y="-2928.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::VPStrategy</text>
<text text-anchor="start" x="6293.5" y="-2917.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="6391.5" y="-2906.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="6285.5,-2899.5 6497.5,-2899.5 "/>
<text text-anchor="middle" x="6391.5" y="-2887.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="6285.5,-2880.5 6497.5,-2880.5 "/>
<text text-anchor="start" x="6293.5" y="-2868.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ VPStrategy()</text>
<text text-anchor="start" x="6293.5" y="-2857.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ VPStrategy()</text>
<text text-anchor="start" x="6293.5" y="-2846.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~VPStrategy()</text>
<text text-anchor="start" x="6293.5" y="-2835.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="6293.5" y="-2824.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="6293.5" y="-2813.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="6293.5" y="-2802.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="6293.5" y="-2791.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ UpdateTopology()</text>
<text text-anchor="start" x="6293.5" y="-2780.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBlockedAndIsolatedFlags()</text>
<text text-anchor="start" x="6293.5" y="-2769.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculatePressureVelocity()</text>
<text text-anchor="start" x="6293.5" y="-2758.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="6293.5" y="-2747.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="6293.5" y="-2736.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="6293.5" y="-2725.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="6293.5" y="-2714.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="6293.5" y="-2703.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveMomentumIteration()</text>
<text text-anchor="start" x="6293.5" y="-2692.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveContinuityIteration()</text>
<text text-anchor="start" x="6293.5" y="-2681.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeErrorL2Norm()</text>
<text text-anchor="start" x="6293.5" y="-2670.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeErrorL2NormCasePoiseuille()</text>
<text text-anchor="start" x="6293.5" y="-2659.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeVelocityNorm()</text>
<text text-anchor="start" x="6293.5" y="-2648.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputePressureNorm()</text>
<text text-anchor="start" x="6293.5" y="-2637.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckVelocityConvergence()</text>
<text text-anchor="start" x="6293.5" y="-2626.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckPressureConvergence()</text>
<text text-anchor="start" x="6293.5" y="-2615.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FixTimeStepMomentum()</text>
<text text-anchor="start" x="6293.5" y="-2604.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckMomentumConvergence()</text>
<text text-anchor="start" x="6293.5" y="-2593.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FixTimeStepContinuity()</text>
<text text-anchor="start" x="6293.5" y="-2582.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckContinuityConvergence()</text>
<text text-anchor="start" x="6293.5" y="-2571.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeStrategy()</text>
<text text-anchor="start" x="6293.5" y="-2560.5" font-family="Helvetica,sans-Serif" font-size="10.00"># operator=()</text>
<text text-anchor="start" x="6293.5" y="-2549.5" font-family="Helvetica,sans-Serif" font-size="10.00"># VPStrategy()</text>
<text text-anchor="start" x="6293.5" y="-2538.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="6293.5" y="-2527.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolverSettingsType</text>
<text text-anchor="start" x="6293.5" y="-2516.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="6293.5" y="-2505.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="6293.5" y="-2494.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VPStrategy()</text>
<text text-anchor="start" x="6293.5" y="-2483.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VPStrategy()</text>
<text text-anchor="start" x="6293.5" y="-2472.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~VPStrategy()</text>
<text text-anchor="start" x="6293.5" y="-2461.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="6293.5" y="-2450.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="6293.5" y="-2439.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="6293.5" y="-2428.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="6293.5" y="-2417.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateTopology()</text>
<text text-anchor="start" x="6293.5" y="-2406.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBlockedAndIsolatedFlags()</text>
<text text-anchor="start" x="6293.5" y="-2395.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculatePressureVelocity()</text>
<text text-anchor="start" x="6293.5" y="-2384.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="6293.5" y="-2373.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="6293.5" y="-2362.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="6293.5" y="-2351.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="6293.5" y="-2340.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="6293.5" y="-2329.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveMomentumIteration()</text>
<text text-anchor="start" x="6293.5" y="-2318.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveContinuityIteration()</text>
<text text-anchor="start" x="6293.5" y="-2307.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeErrorL2Norm()</text>
<text text-anchor="start" x="6293.5" y="-2296.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeErrorL2NormCasePoiseuille()</text>
<text text-anchor="start" x="6293.5" y="-2285.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeVelocityNorm()</text>
<text text-anchor="start" x="6293.5" y="-2274.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputePressureNorm()</text>
<text text-anchor="start" x="6293.5" y="-2263.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckVelocityConvergence()</text>
<text text-anchor="start" x="6293.5" y="-2252.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckPressureConvergence()</text>
<text text-anchor="start" x="6293.5" y="-2241.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FixTimeStepMomentum()</text>
<text text-anchor="start" x="6293.5" y="-2230.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckMomentumConvergence()</text>
<text text-anchor="start" x="6293.5" y="-2219.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FixTimeStepContinuity()</text>
<text text-anchor="start" x="6293.5" y="-2208.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckContinuityConvergence()</text>
<text text-anchor="start" x="6293.5" y="-2197.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeStrategy()</text>
<text text-anchor="start" x="6293.5" y="-2186.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="6293.5" y="-2175.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VPStrategy()</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node62 -->
<g id="edge46" class="edge">
<title>Node1&#45;&gt;Node62</title>
<path fill="none" stroke="midnightblue" d="M3466.83,-3245.11C3926.74,-3136.67 5815.57,-2691.3 6285.34,-2580.53"/>
<polygon fill="none" stroke="midnightblue" points="3465.82,-3241.75 3456.89,-3247.45 3467.42,-3248.56 3465.82,-3241.75"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../df/df8/class_kratos_1_1_explicit_solving_strategy_b_f_e_c_c.html" target="_top" xlink:title="Explicit Back&#45;and&#45;Forth Error Compensation Correction time&#45;integration scheme.">
<polygon fill="none" stroke="black" points="12.5,-1194.5 12.5,-1867.5 224.5,-1867.5 224.5,-1194.5 12.5,-1194.5"/>
<text text-anchor="start" x="20.5" y="-1855.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ExplicitSolvingStrategy</text>
<text text-anchor="middle" x="118.5" y="-1844.5" font-family="Helvetica,sans-Serif" font-size="10.00">BFECC&lt; TSparseSpace, TDenseSpace &gt;</text>
<polyline fill="none" stroke="black" points="12.5,-1837.5 224.5,-1837.5 "/>
<text text-anchor="middle" x="118.5" y="-1825.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="12.5,-1818.5 224.5,-1818.5 "/>
<text text-anchor="start" x="20.5" y="-1806.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="20.5" y="-1795.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="20.5" y="-1784.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="20.5" y="-1773.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="20.5" y="-1762.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveWithLumpedMassMatrix()</text>
<text text-anchor="start" x="20.5" y="-1751.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CopySolutionStepData()</text>
<text text-anchor="start" x="20.5" y="-1740.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ExtractSolutionStepData()</text>
<text text-anchor="start" x="20.5" y="-1729.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeBFECCForwardSubstep()</text>
<text text-anchor="start" x="20.5" y="-1718.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FinalizeBFECCForwardSubstep()</text>
<text text-anchor="start" x="20.5" y="-1707.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeBFECCBackwardSubstep()</text>
<text text-anchor="start" x="20.5" y="-1696.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FinalizeBFECCBackwardSubstep()</text>
<text text-anchor="start" x="20.5" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeBFECCFinalSubstep()</text>
<text text-anchor="start" x="20.5" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FinalizeBFECCFinalSubstep()</text>
<text text-anchor="start" x="20.5" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PerformSubstep()</text>
<text text-anchor="start" x="20.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CorrectErrorAfterForwards</text>
<text text-anchor="start" x="20.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndBackwards()</text>
<text text-anchor="start" x="20.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Substep</text>
<text text-anchor="start" x="20.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="20.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategyType</text>
<text text-anchor="start" x="20.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="20.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="20.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitBuilderType</text>
<text text-anchor="start" x="20.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofType</text>
<text text-anchor="start" x="20.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="20.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="20.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="20.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="20.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyBFECC()</text>
<text text-anchor="start" x="20.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyBFECC()</text>
<text text-anchor="start" x="20.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyBFECC()</text>
<text text-anchor="start" x="20.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyBFECC()</text>
<text text-anchor="start" x="20.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="20.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyBFECC()</text>
<text text-anchor="start" x="20.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ExplicitSolvingStrategy</text>
<text text-anchor="start" x="20.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">BFECC()</text>
<text text-anchor="start" x="20.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="20.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="20.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="20.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="20.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="20.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="20.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="20.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveWithLumpedMassMatrix()</text>
<text text-anchor="start" x="20.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CopySolutionStepData()</text>
<text text-anchor="start" x="20.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExtractSolutionStepData()</text>
<text text-anchor="start" x="20.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeBFECCForwardSubstep()</text>
<text text-anchor="start" x="20.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeBFECCForwardSubstep()</text>
<text text-anchor="start" x="20.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeBFECCBackwardSubstep()</text>
<text text-anchor="start" x="20.5" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeBFECCBackwardSubstep()</text>
<text text-anchor="start" x="20.5" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeBFECCFinalSubstep()</text>
<text text-anchor="start" x="20.5" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeBFECCFinalSubstep()</text>
<text text-anchor="start" x="20.5" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PerformSubstep()</text>
<text text-anchor="start" x="20.5" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CorrectErrorAfterForwards</text>
<text text-anchor="start" x="20.5" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndBackwards()</text>
<text text-anchor="start" x="20.5" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSubstep()</text>
<text text-anchor="start" x="20.5" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSubstep()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node3 -->
<g id="edge2" class="edge">
<title>Node2&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M286.64,-2274.11C275.06,-2226.73 263.31,-2177.99 252.5,-2132 232.42,-2046.54 211.41,-1954.06 192.14,-1867.89"/>
<polygon fill="none" stroke="midnightblue" points="283.26,-2275.01 289.03,-2283.89 290.06,-2273.34 283.26,-2275.01"/>
</g>
<!-- Node6 -->
<g id="node5" class="node">
<title>Node6</title>
<g id="a_node5"><a xlink:href="../../de/d18/class_kratos_1_1_explicit_solving_strategy_runge_kutta.html" target="_top" xlink:title="Family of explicit Runge&#45;Kutta schemes.">
<polygon fill="none" stroke="black" points="262,-1112 262,-1950 451,-1950 451,-1112 262,-1112"/>
<text text-anchor="start" x="270" y="-1938" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ExplicitSolvingStrategy</text>
<text text-anchor="start" x="270" y="-1927" font-family="Helvetica,sans-Serif" font-size="10.00">RungeKutta&lt; TSparseSpace,</text>
<text text-anchor="middle" x="356.5" y="-1916" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TButcherTableau &gt;</text>
<polyline fill="none" stroke="black" points="262,-1909 451,-1909 "/>
<text text-anchor="start" x="270" y="-1897" font-family="Helvetica,sans-Serif" font-size="10.00"># mButcherTableau</text>
<polyline fill="none" stroke="black" points="262,-1890 451,-1890 "/>
<text text-anchor="start" x="270" y="-1878" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="270" y="-1867" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta()</text>
<text text-anchor="start" x="270" y="-1856" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="270" y="-1845" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta()</text>
<text text-anchor="start" x="270" y="-1834" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="270" y="-1823" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta()</text>
<text text-anchor="start" x="270" y="-1812" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="270" y="-1801" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta()</text>
<text text-anchor="start" x="270" y="-1790" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="270" y="-1779" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="270" y="-1768" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta()</text>
<text text-anchor="start" x="270" y="-1757" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ExplicitSolvingStrategy</text>
<text text-anchor="start" x="270" y="-1746" font-family="Helvetica,sans-Serif" font-size="10.00">RungeKutta()</text>
<text text-anchor="start" x="270" y="-1735" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDefaultParameters()</text>
<text text-anchor="start" x="270" y="-1724" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="270" y="-1713" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveWithLumpedMassMatrix()</text>
<text text-anchor="start" x="270" y="-1702" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeRungeKuttaIntermediate</text>
<text text-anchor="start" x="270" y="-1691" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="270" y="-1680" font-family="Helvetica,sans-Serif" font-size="10.00"># FinalizeRungeKuttaIntermediate</text>
<text text-anchor="start" x="270" y="-1669" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="270" y="-1658" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeRungeKuttaLast</text>
<text text-anchor="start" x="270" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="270" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00"># FinalizeRungeKuttaLastSub</text>
<text text-anchor="start" x="270" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="270" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00"># PerformRungeKuttaIntermediate</text>
<text text-anchor="start" x="270" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="270" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00"># PerformRungeKuttaLastSub</text>
<text text-anchor="start" x="270" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="270" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategyType</text>
<text text-anchor="start" x="270" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="270" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="270" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitBuilderType</text>
<text text-anchor="start" x="270" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* DofType</text>
<text text-anchor="start" x="270" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="270" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="270" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="270" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="270" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">* mButcherTableau</text>
<text text-anchor="start" x="270" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="270" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta()</text>
<text text-anchor="start" x="270" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="270" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta()</text>
<text text-anchor="start" x="270" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="270" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta()</text>
<text text-anchor="start" x="270" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="270" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta()</text>
<text text-anchor="start" x="270" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="270" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="270" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta()</text>
<text text-anchor="start" x="270" y="-1339" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ExplicitSolvingStrategy</text>
<text text-anchor="start" x="270" y="-1328" font-family="Helvetica,sans-Serif" font-size="10.00">RungeKutta()</text>
<text text-anchor="start" x="270" y="-1317" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="270" y="-1306" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="270" y="-1295" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="270" y="-1284" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="270" y="-1273" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="270" y="-1262" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="270" y="-1251" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveWithLumpedMassMatrix()</text>
<text text-anchor="start" x="270" y="-1240" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeRungeKuttaIntermediate</text>
<text text-anchor="start" x="270" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="270" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeRungeKuttaIntermediate</text>
<text text-anchor="start" x="270" y="-1207" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="270" y="-1196" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeRungeKuttaLast</text>
<text text-anchor="start" x="270" y="-1185" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="270" y="-1174" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeRungeKuttaLastSub</text>
<text text-anchor="start" x="270" y="-1163" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="270" y="-1152" font-family="Helvetica,sans-Serif" font-size="10.00">* PerformRungeKuttaIntermediate</text>
<text text-anchor="start" x="270" y="-1141" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="270" y="-1130" font-family="Helvetica,sans-Serif" font-size="10.00">* PerformRungeKuttaLastSub</text>
<text text-anchor="start" x="270" y="-1119" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node6 -->
<g id="edge4" class="edge">
<title>Node2&#45;&gt;Node6</title>
<path fill="none" stroke="midnightblue" d="M356.5,-2273.55C356.5,-2173.78 356.5,-2059.14 356.5,-1950.29"/>
<polygon fill="none" stroke="midnightblue" points="353,-2273.78 356.5,-2283.78 360,-2273.78 353,-2273.78"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../dd/d7c/class_kratos_1_1_compressible_navier_stokes_explicit_solving_strategy.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="red" points="0,-0.5 0,-893.5 199,-893.5 199,-0.5 0,-0.5"/>
<text text-anchor="start" x="8" y="-881.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::CompressibleNavier</text>
<text text-anchor="start" x="8" y="-870.5" font-family="Helvetica,sans-Serif" font-size="10.00">StokesExplicitSolvingStrategy</text>
<text text-anchor="start" x="8" y="-859.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; ExplicitSolvingStrategyBFECC</text>
<text text-anchor="middle" x="99.5" y="-848.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace &gt; &gt;</text>
<polyline fill="none" stroke="red" points="0,-841.5 199,-841.5 "/>
<text text-anchor="middle" x="99.5" y="-829.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="red" points="0,-822.5 199,-822.5 "/>
<text text-anchor="start" x="8" y="-810.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CompressibleNavierStokes</text>
<text text-anchor="start" x="8" y="-799.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="8" y="-788.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CompressibleNavierStokes</text>
<text text-anchor="start" x="8" y="-777.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="8" y="-766.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CompressibleNavierStokes</text>
<text text-anchor="start" x="8" y="-755.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="8" y="-744.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CompressibleNavierStokes</text>
<text text-anchor="start" x="8" y="-733.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="8" y="-722.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~CompressibleNavierStokes</text>
<text text-anchor="start" x="8" y="-711.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="8" y="-700.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="8" y="-689.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDefaultParameters()</text>
<text text-anchor="start" x="8" y="-678.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignSettings()</text>
<text text-anchor="start" x="8" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="8" y="-656.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetUpShockCapturing()</text>
<text text-anchor="start" x="8" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateOrthogonalSubScales</text>
<text text-anchor="start" x="8" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">Projection()</text>
<text text-anchor="start" x="8" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateNonConservative</text>
<text text-anchor="start" x="8" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">Magnitudes()</text>
<text text-anchor="start" x="8" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ApplySlipCondition()</text>
<text text-anchor="start" x="8" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeEverySubstep()</text>
<text text-anchor="start" x="8" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FinalizeEverySubstep()</text>
<text text-anchor="start" x="8" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ShockCapturingEnabled()</text>
<text text-anchor="start" x="8" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ConservativeMagnitudeCalculation</text>
<text text-anchor="start" x="8" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">Enabled()</text>
<text text-anchor="start" x="8" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SlipConditionEnabled()</text>
<text text-anchor="start" x="8" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetShockCapturingProcess()</text>
<text text-anchor="start" x="8" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="8" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitBuilderType</text>
<text text-anchor="start" x="8" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="8" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFirstStep</text>
<text text-anchor="start" x="8" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mApplySlipCondition</text>
<text text-anchor="start" x="8" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateNonConservative</text>
<text text-anchor="start" x="8" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">Magnitudes</text>
<text text-anchor="start" x="8" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpShockCapturingProcess</text>
<text text-anchor="start" x="8" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CompressibleNavierStokes</text>
<text text-anchor="start" x="8" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="8" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CompressibleNavierStokes</text>
<text text-anchor="start" x="8" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="8" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CompressibleNavierStokes</text>
<text text-anchor="start" x="8" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="8" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CompressibleNavierStokes</text>
<text text-anchor="start" x="8" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="8" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~CompressibleNavierStokes</text>
<text text-anchor="start" x="8" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="8" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpShockCapturing()</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateOrthogonalSubScales</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">Projection()</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateNonConservative</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">Magnitudes()</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ApplySlipCondition()</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeEverySubstep()</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeEverySubstep()</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ShockCapturingEnabled()</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConservativeMagnitudeCalculation</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">Enabled()</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SlipConditionEnabled()</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetShockCapturingProcess()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node4 -->
<g id="edge3" class="edge">
<title>Node3&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M112.43,-1184.25C110.81,-1091.85 109.03,-990.66 107.33,-893.7"/>
<polygon fill="none" stroke="midnightblue" points="108.93,-1184.38 112.61,-1194.32 115.93,-1184.26 108.93,-1184.38"/>
</g>
<!-- Node7 -->
<g id="node6" class="node">
<title>Node7</title>
<g id="a_node6"><a xlink:href="../../dd/d7c/class_kratos_1_1_compressible_navier_stokes_explicit_solving_strategy.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="red" points="217.5,-0.5 217.5,-893.5 495.5,-893.5 495.5,-0.5 217.5,-0.5"/>
<text text-anchor="start" x="225.5" y="-881.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::CompressibleNavier</text>
<text text-anchor="start" x="225.5" y="-870.5" font-family="Helvetica,sans-Serif" font-size="10.00">StokesExplicitSolvingStrategy</text>
<text text-anchor="start" x="225.5" y="-859.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; ExplicitSolvingStrategyRungeKutta</text>
<text text-anchor="middle" x="356.5" y="-848.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace, TButcherTableau &gt; &gt;</text>
<polyline fill="none" stroke="red" points="217.5,-841.5 495.5,-841.5 "/>
<text text-anchor="middle" x="356.5" y="-829.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="red" points="217.5,-822.5 495.5,-822.5 "/>
<text text-anchor="start" x="225.5" y="-810.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CompressibleNavierStokes</text>
<text text-anchor="start" x="225.5" y="-799.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="225.5" y="-788.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CompressibleNavierStokes</text>
<text text-anchor="start" x="225.5" y="-777.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="225.5" y="-766.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CompressibleNavierStokes</text>
<text text-anchor="start" x="225.5" y="-755.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="225.5" y="-744.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CompressibleNavierStokes</text>
<text text-anchor="start" x="225.5" y="-733.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="225.5" y="-722.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~CompressibleNavierStokes</text>
<text text-anchor="start" x="225.5" y="-711.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="225.5" y="-700.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="225.5" y="-689.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDefaultParameters()</text>
<text text-anchor="start" x="225.5" y="-678.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignSettings()</text>
<text text-anchor="start" x="225.5" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="225.5" y="-656.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="225.5" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="225.5" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="225.5" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="225.5" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="225.5" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetUpShockCapturing()</text>
<text text-anchor="start" x="225.5" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateOrthogonalSubScales</text>
<text text-anchor="start" x="225.5" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">Projection()</text>
<text text-anchor="start" x="225.5" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateNonConservative</text>
<text text-anchor="start" x="225.5" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">Magnitudes()</text>
<text text-anchor="start" x="225.5" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ApplySlipCondition()</text>
<text text-anchor="start" x="225.5" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeEverySubstep()</text>
<text text-anchor="start" x="225.5" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FinalizeEverySubstep()</text>
<text text-anchor="start" x="225.5" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ShockCapturingEnabled()</text>
<text text-anchor="start" x="225.5" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ConservativeMagnitudeCalculation</text>
<text text-anchor="start" x="225.5" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">Enabled()</text>
<text text-anchor="start" x="225.5" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SlipConditionEnabled()</text>
<text text-anchor="start" x="225.5" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetShockCapturingProcess()</text>
<text text-anchor="start" x="225.5" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="225.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitBuilderType</text>
<text text-anchor="start" x="225.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="225.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="225.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="225.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFirstStep</text>
<text text-anchor="start" x="225.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mApplySlipCondition</text>
<text text-anchor="start" x="225.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateNonConservative</text>
<text text-anchor="start" x="225.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">Magnitudes</text>
<text text-anchor="start" x="225.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpShockCapturingProcess</text>
<text text-anchor="start" x="225.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CompressibleNavierStokes</text>
<text text-anchor="start" x="225.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="225.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CompressibleNavierStokes</text>
<text text-anchor="start" x="225.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="225.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CompressibleNavierStokes</text>
<text text-anchor="start" x="225.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="225.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CompressibleNavierStokes</text>
<text text-anchor="start" x="225.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="225.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~CompressibleNavierStokes</text>
<text text-anchor="start" x="225.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="225.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="225.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="225.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="225.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="225.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="225.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="225.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="225.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="225.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="225.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpShockCapturing()</text>
<text text-anchor="start" x="225.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateOrthogonalSubScales</text>
<text text-anchor="start" x="225.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">Projection()</text>
<text text-anchor="start" x="225.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateNonConservative</text>
<text text-anchor="start" x="225.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">Magnitudes()</text>
<text text-anchor="start" x="225.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ApplySlipCondition()</text>
<text text-anchor="start" x="225.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeEverySubstep()</text>
<text text-anchor="start" x="225.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeEverySubstep()</text>
<text text-anchor="start" x="225.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ShockCapturingEnabled()</text>
<text text-anchor="start" x="225.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConservativeMagnitudeCalculation</text>
<text text-anchor="start" x="225.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">Enabled()</text>
<text text-anchor="start" x="225.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SlipConditionEnabled()</text>
<text text-anchor="start" x="225.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetShockCapturingProcess()</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node7 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node7</title>
<path fill="none" stroke="midnightblue" d="M356.5,-1101.62C356.5,-1033.34 356.5,-962.57 356.5,-893.9"/>
<polygon fill="none" stroke="midnightblue" points="353,-1101.67 356.5,-1111.67 360,-1101.67 353,-1101.67"/>
</g>
<!-- Node9 -->
<g id="node7" class="node">
<title>Node9</title>
<g id="a_node7"><a xlink:href="../../d6/d33/class_kratos_1_1_explicit_solving_strategy_runge_kutta4_convection_diffusion.html" target="_top" xlink:title="This strategy adds the orthogonal subgrid projections computation to the base explicit runge kutta 4 ...">
<polygon fill="none" stroke="black" points="514,-171 514,-723 703,-723 703,-171 514,-171"/>
<text text-anchor="start" x="522" y="-711" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ExplicitSolvingStrategy</text>
<text text-anchor="start" x="522" y="-700" font-family="Helvetica,sans-Serif" font-size="10.00">RungeKutta4ConvectionDiffusion</text>
<text text-anchor="middle" x="608.5" y="-689" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace &gt;</text>
<polyline fill="none" stroke="black" points="514,-682 703,-682 "/>
<text text-anchor="middle" x="608.5" y="-670" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="514,-663 703,-663 "/>
<text text-anchor="start" x="522" y="-651" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="522" y="-640" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta4ConvectionDiffusion()</text>
<text text-anchor="start" x="522" y="-629" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="522" y="-618" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta4ConvectionDiffusion()</text>
<text text-anchor="start" x="522" y="-607" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="522" y="-596" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta4ConvectionDiffusion()</text>
<text text-anchor="start" x="522" y="-585" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="522" y="-574" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta4ConvectionDiffusion()</text>
<text text-anchor="start" x="522" y="-563" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ExplicitSolvingStrategy</text>
<text text-anchor="start" x="522" y="-552" font-family="Helvetica,sans-Serif" font-size="10.00">RungeKutta4ConvectionDiffusion()</text>
<text text-anchor="start" x="522" y="-541" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="522" y="-530" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="522" y="-519" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="522" y="-508" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="522" y="-497" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeRungeKuttaIntermediate</text>
<text text-anchor="start" x="522" y="-486" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="522" y="-475" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeRungeKuttaLast</text>
<text text-anchor="start" x="522" y="-464" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="522" y="-453" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveSolutionStep()</text>
<text text-anchor="start" x="522" y="-442" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="522" y="-431" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitBuilderType</text>
<text text-anchor="start" x="522" y="-420" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="522" y="-409" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="522" y="-398" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="522" y="-387" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="522" y="-376" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta4ConvectionDiffusion()</text>
<text text-anchor="start" x="522" y="-365" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="522" y="-354" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta4ConvectionDiffusion()</text>
<text text-anchor="start" x="522" y="-343" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="522" y="-332" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta4ConvectionDiffusion()</text>
<text text-anchor="start" x="522" y="-321" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="522" y="-310" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta4ConvectionDiffusion()</text>
<text text-anchor="start" x="522" y="-299" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ExplicitSolvingStrategy</text>
<text text-anchor="start" x="522" y="-288" font-family="Helvetica,sans-Serif" font-size="10.00">RungeKutta4ConvectionDiffusion()</text>
<text text-anchor="start" x="522" y="-277" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="522" y="-266" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="522" y="-255" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="522" y="-244" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="522" y="-233" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeRungeKuttaIntermediate</text>
<text text-anchor="start" x="522" y="-222" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="522" y="-211" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeRungeKuttaLast</text>
<text text-anchor="start" x="522" y="-200" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="522" y="-189" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="522" y="-178" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateOSSNodalProjections()</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node9 -->
<g id="edge6" class="edge">
<title>Node6&#45;&gt;Node9</title>
<path fill="none" stroke="midnightblue" d="M391.9,-1101.68C407.79,-1041.54 429.89,-982.43 460.5,-930 473.24,-908.18 491.14,-915.45 504.5,-894 536.5,-842.63 558.67,-782.37 574.01,-723.05"/>
<polygon fill="none" stroke="midnightblue" points="388.42,-1101.17 389.31,-1111.73 395.2,-1102.92 388.42,-1101.17"/>
</g>
<!-- Node11 -->
<g id="node9" class="node">
<title>Node11</title>
<g id="a_node9"><a xlink:href="../../dc/de4/class_kratos_1_1_adaptive_residual_based_newton_raphson_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="469.5,-1095.5 469.5,-1966.5 655.5,-1966.5 655.5,-1095.5 469.5,-1095.5"/>
<text text-anchor="start" x="477.5" y="-1954.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::AdaptiveResidual</text>
<text text-anchor="start" x="477.5" y="-1943.5" font-family="Helvetica,sans-Serif" font-size="10.00">BasedNewtonRaphsonStrategy</text>
<text text-anchor="start" x="477.5" y="-1932.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="562.5" y="-1921.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="469.5,-1914.5 655.5,-1914.5 "/>
<text text-anchor="start" x="477.5" y="-1902.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpScheme</text>
<text text-anchor="start" x="477.5" y="-1891.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpLinearSolver</text>
<text text-anchor="start" x="477.5" y="-1880.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpBuilderAndSolver</text>
<text text-anchor="start" x="477.5" y="-1869.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpConvergenceCriteria</text>
<text text-anchor="start" x="477.5" y="-1858.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpDx</text>
<text text-anchor="start" x="477.5" y="-1847.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpb</text>
<text text-anchor="start" x="477.5" y="-1836.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpA</text>
<text text-anchor="start" x="477.5" y="-1825.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mReformDofSetAtEachStep</text>
<text text-anchor="start" x="477.5" y="-1814.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCalculateReactionsFlag</text>
<text text-anchor="start" x="477.5" y="-1803.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mSolutionStepIsInitialized</text>
<text text-anchor="start" x="477.5" y="-1792.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<polyline fill="none" stroke="black" points="469.5,-1785.5 655.5,-1785.5 "/>
<text text-anchor="start" x="477.5" y="-1773.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSystemMatrix()</text>
<text text-anchor="start" x="477.5" y="-1762.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="477.5" y="-1751.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="477.5" y="-1740.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="477.5" y="-1729.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Initialize()</text>
<text text-anchor="start" x="477.5" y="-1718.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeSolutionStep()</text>
<text text-anchor="start" x="477.5" y="-1707.5" font-family="Helvetica,sans-Serif" font-size="10.00"># MaxIterationsExceeded()</text>
<text text-anchor="start" x="477.5" y="-1696.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PrintIncreaseOfDeltaTime()</text>
<text text-anchor="start" x="477.5" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ReductionStrategy()</text>
<text text-anchor="start" x="477.5" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="477.5" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AdaptiveResidualBasedNewton</text>
<text text-anchor="start" x="477.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">RaphsonStrategy()</text>
<text text-anchor="start" x="477.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TConvergenceCriteriaType</text>
<text text-anchor="start" x="477.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategyType</text>
<text text-anchor="start" x="477.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="477.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="477.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="477.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="477.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="477.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="477.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="477.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="477.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="477.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="477.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpLinearSolver</text>
<text text-anchor="start" x="477.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="477.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpConvergenceCriteria</text>
<text text-anchor="start" x="477.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDx</text>
<text text-anchor="start" x="477.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpb</text>
<text text-anchor="start" x="477.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpA</text>
<text text-anchor="start" x="477.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSetAtEachStep</text>
<text text-anchor="start" x="477.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="477.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSolutionStepIsInitialized</text>
<text text-anchor="start" x="477.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="477.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AdaptiveResidualBasedNewton</text>
<text text-anchor="start" x="477.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">RaphsonStrategy()</text>
<text text-anchor="start" x="477.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AdaptiveResidualBasedNewton</text>
<text text-anchor="start" x="477.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">RaphsonStrategy()</text>
<text text-anchor="start" x="477.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AdaptiveResidualBasedNewton</text>
<text text-anchor="start" x="477.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">RaphsonStrategy()</text>
<text text-anchor="start" x="477.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AdaptiveResidualBasedNewton</text>
<text text-anchor="start" x="477.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">RaphsonStrategy()</text>
<text text-anchor="start" x="477.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~AdaptiveResidualBasedNewton</text>
<text text-anchor="start" x="477.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">RaphsonStrategy()</text>
<text text-anchor="start" x="477.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="477.5" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetScheme()</text>
<text text-anchor="start" x="477.5" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="477.5" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetBuilderAndSolver()</text>
<text text-anchor="start" x="477.5" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="477.5" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 15 more...</text>
<text text-anchor="start" x="477.5" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSystemMatrix()</text>
<text text-anchor="start" x="477.5" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="477.5" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="477.5" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="477.5" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="477.5" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="477.5" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaxIterationsExceeded()</text>
<text text-anchor="start" x="477.5" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintIncreaseOfDeltaTime()</text>
<text text-anchor="start" x="477.5" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReductionStrategy()</text>
<text text-anchor="start" x="477.5" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="477.5" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AdaptiveResidualBasedNewton</text>
<text text-anchor="start" x="477.5" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">RaphsonStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node11 -->
<g id="edge8" class="edge">
<title>Node10&#45;&gt;Node11</title>
<path fill="none" stroke="midnightblue" d="M3164.87,-2552.26C2739.85,-2544.69 1027.13,-2491.95 664.5,-2132 618.66,-2086.5 588.9,-2028.52 570.15,-1966.62"/>
<polygon fill="none" stroke="midnightblue" points="3164.91,-2555.76 3174.97,-2552.43 3165.03,-2548.76 3164.91,-2555.76"/>
</g>
<!-- Node12 -->
<g id="node10" class="node">
<title>Node12</title>
<g id="a_node10"><a xlink:href="../../d4/d3d/class_kratos_1_1_eigensolver_nitsche_stabilization_strategy.html" target="_top" xlink:title="Strategy for solving generalized eigenvalue problems to obtain Nitsche stabilization factor.">
<polygon fill="none" stroke="black" points="674,-1211 674,-1851 865,-1851 865,-1211 674,-1211"/>
<text text-anchor="start" x="682" y="-1839" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::EigensolverNitsche</text>
<text text-anchor="start" x="682" y="-1828" font-family="Helvetica,sans-Serif" font-size="10.00">StabilizationStrategy&lt;</text>
<text text-anchor="start" x="682" y="-1817" font-family="Helvetica,sans-Serif" font-size="10.00"> TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="769.5" y="-1806" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="674,-1799 865,-1799 "/>
<text text-anchor="middle" x="769.5" y="-1787" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="674,-1780 865,-1780 "/>
<text text-anchor="start" x="682" y="-1768" font-family="Helvetica,sans-Serif" font-size="10.00">+ EigensolverNitscheStabilization</text>
<text text-anchor="start" x="682" y="-1757" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="682" y="-1746" font-family="Helvetica,sans-Serif" font-size="10.00">+ EigensolverNitscheStabilization</text>
<text text-anchor="start" x="682" y="-1735" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="682" y="-1724" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~EigensolverNitscheStabilization</text>
<text text-anchor="start" x="682" y="-1713" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="682" y="-1702" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetIsInitialized()</text>
<text text-anchor="start" x="682" y="-1691" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetIsInitialized()</text>
<text text-anchor="start" x="682" y="-1680" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="682" y="-1669" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetScheme()</text>
<text text-anchor="start" x="682" y="-1658" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBuilderAndSolver()</text>
<text text-anchor="start" x="682" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetBuilderAndSolver()</text>
<text text-anchor="start" x="682" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetStiffnessMatrix()</text>
<text text-anchor="start" x="682" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetStabilizationMatrix()</text>
<text text-anchor="start" x="682" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetStiffnessMatrix()</text>
<text text-anchor="start" x="682" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetStabilizationMatrix()</text>
<text text-anchor="start" x="682" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00">and 9 more...</text>
<text text-anchor="start" x="682" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="682" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemePointerType</text>
<text text-anchor="start" x="682" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverPointerType</text>
<text text-anchor="start" x="682" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseVectorType</text>
<text text-anchor="start" x="682" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="682" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="682" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseVectorPointerType</text>
<text text-anchor="start" x="682" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixPointerType</text>
<text text-anchor="start" x="682" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixType</text>
<text text-anchor="start" x="682" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseVectorType</text>
<text text-anchor="start" x="682" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="682" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="682" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="682" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="682" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">* mpStiffnessMatrix</text>
<text text-anchor="start" x="682" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* mpStabilizationMatrix</text>
<text text-anchor="start" x="682" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="682" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* EigensolverNitscheStabilization</text>
<text text-anchor="start" x="682" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="682" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* EigensolverNitscheStabilization</text>
<text text-anchor="start" x="682" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="682" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">* ~EigensolverNitscheStabilization</text>
<text text-anchor="start" x="682" y="-1339" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="682" y="-1328" font-family="Helvetica,sans-Serif" font-size="10.00">* SetIsInitialized()</text>
<text text-anchor="start" x="682" y="-1317" font-family="Helvetica,sans-Serif" font-size="10.00">* GetIsInitialized()</text>
<text text-anchor="start" x="682" y="-1306" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="682" y="-1295" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetScheme()</text>
<text text-anchor="start" x="682" y="-1284" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="682" y="-1273" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetBuilderAndSolver()</text>
<text text-anchor="start" x="682" y="-1262" font-family="Helvetica,sans-Serif" font-size="10.00">* GetStiffnessMatrix()</text>
<text text-anchor="start" x="682" y="-1251" font-family="Helvetica,sans-Serif" font-size="10.00">* GetStabilizationMatrix()</text>
<text text-anchor="start" x="682" y="-1240" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetStiffnessMatrix()</text>
<text text-anchor="start" x="682" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetStabilizationMatrix()</text>
<text text-anchor="start" x="682" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00">and 9 more...</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node12 -->
<g id="edge9" class="edge">
<title>Node10&#45;&gt;Node12</title>
<path fill="none" stroke="midnightblue" d="M3164.7,-2550.72C2761.11,-2536.97 1204.89,-2462.93 874.5,-2132 801.18,-2058.57 768.65,-1953.28 756.4,-1851.34"/>
<polygon fill="none" stroke="midnightblue" points="3164.77,-2554.22 3174.88,-2551.06 3165,-2547.23 3164.77,-2554.22"/>
</g>
<!-- Node13 -->
<g id="node11" class="node">
<title>Node13</title>
<g id="a_node11"><a xlink:href="../../d1/d90/class_kratos_1_1_eigensolver_strategy.html" target="_top" xlink:title="Strategy for solving generalized eigenvalue problems.">
<polygon fill="none" stroke="black" points="883.5,-1024 883.5,-2038 1063.5,-2038 1063.5,-1024 883.5,-1024"/>
<text text-anchor="start" x="891.5" y="-2026" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::EigensolverStrategy</text>
<text text-anchor="start" x="891.5" y="-2015" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="973.5" y="-2004" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="883.5,-1997 1063.5,-1997 "/>
<text text-anchor="middle" x="973.5" y="-1985" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="883.5,-1978 1063.5,-1978 "/>
<text text-anchor="start" x="891.5" y="-1966" font-family="Helvetica,sans-Serif" font-size="10.00">+ EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1955" font-family="Helvetica,sans-Serif" font-size="10.00">+ EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1944" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1933" font-family="Helvetica,sans-Serif" font-size="10.00">+ EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1922" font-family="Helvetica,sans-Serif" font-size="10.00">+ EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1911" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1900" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="891.5" y="-1889" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="891.5" y="-1878" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="891.5" y="-1867" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="891.5" y="-1856" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetIsInitialized()</text>
<text text-anchor="start" x="891.5" y="-1845" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetIsInitialized()</text>
<text text-anchor="start" x="891.5" y="-1834" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="891.5" y="-1823" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetScheme()</text>
<text text-anchor="start" x="891.5" y="-1812" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBuilderAndSolver()</text>
<text text-anchor="start" x="891.5" y="-1801" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetBuilderAndSolver()</text>
<text text-anchor="start" x="891.5" y="-1790" font-family="Helvetica,sans-Serif" font-size="10.00">and 13 more...</text>
<text text-anchor="start" x="891.5" y="-1779" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="891.5" y="-1768" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="891.5" y="-1757" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetScheme()</text>
<text text-anchor="start" x="891.5" y="-1746" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBuilderAndSolver()</text>
<text text-anchor="start" x="891.5" y="-1735" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetBuilderAndSolver()</text>
<text text-anchor="start" x="891.5" y="-1724" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMassMatrix()</text>
<text text-anchor="start" x="891.5" y="-1713" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetStiffnessMatrix()</text>
<text text-anchor="start" x="891.5" y="-1702" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetMassMatrix()</text>
<text text-anchor="start" x="891.5" y="-1691" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetStiffnessMatrix()</text>
<text text-anchor="start" x="891.5" y="-1680" font-family="Helvetica,sans-Serif" font-size="10.00"># Initialize()</text>
<text text-anchor="start" x="891.5" y="-1669" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="891.5" y="-1658" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="891.5" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverType</text>
<text text-anchor="start" x="891.5" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="891.5" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseVectorType</text>
<text text-anchor="start" x="891.5" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="891.5" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="891.5" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseVectorPointerType</text>
<text text-anchor="start" x="891.5" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixPointerType</text>
<text text-anchor="start" x="891.5" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixType</text>
<text text-anchor="start" x="891.5" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">and 13 more...</text>
<text text-anchor="start" x="891.5" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="891.5" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="891.5" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* mpMassMatrix</text>
<text text-anchor="start" x="891.5" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">* mpStiffnessMatrix</text>
<text text-anchor="start" x="891.5" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">* mComputeModalContribution</text>
<text text-anchor="start" x="891.5" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="891.5" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="891.5" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="891.5" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">* mMassMatrixDiagonalValue</text>
<text text-anchor="start" x="891.5" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">* mStiffnessMatrixDiagonal</text>
<text text-anchor="start" x="891.5" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">Value</text>
<text text-anchor="start" x="891.5" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">* mComputeModalDecompostion</text>
<text text-anchor="start" x="891.5" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">* EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* ~EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">* EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">* ~EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="891.5" y="-1339" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="891.5" y="-1328" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="891.5" y="-1317" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="891.5" y="-1306" font-family="Helvetica,sans-Serif" font-size="10.00">* SetIsInitialized()</text>
<text text-anchor="start" x="891.5" y="-1295" font-family="Helvetica,sans-Serif" font-size="10.00">* GetIsInitialized()</text>
<text text-anchor="start" x="891.5" y="-1284" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="891.5" y="-1273" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetScheme()</text>
<text text-anchor="start" x="891.5" y="-1262" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="891.5" y="-1251" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetBuilderAndSolver()</text>
<text text-anchor="start" x="891.5" y="-1240" font-family="Helvetica,sans-Serif" font-size="10.00">and 13 more...</text>
<text text-anchor="start" x="891.5" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="891.5" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="891.5" y="-1207" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetScheme()</text>
<text text-anchor="start" x="891.5" y="-1196" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="891.5" y="-1185" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetBuilderAndSolver()</text>
<text text-anchor="start" x="891.5" y="-1174" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMassMatrix()</text>
<text text-anchor="start" x="891.5" y="-1163" font-family="Helvetica,sans-Serif" font-size="10.00">* GetStiffnessMatrix()</text>
<text text-anchor="start" x="891.5" y="-1152" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetMassMatrix()</text>
<text text-anchor="start" x="891.5" y="-1141" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetStiffnessMatrix()</text>
<text text-anchor="start" x="891.5" y="-1130" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="891.5" y="-1119" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSystemMatrices()</text>
<text text-anchor="start" x="891.5" y="-1108" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSystemDofs()</text>
<text text-anchor="start" x="891.5" y="-1097" font-family="Helvetica,sans-Serif" font-size="10.00">* ApplyDirichletConditions()</text>
<text text-anchor="start" x="891.5" y="-1086" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignVariables()</text>
<text text-anchor="start" x="891.5" y="-1075" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeModalContribution()</text>
<text text-anchor="start" x="891.5" y="-1064" font-family="Helvetica,sans-Serif" font-size="10.00">* ReconstructSlaveSolution()</text>
<text text-anchor="start" x="891.5" y="-1053" font-family="Helvetica,sans-Serif" font-size="10.00">* ApplyDirichletConditions()</text>
<text text-anchor="start" x="891.5" y="-1042" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignVariables()</text>
<text text-anchor="start" x="891.5" y="-1031" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeModalDecomposition()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node13 -->
<g id="edge10" class="edge">
<title>Node10&#45;&gt;Node13</title>
<path fill="none" stroke="midnightblue" d="M3164.67,-2549.14C2782.09,-2529.71 1370.42,-2438.01 1072.5,-2132 1045.71,-2104.48 1024.54,-2072.67 1007.92,-2038.34"/>
<polygon fill="none" stroke="midnightblue" points="3164.71,-2552.65 3174.88,-2549.65 3165.06,-2545.66 3164.71,-2552.65"/>
</g>
<!-- Node14 -->
<g id="node12" class="node">
<title>Node14</title>
<g id="a_node12"><a xlink:href="../../d6/d79/class_kratos_1_1_explicit_hamilton_strategy.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="1081.5,-1282.5 1081.5,-1779.5 1251.5,-1779.5 1251.5,-1282.5 1081.5,-1282.5"/>
<text text-anchor="start" x="1089.5" y="-1767.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ExplicitHamilton</text>
<text text-anchor="start" x="1089.5" y="-1756.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="1166.5" y="-1745.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="1081.5,-1738.5 1251.5,-1738.5 "/>
<text text-anchor="start" x="1089.5" y="-1726.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpScheme</text>
<text text-anchor="start" x="1089.5" y="-1715.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpLinearSolver</text>
<text text-anchor="start" x="1089.5" y="-1704.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpBuilderAndSolver</text>
<text text-anchor="start" x="1089.5" y="-1693.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpDx</text>
<text text-anchor="start" x="1089.5" y="-1682.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpb</text>
<text text-anchor="start" x="1089.5" y="-1671.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpA</text>
<text text-anchor="start" x="1089.5" y="-1660.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mReformDofSetAtEachStep</text>
<text text-anchor="start" x="1089.5" y="-1649.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCalculateReactionsFlag</text>
<text text-anchor="start" x="1089.5" y="-1638.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mSolutionStepIsInitialized</text>
<text text-anchor="start" x="1089.5" y="-1627.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInitializeWasPerformed</text>
<text text-anchor="start" x="1089.5" y="-1616.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mComputeTime</text>
<polyline fill="none" stroke="black" points="1081.5,-1609.5 1251.5,-1609.5 "/>
<text text-anchor="start" x="1089.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="1089.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="1089.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitHamiltonStrategy()</text>
<text text-anchor="start" x="1089.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitHamiltonStrategy()</text>
<text text-anchor="start" x="1089.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ExplicitHamiltonStrategy()</text>
<text text-anchor="start" x="1089.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="1089.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetScheme()</text>
<text text-anchor="start" x="1089.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBuilderAndSolver()</text>
<text text-anchor="start" x="1089.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetBuilderAndSolver()</text>
<text text-anchor="start" x="1089.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetInitializePerformedFlag()</text>
<text text-anchor="start" x="1089.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetInitializePerformedFlag()</text>
<text text-anchor="start" x="1089.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 9 more...</text>
<text text-anchor="start" x="1089.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateReactions()</text>
<text text-anchor="start" x="1089.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Check()</text>
<text text-anchor="start" x="1089.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ExplicitHamiltonStrategy()</text>
<text text-anchor="start" x="1089.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="1089.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpLinearSolver</text>
<text text-anchor="start" x="1089.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="1089.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDx</text>
<text text-anchor="start" x="1089.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpb</text>
<text text-anchor="start" x="1089.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpA</text>
<text text-anchor="start" x="1089.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSetAtEachStep</text>
<text text-anchor="start" x="1089.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="1089.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSolutionStepIsInitialized</text>
<text text-anchor="start" x="1089.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="1089.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mComputeTime</text>
<text text-anchor="start" x="1089.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateReactions()</text>
<text text-anchor="start" x="1089.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="1089.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitHamiltonStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node14 -->
<g id="edge11" class="edge">
<title>Node10&#45;&gt;Node14</title>
<path fill="none" stroke="midnightblue" d="M3164.71,-2547.34C2803.14,-2522.08 1528.15,-2414.03 1260.5,-2132 1172.77,-2039.56 1146.93,-1900.64 1144.09,-1779.76"/>
<polygon fill="none" stroke="midnightblue" points="3164.67,-2550.85 3174.89,-2548.05 3165.15,-2543.86 3164.67,-2550.85"/>
</g>
<!-- Node15 -->
<g id="node13" class="node">
<title>Node15</title>
<g id="a_node13"><a xlink:href="../../d8/d66/class_kratos_1_1_fluid___phase___p_f_e_m2___explicit___strategy.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="1269.5,-1392.5 1269.5,-1669.5 1459.5,-1669.5 1459.5,-1392.5 1269.5,-1392.5"/>
<text text-anchor="start" x="1277.5" y="-1657.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Fluid_Phase</text>
<text text-anchor="start" x="1277.5" y="-1646.5" font-family="Helvetica,sans-Serif" font-size="10.00">_PFEM2_Explicit_Strategy</text>
<text text-anchor="start" x="1277.5" y="-1635.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="1364.5" y="-1624.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="1269.5,-1617.5 1459.5,-1617.5 "/>
<text text-anchor="middle" x="1364.5" y="-1605.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="1269.5,-1598.5 1459.5,-1598.5 "/>
<text text-anchor="start" x="1277.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="1277.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="1277.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Fluid_Phase_PFEM2_Explicit</text>
<text text-anchor="start" x="1277.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">_Strategy()</text>
<text text-anchor="start" x="1277.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~Fluid_Phase_PFEM2</text>
<text text-anchor="start" x="1277.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">_Explicit_Strategy()</text>
<text text-anchor="start" x="1277.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CreatePartition()</text>
<text text-anchor="start" x="1277.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssembleLoop()</text>
<text text-anchor="start" x="1277.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="1277.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="1277.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetToZeroVariablesInViscous</text>
<text text-anchor="start" x="1277.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="1277.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ UpdateLoopForViscousIterations</text>
<text text-anchor="start" x="1277.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">WithNormalization()</text>
<text text-anchor="start" x="1277.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetToZeroVariablesInPresure</text>
<text text-anchor="start" x="1277.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="1277.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ UpdateLoopForPressureIterations</text>
<text text-anchor="start" x="1277.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">WithNormalization()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node15 -->
<g id="edge12" class="edge">
<title>Node10&#45;&gt;Node15</title>
<path fill="none" stroke="midnightblue" d="M3164.68,-2544.68C2827.93,-2511.68 1706.25,-2384.3 1468.5,-2132 1352.4,-2008.8 1340.85,-1804.98 1348.48,-1669.59"/>
<polygon fill="none" stroke="midnightblue" points="3164.6,-2548.19 3174.89,-2545.67 3165.28,-2541.22 3164.6,-2548.19"/>
</g>
<!-- Node16 -->
<g id="node14" class="node">
<title>Node16</title>
<g id="a_node14"><a xlink:href="../../df/dd4/class_kratos_1_1_frac_step_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="1478,-1156 1478,-1906 1649,-1906 1649,-1156 1478,-1156"/>
<text text-anchor="start" x="1486" y="-1894" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::FracStepStrategy</text>
<text text-anchor="start" x="1486" y="-1883" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="1563.5" y="-1872" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="1478,-1865 1649,-1865 "/>
<text text-anchor="start" x="1486" y="-1853" font-family="Helvetica,sans-Serif" font-size="10.00"># mpfracvel_strategy</text>
<text text-anchor="start" x="1486" y="-1842" font-family="Helvetica,sans-Serif" font-size="10.00"># mppressurestep</text>
<text text-anchor="start" x="1486" y="-1831" font-family="Helvetica,sans-Serif" font-size="10.00"># mvelocity_toll</text>
<text text-anchor="start" x="1486" y="-1820" font-family="Helvetica,sans-Serif" font-size="10.00"># mpressure_toll</text>
<text text-anchor="start" x="1486" y="-1809" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxVelIterations</text>
<text text-anchor="start" x="1486" y="-1798" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxPressIterations</text>
<text text-anchor="start" x="1486" y="-1787" font-family="Helvetica,sans-Serif" font-size="10.00"># mtime_order</text>
<text text-anchor="start" x="1486" y="-1776" font-family="Helvetica,sans-Serif" font-size="10.00"># mprediction_order</text>
<text text-anchor="start" x="1486" y="-1765" font-family="Helvetica,sans-Serif" font-size="10.00"># mpredictor_corrector</text>
<text text-anchor="start" x="1486" y="-1754" font-family="Helvetica,sans-Serif" font-size="10.00"># mReformDofAtEachIteration</text>
<text text-anchor="start" x="1486" y="-1743" font-family="Helvetica,sans-Serif" font-size="10.00"># mecho_level</text>
<text text-anchor="start" x="1486" y="-1732" font-family="Helvetica,sans-Serif" font-size="10.00"># muse_dt_in_stabilization</text>
<polyline fill="none" stroke="black" points="1478,-1725 1649,-1725 "/>
<text text-anchor="start" x="1486" y="-1713" font-family="Helvetica,sans-Serif" font-size="10.00">+ FracStepStrategy()</text>
<text text-anchor="start" x="1486" y="-1702" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~FracStepStrategy()</text>
<text text-anchor="start" x="1486" y="-1691" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="1486" y="-1680" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolvePressure()</text>
<text text-anchor="start" x="1486" y="-1669" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolve()</text>
<text text-anchor="start" x="1486" y="-1658" font-family="Helvetica,sans-Serif" font-size="10.00">+ SavePressureIteration()</text>
<text text-anchor="start" x="1486" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignInitialStepValues()</text>
<text text-anchor="start" x="1486" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveStep1()</text>
<text text-anchor="start" x="1486" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalVelocityIteration()</text>
<text text-anchor="start" x="1486" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveStep4()</text>
<text text-anchor="start" x="1486" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00">and 9 more...</text>
<text text-anchor="start" x="1486" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="1486" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="1486" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="1486" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="1486" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="1486" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="1486" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="1486" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">* PartitionVector</text>
<text text-anchor="start" x="1486" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="1486" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="1486" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">* mpfracvel_strategy</text>
<text text-anchor="start" x="1486" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">* mppressurestep</text>
<text text-anchor="start" x="1486" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">* mvelocity_toll</text>
<text text-anchor="start" x="1486" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">* mpressure_toll</text>
<text text-anchor="start" x="1486" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxVelIterations</text>
<text text-anchor="start" x="1486" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxPressIterations</text>
<text text-anchor="start" x="1486" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* mtime_order</text>
<text text-anchor="start" x="1486" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">* mprediction_order</text>
<text text-anchor="start" x="1486" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* mpredictor_corrector</text>
<text text-anchor="start" x="1486" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofAtEachIteration</text>
<text text-anchor="start" x="1486" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* mecho_level</text>
<text text-anchor="start" x="1486" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">* muse_dt_in_stabilization</text>
<text text-anchor="start" x="1486" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">* m_step</text>
<text text-anchor="start" x="1486" y="-1339" font-family="Helvetica,sans-Serif" font-size="10.00">* mdomain_size</text>
<text text-anchor="start" x="1486" y="-1328" font-family="Helvetica,sans-Serif" font-size="10.00">* proj_is_initialized</text>
<text text-anchor="start" x="1486" y="-1317" font-family="Helvetica,sans-Serif" font-size="10.00">* mHasSlipProcess</text>
<text text-anchor="start" x="1486" y="-1306" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeIterationProcesses</text>
<text text-anchor="start" x="1486" y="-1295" font-family="Helvetica,sans-Serif" font-size="10.00">* CreatePartition()</text>
<text text-anchor="start" x="1486" y="-1284" font-family="Helvetica,sans-Serif" font-size="10.00">* FracStepStrategy()</text>
<text text-anchor="start" x="1486" y="-1273" font-family="Helvetica,sans-Serif" font-size="10.00">* ~FracStepStrategy()</text>
<text text-anchor="start" x="1486" y="-1262" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="1486" y="-1251" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvePressure()</text>
<text text-anchor="start" x="1486" y="-1240" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolve()</text>
<text text-anchor="start" x="1486" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00">* SavePressureIteration()</text>
<text text-anchor="start" x="1486" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignInitialStepValues()</text>
<text text-anchor="start" x="1486" y="-1207" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveStep1()</text>
<text text-anchor="start" x="1486" y="-1196" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalVelocityIteration()</text>
<text text-anchor="start" x="1486" y="-1185" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveStep4()</text>
<text text-anchor="start" x="1486" y="-1174" font-family="Helvetica,sans-Serif" font-size="10.00">and 9 more...</text>
<text text-anchor="start" x="1486" y="-1163" font-family="Helvetica,sans-Serif" font-size="10.00">* FracStepStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node16 -->
<g id="edge13" class="edge">
<title>Node10&#45;&gt;Node16</title>
<path fill="none" stroke="midnightblue" d="M3164.83,-2542.01C2851.52,-2502.4 1864.51,-2361.22 1657.5,-2132 1601.41,-2069.89 1571.06,-1988.61 1555.89,-1906.03"/>
<polygon fill="none" stroke="midnightblue" points="3164.44,-2545.49 3174.8,-2543.27 3165.31,-2538.54 3164.44,-2545.49"/>
</g>
<!-- Node17 -->
<g id="node15" class="node">
<title>Node17</title>
<g id="a_node15"><a xlink:href="../../d2/d4a/class_kratos_1_1_fractional_step_strategy.html" target="_top" xlink:title="Fractional&#45;step strategy for incompressible Navier&#45;Stokes formulation This strategy implements a spli...">
<polygon fill="none" stroke="black" points="1667,-930.5 1667,-2131.5 1866,-2131.5 1866,-930.5 1667,-930.5"/>
<text text-anchor="start" x="1675" y="-2119.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::FractionalStepStrategy</text>
<text text-anchor="start" x="1675" y="-2108.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="1766.5" y="-2097.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="1667,-2090.5 1866,-2090.5 "/>
<text text-anchor="start" x="1675" y="-2078.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mVelocityTolerance</text>
<text text-anchor="start" x="1675" y="-2067.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mPressureTolerance</text>
<text text-anchor="start" x="1675" y="-2056.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mPressureGradientRelaxation</text>
<text text-anchor="start" x="1675" y="-2045.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="1675" y="-2034.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxVelocityIter</text>
<text text-anchor="start" x="1675" y="-2023.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxPressureIter</text>
<text text-anchor="start" x="1675" y="-2012.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mDomainSize</text>
<text text-anchor="start" x="1675" y="-2001.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mTimeOrder</text>
<text text-anchor="start" x="1675" y="-1990.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mPredictorCorrector</text>
<text text-anchor="start" x="1675" y="-1979.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mUseSlipConditions</text>
<text text-anchor="start" x="1675" y="-1968.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mReformDofSet</text>
<text text-anchor="start" x="1675" y="-1957.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCalculateReactionsFlag</text>
<text text-anchor="start" x="1675" y="-1946.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpMomentumStrategy</text>
<text text-anchor="start" x="1675" y="-1935.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpPressureStrategy</text>
<text text-anchor="start" x="1675" y="-1924.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mExtraIterationSteps</text>
<text text-anchor="start" x="1675" y="-1913.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mrPeriodicIdVar</text>
<polyline fill="none" stroke="black" points="1667,-1906.5 1866,-1906.5 "/>
<text text-anchor="start" x="1675" y="-1894.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategy()</text>
<text text-anchor="start" x="1675" y="-1883.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategy()</text>
<text text-anchor="start" x="1675" y="-1872.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategy()</text>
<text text-anchor="start" x="1675" y="-1861.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategy()</text>
<text text-anchor="start" x="1675" y="-1850.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~FractionalStepStrategy()</text>
<text text-anchor="start" x="1675" y="-1839.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="1675" y="-1828.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="1675" y="-1817.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="1675" y="-1806.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="1675" y="-1795.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="1675" y="-1784.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateReactions()</text>
<text text-anchor="start" x="1675" y="-1773.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AddIterationStep()</text>
<text text-anchor="start" x="1675" y="-1762.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearExtraIterationSteps()</text>
<text text-anchor="start" x="1675" y="-1751.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="1675" y="-1740.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="1675" y="-1729.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="1675" y="-1718.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetCalculateReactionsFlag()</text>
<text text-anchor="start" x="1675" y="-1707.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="1675" y="-1696.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="1675" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="1675" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetTimeCoefficients()</text>
<text text-anchor="start" x="1675" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveStep()</text>
<text text-anchor="start" x="1675" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckFractionalStepConvergence()</text>
<text text-anchor="start" x="1675" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckPressureConvergence()</text>
<text text-anchor="start" x="1675" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeSplitOssProjections()</text>
<text text-anchor="start" x="1675" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateEndOfStepVelocity()</text>
<text text-anchor="start" x="1675" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00"># EnforceSlipCondition()</text>
<text text-anchor="start" x="1675" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PeriodicConditionProjection</text>
<text text-anchor="start" x="1675" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">Correction()</text>
<text text-anchor="start" x="1675" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PeriodicConditionVelocity</text>
<text text-anchor="start" x="1675" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">Correction()</text>
<text text-anchor="start" x="1675" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="1675" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="1675" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="1675" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StrategyPointerType</text>
<text text-anchor="start" x="1675" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolverSettingsType</text>
<text text-anchor="start" x="1675" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="1675" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="1675" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mVelocityTolerance</text>
<text text-anchor="start" x="1675" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPressureTolerance</text>
<text text-anchor="start" x="1675" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPressureGradientRelaxation</text>
<text text-anchor="start" x="1675" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="1675" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxVelocityIter</text>
<text text-anchor="start" x="1675" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxPressureIter</text>
<text text-anchor="start" x="1675" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mDomainSize</text>
<text text-anchor="start" x="1675" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mTimeOrder</text>
<text text-anchor="start" x="1675" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPredictorCorrector</text>
<text text-anchor="start" x="1675" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mUseSlipConditions</text>
<text text-anchor="start" x="1675" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSet</text>
<text text-anchor="start" x="1675" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="1675" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpMomentumStrategy</text>
<text text-anchor="start" x="1675" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpPressureStrategy</text>
<text text-anchor="start" x="1675" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mExtraIterationSteps</text>
<text text-anchor="start" x="1675" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mrPeriodicIdVar</text>
<text text-anchor="start" x="1675" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategy()</text>
<text text-anchor="start" x="1675" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategy()</text>
<text text-anchor="start" x="1675" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategy()</text>
<text text-anchor="start" x="1675" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategy()</text>
<text text-anchor="start" x="1675" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~FractionalStepStrategy()</text>
<text text-anchor="start" x="1675" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="1675" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="1675" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="1675" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="1675" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="1675" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateReactions()</text>
<text text-anchor="start" x="1675" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddIterationStep()</text>
<text text-anchor="start" x="1675" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearExtraIterationSteps()</text>
<text text-anchor="start" x="1675" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="1675" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="1675" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="1675" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetCalculateReactionsFlag()</text>
<text text-anchor="start" x="1675" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="1675" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="1675" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="1675" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetTimeCoefficients()</text>
<text text-anchor="start" x="1675" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveStep()</text>
<text text-anchor="start" x="1675" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckFractionalStepConvergence()</text>
<text text-anchor="start" x="1675" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckPressureConvergence()</text>
<text text-anchor="start" x="1675" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeSplitOssProjections()</text>
<text text-anchor="start" x="1675" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateEndOfStepVelocity()</text>
<text text-anchor="start" x="1675" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EnforceSlipCondition()</text>
<text text-anchor="start" x="1675" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PeriodicConditionProjection</text>
<text text-anchor="start" x="1675" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">Correction()</text>
<text text-anchor="start" x="1675" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PeriodicConditionVelocity</text>
<text text-anchor="start" x="1675" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">Correction()</text>
<text text-anchor="start" x="1675" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeStrategy()</text>
<text text-anchor="start" x="1675" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="1675" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node17 -->
<g id="edge14" class="edge">
<title>Node10&#45;&gt;Node17</title>
<path fill="none" stroke="midnightblue" d="M3164.91,-2537.64C2880.94,-2488.6 2051.13,-2330.63 1874.5,-2132 1871.69,-2128.84 1868.94,-2125.62 1866.24,-2122.37"/>
<polygon fill="none" stroke="midnightblue" points="3164.33,-2541.1 3174.78,-2539.34 3165.52,-2534.2 3164.33,-2541.1"/>
</g>
<!-- Node19 -->
<g id="node17" class="node">
<title>Node19</title>
<g id="a_node17"><a xlink:href="../../de/d17/class_kratos_1_1_gauss_seidel_linear_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="1884,-1167 1884,-1895 2059,-1895 2059,-1167 1884,-1167"/>
<text text-anchor="start" x="1892" y="-1883" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::GaussSeidelLinear</text>
<text text-anchor="start" x="1892" y="-1872" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="1971.5" y="-1861" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="1884,-1854 2059,-1854 "/>
<text text-anchor="middle" x="1971.5" y="-1842" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="1884,-1835 2059,-1835 "/>
<text text-anchor="start" x="1892" y="-1823" font-family="Helvetica,sans-Serif" font-size="10.00">+ GaussSeidelLinearStrategy()</text>
<text text-anchor="start" x="1892" y="-1812" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~GaussSeidelLinearStrategy()</text>
<text text-anchor="start" x="1892" y="-1801" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="1892" y="-1790" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetScheme()</text>
<text text-anchor="start" x="1892" y="-1779" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBuilderAndSolver()</text>
<text text-anchor="start" x="1892" y="-1768" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetBuilderAndSolver()</text>
<text text-anchor="start" x="1892" y="-1757" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetReformDofSetAtEachStep</text>
<text text-anchor="start" x="1892" y="-1746" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="1892" y="-1735" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetReformDofSetAtEachStep</text>
<text text-anchor="start" x="1892" y="-1724" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="1892" y="-1713" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="1892" y="-1702" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="1892" y="-1691" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSystemMatrix()</text>
<text text-anchor="start" x="1892" y="-1680" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetResidualNorm()</text>
<text text-anchor="start" x="1892" y="-1669" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateOutputData()</text>
<text text-anchor="start" x="1892" y="-1658" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="1892" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="1892" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="1892" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="1892" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="1892" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="1892" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="1892" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="1892" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="1892" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="1892" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="1892" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="1892" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="1892" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="1892" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">* mpLinearSolver</text>
<text text-anchor="start" x="1892" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="1892" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="1892" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDx</text>
<text text-anchor="start" x="1892" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">* mpb</text>
<text text-anchor="start" x="1892" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">* mpA</text>
<text text-anchor="start" x="1892" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSetAtEachStep</text>
<text text-anchor="start" x="1892" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateNormDxFlag</text>
<text text-anchor="start" x="1892" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="1892" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxIterationNumber</text>
<text text-anchor="start" x="1892" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* GaussSeidelLinearStrategy()</text>
<text text-anchor="start" x="1892" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">* ~GaussSeidelLinearStrategy()</text>
<text text-anchor="start" x="1892" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="1892" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">* GetScheme()</text>
<text text-anchor="start" x="1892" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="1892" y="-1339" font-family="Helvetica,sans-Serif" font-size="10.00">* GetBuilderAndSolver()</text>
<text text-anchor="start" x="1892" y="-1328" font-family="Helvetica,sans-Serif" font-size="10.00">* SetReformDofSetAtEachStep</text>
<text text-anchor="start" x="1892" y="-1317" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="1892" y="-1306" font-family="Helvetica,sans-Serif" font-size="10.00">* GetReformDofSetAtEachStep</text>
<text text-anchor="start" x="1892" y="-1295" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="1892" y="-1284" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="1892" y="-1273" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="1892" y="-1262" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSystemMatrix()</text>
<text text-anchor="start" x="1892" y="-1251" font-family="Helvetica,sans-Serif" font-size="10.00">* GetResidualNorm()</text>
<text text-anchor="start" x="1892" y="-1240" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateOutputData()</text>
<text text-anchor="start" x="1892" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="1892" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="1892" y="-1207" font-family="Helvetica,sans-Serif" font-size="10.00">* MaxIterationsExceeded()</text>
<text text-anchor="start" x="1892" y="-1196" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="1892" y="-1185" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="1892" y="-1174" font-family="Helvetica,sans-Serif" font-size="10.00">* GaussSeidelLinearStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node19 -->
<g id="edge16" class="edge">
<title>Node10&#45;&gt;Node19</title>
<path fill="none" stroke="midnightblue" d="M3164.58,-2550.8C2935.21,-2538.79 2352.87,-2474.32 2067.5,-2132 2012.19,-2065.66 1982.45,-1980.38 1967.56,-1895.06"/>
<polygon fill="none" stroke="midnightblue" points="3164.75,-2554.32 3174.91,-2551.32 3165.1,-2547.32 3164.75,-2554.32"/>
</g>
<!-- Node20 -->
<g id="node18" class="node">
<title>Node20</title>
<g id="a_node18"><a xlink:href="../../d2/de3/class_kratos_1_1_harmonic_analysis_strategy.html" target="_top" xlink:title="Strategy for solving generalized eigenvalue problems.">
<polygon fill="none" stroke="black" points="2077,-1145 2077,-1917 2254,-1917 2254,-1145 2077,-1145"/>
<text text-anchor="start" x="2085" y="-1905" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::HarmonicAnalysis</text>
<text text-anchor="start" x="2085" y="-1894" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="2165.5" y="-1883" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="2077,-1876 2254,-1876 "/>
<text text-anchor="middle" x="2165.5" y="-1864" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="2077,-1857 2254,-1857 "/>
<text text-anchor="start" x="2085" y="-1845" font-family="Helvetica,sans-Serif" font-size="10.00">+ HarmonicAnalysisStrategy()</text>
<text text-anchor="start" x="2085" y="-1834" font-family="Helvetica,sans-Serif" font-size="10.00">+ HarmonicAnalysisStrategy()</text>
<text text-anchor="start" x="2085" y="-1823" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~HarmonicAnalysisStrategy()</text>
<text text-anchor="start" x="2085" y="-1812" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetIsInitialized()</text>
<text text-anchor="start" x="2085" y="-1801" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetIsInitialized()</text>
<text text-anchor="start" x="2085" y="-1790" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="2085" y="-1779" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetScheme()</text>
<text text-anchor="start" x="2085" y="-1768" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBuilderAndSolver()</text>
<text text-anchor="start" x="2085" y="-1757" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetBuilderAndSolver()</text>
<text text-anchor="start" x="2085" y="-1746" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetReformDofSetAtEachStep</text>
<text text-anchor="start" x="2085" y="-1735" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="2085" y="-1724" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetReformDofSetAtEachStep</text>
<text text-anchor="start" x="2085" y="-1713" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="2085" y="-1702" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetUseMaterialDampingFlag()</text>
<text text-anchor="start" x="2085" y="-1691" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetUseMaterialDampingFlag()</text>
<text text-anchor="start" x="2085" y="-1680" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="2085" y="-1669" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="2085" y="-1658" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="2085" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="2085" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="2085" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="2085" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemePointerType</text>
<text text-anchor="start" x="2085" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverPointerType</text>
<text text-anchor="start" x="2085" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseSpaceType</text>
<text text-anchor="start" x="2085" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseVectorType</text>
<text text-anchor="start" x="2085" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="2085" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixPointerType</text>
<text text-anchor="start" x="2085" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="2085" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseVectorPointerType</text>
<text text-anchor="start" x="2085" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* ComplexType</text>
<text text-anchor="start" x="2085" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">* ComplexVectorType</text>
<text text-anchor="start" x="2085" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="2085" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="2085" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="2085" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="2085" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="2085" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">* mpForceVector</text>
<text text-anchor="start" x="2085" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">* mpModalMatrix</text>
<text text-anchor="start" x="2085" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">* mRayleighAlpha</text>
<text text-anchor="start" x="2085" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* mRayleighBeta</text>
<text text-anchor="start" x="2085" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">* mSystemDamping</text>
<text text-anchor="start" x="2085" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* mUseMaterialDamping</text>
<text text-anchor="start" x="2085" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaterialDampingRatios</text>
<text text-anchor="start" x="2085" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* HarmonicAnalysisStrategy()</text>
<text text-anchor="start" x="2085" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">* HarmonicAnalysisStrategy()</text>
<text text-anchor="start" x="2085" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">* ~HarmonicAnalysisStrategy()</text>
<text text-anchor="start" x="2085" y="-1339" font-family="Helvetica,sans-Serif" font-size="10.00">* SetIsInitialized()</text>
<text text-anchor="start" x="2085" y="-1328" font-family="Helvetica,sans-Serif" font-size="10.00">* GetIsInitialized()</text>
<text text-anchor="start" x="2085" y="-1317" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="2085" y="-1306" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetScheme()</text>
<text text-anchor="start" x="2085" y="-1295" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="2085" y="-1284" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetBuilderAndSolver()</text>
<text text-anchor="start" x="2085" y="-1273" font-family="Helvetica,sans-Serif" font-size="10.00">* SetReformDofSetAtEachStep</text>
<text text-anchor="start" x="2085" y="-1262" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="2085" y="-1251" font-family="Helvetica,sans-Serif" font-size="10.00">* GetReformDofSetAtEachStep</text>
<text text-anchor="start" x="2085" y="-1240" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="2085" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUseMaterialDampingFlag()</text>
<text text-anchor="start" x="2085" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00">* GetUseMaterialDampingFlag()</text>
<text text-anchor="start" x="2085" y="-1207" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="2085" y="-1196" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="2085" y="-1185" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="2085" y="-1174" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="2085" y="-1163" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="2085" y="-1152" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignVariables()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node20 -->
<g id="edge17" class="edge">
<title>Node10&#45;&gt;Node20</title>
<path fill="none" stroke="midnightblue" d="M3164.79,-2543.41C2962.71,-2516.66 2492.26,-2424.57 2262.5,-2132 2214.19,-2070.49 2185.73,-1994.29 2169.66,-1917.07"/>
<polygon fill="none" stroke="midnightblue" points="3164.43,-2546.89 3174.8,-2544.71 3165.33,-2539.95 3164.43,-2546.89"/>
</g>
<!-- Node21 -->
<g id="node19" class="node">
<title>Node21</title>
<g id="a_node19"><a xlink:href="../../d8/d3e/class_kratos_1_1_helmholtz_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="2272,-1315.5 2272,-1746.5 2443,-1746.5 2443,-1315.5 2272,-1315.5"/>
<text text-anchor="start" x="2280" y="-1734.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::HelmholtzStrategy</text>
<text text-anchor="start" x="2280" y="-1723.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="2357.5" y="-1712.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="2272,-1705.5 2443,-1705.5 "/>
<text text-anchor="middle" x="2357.5" y="-1693.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="2272,-1686.5 2443,-1686.5 "/>
<text text-anchor="start" x="2280" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ HelmholtzStrategy()</text>
<text text-anchor="start" x="2280" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~HelmholtzStrategy()</text>
<text text-anchor="start" x="2280" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="2280" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="2280" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSystemMatrix()</text>
<text text-anchor="start" x="2280" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSystemVector()</text>
<text text-anchor="start" x="2280" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSolutionVector()</text>
<text text-anchor="start" x="2280" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExportSystem()</text>
<text text-anchor="start" x="2280" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetStrategy()</text>
<text text-anchor="start" x="2280" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="2280" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="2280" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="2280" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="2280" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="2280" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="2280" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="2280" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpscheme</text>
<text text-anchor="start" x="2280" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpstrategy</text>
<text text-anchor="start" x="2280" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpbulider_and_solver</text>
<text text-anchor="start" x="2280" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mecho_level</text>
<text text-anchor="start" x="2280" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mreform_dof_set_at</text>
<text text-anchor="start" x="2280" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">_each_step</text>
<text text-anchor="start" x="2280" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mcompute_reactions</text>
<text text-anchor="start" x="2280" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HelmholtzStrategy()</text>
<text text-anchor="start" x="2280" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~HelmholtzStrategy()</text>
<text text-anchor="start" x="2280" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="2280" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="2280" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSystemMatrix()</text>
<text text-anchor="start" x="2280" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSystemVector()</text>
<text text-anchor="start" x="2280" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSolutionVector()</text>
<text text-anchor="start" x="2280" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExportSystem()</text>
<text text-anchor="start" x="2280" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetStrategy()</text>
<text text-anchor="start" x="2280" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HelmholtzStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node21 -->
<g id="edge18" class="edge">
<title>Node10&#45;&gt;Node21</title>
<path fill="none" stroke="midnightblue" d="M3164.92,-2533.25C2992.04,-2491.26 2628.98,-2377.39 2452.5,-2132 2372.99,-2021.44 2349.52,-1869.77 2345.78,-1746.58"/>
<polygon fill="none" stroke="midnightblue" points="3164.23,-2536.69 3174.77,-2535.62 3165.86,-2529.88 3164.23,-2536.69"/>
</g>
<!-- Node22 -->
<g id="node20" class="node">
<title>Node22</title>
<g id="a_node20"><a xlink:href="../../d2/d9e/class_kratos_1_1_lap_modified_linear_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="2461.5,-1161.5 2461.5,-1900.5 2635.5,-1900.5 2635.5,-1161.5 2461.5,-1161.5"/>
<text text-anchor="start" x="2469.5" y="-1888.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::LapModifiedLinear</text>
<text text-anchor="start" x="2469.5" y="-1877.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TDim, TSparseSpace,</text>
<text text-anchor="middle" x="2548.5" y="-1866.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="2461.5,-1859.5 2635.5,-1859.5 "/>
<text text-anchor="middle" x="2548.5" y="-1847.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="2461.5,-1840.5 2635.5,-1840.5 "/>
<text text-anchor="start" x="2469.5" y="-1828.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LapModifiedLinearStrategy()</text>
<text text-anchor="start" x="2469.5" y="-1817.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LapModifiedLinearStrategy()</text>
<text text-anchor="start" x="2469.5" y="-1806.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~LapModifiedLinearStrategy()</text>
<text text-anchor="start" x="2469.5" y="-1795.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="2469.5" y="-1784.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetScheme()</text>
<text text-anchor="start" x="2469.5" y="-1773.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBuilderAndSolver()</text>
<text text-anchor="start" x="2469.5" y="-1762.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetBuilderAndSolver()</text>
<text text-anchor="start" x="2469.5" y="-1751.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="2469.5" y="-1740.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetCalculateReactionsFlag()</text>
<text text-anchor="start" x="2469.5" y="-1729.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetReformDofSetAtEachStep</text>
<text text-anchor="start" x="2469.5" y="-1718.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="2469.5" y="-1707.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="2469.5" y="-1696.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="2469.5" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="2469.5" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="2469.5" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="2469.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="2469.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="2469.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="2469.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="2469.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="2469.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="2469.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="2469.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="2469.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodesArrayType</text>
<text text-anchor="start" x="2469.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="2469.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="2469.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpLinearSolver</text>
<text text-anchor="start" x="2469.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="2469.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="2469.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpD</text>
<text text-anchor="start" x="2469.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDx</text>
<text text-anchor="start" x="2469.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpb</text>
<text text-anchor="start" x="2469.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpA</text>
<text text-anchor="start" x="2469.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSetAtEachStep</text>
<text text-anchor="start" x="2469.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateNormDxFlag</text>
<text text-anchor="start" x="2469.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="2469.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSolutionStepIsInitialized</text>
<text text-anchor="start" x="2469.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="2469.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxIterationNumber</text>
<text text-anchor="start" x="2469.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LapModifiedLinearStrategy()</text>
<text text-anchor="start" x="2469.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LapModifiedLinearStrategy()</text>
<text text-anchor="start" x="2469.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~LapModifiedLinearStrategy()</text>
<text text-anchor="start" x="2469.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="2469.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetScheme()</text>
<text text-anchor="start" x="2469.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="2469.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetBuilderAndSolver()</text>
<text text-anchor="start" x="2469.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="2469.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetCalculateReactionsFlag()</text>
<text text-anchor="start" x="2469.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetReformDofSetAtEachStep</text>
<text text-anchor="start" x="2469.5" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="2469.5" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="2469.5" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="2469.5" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="2469.5" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaxIterationsExceeded()</text>
<text text-anchor="start" x="2469.5" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="2469.5" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddFSILaplacian()</text>
<text text-anchor="start" x="2469.5" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstructMatrixStructure</text>
<text text-anchor="start" x="2469.5" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FluidDivergenceMatrixD()</text>
<text text-anchor="start" x="2469.5" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAuxiliariesFSI()</text>
<text text-anchor="start" x="2469.5" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LapModifiedLinearStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node22 -->
<g id="edge19" class="edge">
<title>Node10&#45;&gt;Node22</title>
<path fill="none" stroke="midnightblue" d="M3165.39,-2517.27C3026.23,-2458.93 2770.08,-2330.23 2644.5,-2132 2600.96,-2063.27 2574.94,-1981.49 2559.84,-1900.77"/>
<polygon fill="none" stroke="midnightblue" points="3164.22,-2520.57 3174.79,-2521.18 3166.9,-2514.11 3164.22,-2520.57"/>
</g>
<!-- Node23 -->
<g id="node21" class="node">
<title>Node23</title>
<g id="a_node21"><a xlink:href="../../d3/d6a/class_kratos_1_1_laplacian_mesh_moving_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="2653.5,-1337.5 2653.5,-1724.5 2847.5,-1724.5 2847.5,-1337.5 2653.5,-1337.5"/>
<text text-anchor="start" x="2661.5" y="-1712.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::LaplacianMeshMoving</text>
<text text-anchor="start" x="2661.5" y="-1701.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="2750.5" y="-1690.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="2653.5,-1683.5 2847.5,-1683.5 "/>
<text text-anchor="middle" x="2750.5" y="-1671.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="2653.5,-1664.5 2847.5,-1664.5 "/>
<text text-anchor="start" x="2661.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LaplacianMeshMovingStrategy()</text>
<text text-anchor="start" x="2661.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~LaplacianMeshMovingStrategy()</text>
<text text-anchor="start" x="2661.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="2661.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="2661.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="2661.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="2661.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="2661.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="2661.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="2661.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpmesh_model_part</text>
<text text-anchor="start" x="2661.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mstrategy_x</text>
<text text-anchor="start" x="2661.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mstrategy_y</text>
<text text-anchor="start" x="2661.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mstrategy_z</text>
<text text-anchor="start" x="2661.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpbuilder_and_solver_x</text>
<text text-anchor="start" x="2661.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpbuilder_and_solver_y</text>
<text text-anchor="start" x="2661.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpbuilder_and_solver_z</text>
<text text-anchor="start" x="2661.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mreform_dof_set_at</text>
<text text-anchor="start" x="2661.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">_each_step</text>
<text text-anchor="start" x="2661.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mcompute_reactions</text>
<text text-anchor="start" x="2661.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mtime_order</text>
<text text-anchor="start" x="2661.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mecho_level</text>
<text text-anchor="start" x="2661.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mcalculate_mesh_velocities</text>
<text text-anchor="start" x="2661.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mreinitialize_model</text>
<text text-anchor="start" x="2661.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">_part_at_each_step</text>
<text text-anchor="start" x="2661.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LaplacianMeshMovingStrategy()</text>
<text text-anchor="start" x="2661.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~LaplacianMeshMovingStrategy()</text>
<text text-anchor="start" x="2661.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="2661.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="2661.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LaplacianMeshMovingStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node23 -->
<g id="edge20" class="edge">
<title>Node10&#45;&gt;Node23</title>
<path fill="none" stroke="midnightblue" d="M3167.05,-2483.9C3072.75,-2408.25 2930.77,-2278.39 2856.5,-2132 2792.36,-2005.59 2766.33,-1847.13 2756.08,-1724.8"/>
<polygon fill="none" stroke="midnightblue" points="3164.89,-2486.65 3174.89,-2490.15 3169.25,-2481.18 3164.89,-2486.65"/>
</g>
<!-- Node24 -->
<g id="node22" class="node">
<title>Node24</title>
<g id="a_node22"><a xlink:href="../../d0/d83/class_kratos_1_1_m_p_m_explicit_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="2865.5,-1348.5 2865.5,-1713.5 3047.5,-1713.5 3047.5,-1348.5 2865.5,-1348.5"/>
<text text-anchor="start" x="2873.5" y="-1701.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::MPMExplicitStrategy</text>
<text text-anchor="start" x="2873.5" y="-1690.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="2956.5" y="-1679.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="2865.5,-1672.5 3047.5,-1672.5 "/>
<text text-anchor="middle" x="2956.5" y="-1660.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="2865.5,-1653.5 3047.5,-1653.5 "/>
<text text-anchor="start" x="2873.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="2873.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="2873.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ MPMExplicitStrategy()</text>
<text text-anchor="start" x="2873.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~MPMExplicitStrategy()</text>
<text text-anchor="start" x="2873.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="2873.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetScheme()</text>
<text text-anchor="start" x="2873.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="2873.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="2873.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="2873.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="2873.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetKeepSystemConstantDuring</text>
<text text-anchor="start" x="2873.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="2873.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetKeepSystemConstantDuring</text>
<text text-anchor="start" x="2873.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="2873.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="2873.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSetAtEachStep</text>
<text text-anchor="start" x="2873.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="2873.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSolutionStepIsInitialized</text>
<text text-anchor="start" x="2873.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="2873.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mKeepSystemConstantDuring</text>
<text text-anchor="start" x="2873.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations</text>
<text text-anchor="start" x="2873.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFinalizeSolutionStep</text>
<text text-anchor="start" x="2873.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="2873.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="2873.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateAndAddRHS()</text>
<text text-anchor="start" x="2873.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateReactions()</text>
<text text-anchor="start" x="2873.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPMExplicitStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node24 -->
<g id="edge21" class="edge">
<title>Node10&#45;&gt;Node24</title>
<path fill="none" stroke="midnightblue" d="M3169.88,-2393.9C3129.68,-2316.89 3085.09,-2221.89 3056.5,-2132 3012.97,-1995.14 2987.47,-1834.35 2973.12,-1713.69"/>
<polygon fill="none" stroke="midnightblue" points="3167.01,-2395.97 3174.76,-2403.2 3173.21,-2392.72 3167.01,-2395.97"/>
</g>
<!-- Node25 -->
<g id="node23" class="node">
<title>Node25</title>
<g id="a_node23"><a xlink:href="../../d0/dfa/class_kratos_1_1_mechanical_explicit_strategy.html" target="_top" xlink:title="This strategy is used for the explicit time integration.">
<polygon fill="none" stroke="black" points="3065.5,-1150.5 3065.5,-1911.5 3241.5,-1911.5 3241.5,-1150.5 3065.5,-1150.5"/>
<text text-anchor="start" x="3073.5" y="-1899.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::MechanicalExplicit</text>
<text text-anchor="start" x="3073.5" y="-1888.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="3153.5" y="-1877.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="3065.5,-1870.5 3241.5,-1870.5 "/>
<text text-anchor="start" x="3073.5" y="-1858.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpScheme</text>
<text text-anchor="start" x="3073.5" y="-1847.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mReformDofSetAtEachStep</text>
<text text-anchor="start" x="3073.5" y="-1836.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCalculateReactionsFlag</text>
<text text-anchor="start" x="3073.5" y="-1825.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInitializeWasPerformed</text>
<polyline fill="none" stroke="black" points="3065.5,-1818.5 3241.5,-1818.5 "/>
<text text-anchor="start" x="3073.5" y="-1806.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ MechanicalExplicitStrategy()</text>
<text text-anchor="start" x="3073.5" y="-1795.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~MechanicalExplicitStrategy()</text>
<text text-anchor="start" x="3073.5" y="-1784.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="3073.5" y="-1773.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetScheme()</text>
<text text-anchor="start" x="3073.5" y="-1762.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetInitializePerformedFlag()</text>
<text text-anchor="start" x="3073.5" y="-1751.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetInitializePerformedFlag()</text>
<text text-anchor="start" x="3073.5" y="-1740.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="3073.5" y="-1729.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetCalculateReactionsFlag()</text>
<text text-anchor="start" x="3073.5" y="-1718.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetReformDofSetAtEachStep</text>
<text text-anchor="start" x="3073.5" y="-1707.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="3073.5" y="-1696.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetReformDofSetAtEachStep</text>
<text text-anchor="start" x="3073.5" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="3073.5" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="3073.5" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="3073.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="3073.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="3073.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="3073.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="3073.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00"># MechanicalExplicitStrategy()</text>
<text text-anchor="start" x="3073.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="3073.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="3073.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="3073.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="3073.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="3073.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="3073.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="3073.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodesArrayType</text>
<text text-anchor="start" x="3073.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementsArrayType</text>
<text text-anchor="start" x="3073.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConditionsArrayType</text>
<text text-anchor="start" x="3073.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="3073.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofType</text>
<text text-anchor="start" x="3073.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofPointerType</text>
<text text-anchor="start" x="3073.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="3073.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="3073.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="3073.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSetAtEachStep</text>
<text text-anchor="start" x="3073.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="3073.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="3073.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MechanicalExplicitStrategy()</text>
<text text-anchor="start" x="3073.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~MechanicalExplicitStrategy()</text>
<text text-anchor="start" x="3073.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="3073.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetScheme()</text>
<text text-anchor="start" x="3073.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetInitializePerformedFlag()</text>
<text text-anchor="start" x="3073.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetInitializePerformedFlag()</text>
<text text-anchor="start" x="3073.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="3073.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetCalculateReactionsFlag()</text>
<text text-anchor="start" x="3073.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetReformDofSetAtEachStep</text>
<text text-anchor="start" x="3073.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="3073.5" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetReformDofSetAtEachStep</text>
<text text-anchor="start" x="3073.5" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="3073.5" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="3073.5" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="3073.5" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="3073.5" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="3073.5" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="3073.5" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="3073.5" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeExplicitConstraint</text>
<text text-anchor="start" x="3073.5" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">Constribution()</text>
<text text-anchor="start" x="3073.5" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateReactions()</text>
<text text-anchor="start" x="3073.5" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MechanicalExplicitStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node25 -->
<g id="edge22" class="edge">
<title>Node10&#45;&gt;Node25</title>
<path fill="none" stroke="midnightblue" d="M3233.51,-2295.79C3221.32,-2179.5 3206.69,-2039.79 3193.29,-1911.84"/>
<polygon fill="none" stroke="midnightblue" points="3230.04,-2296.32 3234.56,-2305.9 3237,-2295.59 3230.04,-2296.32"/>
</g>
<!-- Node28 -->
<g id="node25" class="node">
<title>Node28</title>
<g id="a_node25"><a xlink:href="../../de/d10/class_kratos_1_1_nodal_two_step_v_p_strategy.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="3260,-1035 3260,-2027 3475,-2027 3475,-1035 3260,-1035"/>
<text text-anchor="start" x="3268" y="-2015" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NodalTwoStepVPStrategy</text>
<text text-anchor="start" x="3268" y="-2004" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="3367.5" y="-1993" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="3260,-1986 3475,-1986 "/>
<text text-anchor="start" x="3268" y="-1974" font-family="Helvetica,sans-Serif" font-size="10.00"># mVelocityTolerance</text>
<text text-anchor="start" x="3268" y="-1963" font-family="Helvetica,sans-Serif" font-size="10.00"># mPressureTolerance</text>
<text text-anchor="start" x="3268" y="-1952" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxPressureIter</text>
<text text-anchor="start" x="3268" y="-1941" font-family="Helvetica,sans-Serif" font-size="10.00"># mDomainSize</text>
<text text-anchor="start" x="3268" y="-1930" font-family="Helvetica,sans-Serif" font-size="10.00"># mTimeOrder</text>
<text text-anchor="start" x="3268" y="-1919" font-family="Helvetica,sans-Serif" font-size="10.00"># mReformDofSet</text>
<text text-anchor="start" x="3268" y="-1908" font-family="Helvetica,sans-Serif" font-size="10.00"># mpMomentumStrategy</text>
<text text-anchor="start" x="3268" y="-1897" font-family="Helvetica,sans-Serif" font-size="10.00"># mpPressureStrategy</text>
<polyline fill="none" stroke="black" points="3260,-1890 3475,-1890 "/>
<text text-anchor="start" x="3268" y="-1878" font-family="Helvetica,sans-Serif" font-size="10.00">+ NodalTwoStepVPStrategy()</text>
<text text-anchor="start" x="3268" y="-1867" font-family="Helvetica,sans-Serif" font-size="10.00">+ NodalTwoStepVPStrategy()</text>
<text text-anchor="start" x="3268" y="-1856" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NodalTwoStepVPStrategy()</text>
<text text-anchor="start" x="3268" y="-1845" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="3268" y="-1834" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetTimeCoefficients()</text>
<text text-anchor="start" x="3268" y="-1823" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="3268" y="-1812" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="3268" y="-1801" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="3268" y="-1790" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitialAssignFluidMaterial</text>
<text text-anchor="start" x="3268" y="-1779" font-family="Helvetica,sans-Serif" font-size="10.00">ToEachNode()</text>
<text text-anchor="start" x="3268" y="-1768" font-family="Helvetica,sans-Serif" font-size="10.00">+ ComputeNodalVolume()</text>
<text text-anchor="start" x="3268" y="-1757" font-family="Helvetica,sans-Serif" font-size="10.00">and 18 more...</text>
<text text-anchor="start" x="3268" y="-1746" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="3268" y="-1735" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="3268" y="-1724" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="3268" y="-1713" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="3268" y="-1702" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveMomentumIteration()</text>
<text text-anchor="start" x="3268" y="-1691" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveContinuityIteration()</text>
<text text-anchor="start" x="3268" y="-1680" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckVelocityConvergence()</text>
<text text-anchor="start" x="3268" y="-1669" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeVelocityNorm()</text>
<text text-anchor="start" x="3268" y="-1658" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputePressureNorm()</text>
<text text-anchor="start" x="3268" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeErrorL2NormCaseImposedG()</text>
<text text-anchor="start" x="3268" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeErrorL2NormCasePoiseuille()</text>
<text text-anchor="start" x="3268" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckPressureConvergence()</text>
<text text-anchor="start" x="3268" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00"># FixTimeStepMomentum()</text>
<text text-anchor="start" x="3268" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckMomentumConvergence()</text>
<text text-anchor="start" x="3268" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00"># FixTimeStepContinuity()</text>
<text text-anchor="start" x="3268" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="3268" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="3268" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="3268" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">* GeometryType</text>
<text text-anchor="start" x="3268" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="3268" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="3268" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="3268" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="3268" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="3268" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="3268" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="3268" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">* mVelocityTolerance</text>
<text text-anchor="start" x="3268" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">* mPressureTolerance</text>
<text text-anchor="start" x="3268" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxPressureIter</text>
<text text-anchor="start" x="3268" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">* mDomainSize</text>
<text text-anchor="start" x="3268" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* mTimeOrder</text>
<text text-anchor="start" x="3268" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSet</text>
<text text-anchor="start" x="3268" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* mpMomentumStrategy</text>
<text text-anchor="start" x="3268" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">* mpPressureStrategy</text>
<text text-anchor="start" x="3268" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* NodalTwoStepVPStrategy()</text>
<text text-anchor="start" x="3268" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">* NodalTwoStepVPStrategy()</text>
<text text-anchor="start" x="3268" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">* ~NodalTwoStepVPStrategy()</text>
<text text-anchor="start" x="3268" y="-1339" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="3268" y="-1328" font-family="Helvetica,sans-Serif" font-size="10.00">* SetTimeCoefficients()</text>
<text text-anchor="start" x="3268" y="-1317" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="3268" y="-1306" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="3268" y="-1295" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="3268" y="-1284" font-family="Helvetica,sans-Serif" font-size="10.00">* InitialAssignFluidMaterial</text>
<text text-anchor="start" x="3268" y="-1273" font-family="Helvetica,sans-Serif" font-size="10.00">ToEachNode()</text>
<text text-anchor="start" x="3268" y="-1262" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeNodalVolume()</text>
<text text-anchor="start" x="3268" y="-1251" font-family="Helvetica,sans-Serif" font-size="10.00">and 18 more...</text>
<text text-anchor="start" x="3268" y="-1240" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="3268" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="3268" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="3268" y="-1207" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="3268" y="-1196" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveMomentumIteration()</text>
<text text-anchor="start" x="3268" y="-1185" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveContinuityIteration()</text>
<text text-anchor="start" x="3268" y="-1174" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckVelocityConvergence()</text>
<text text-anchor="start" x="3268" y="-1163" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeVelocityNorm()</text>
<text text-anchor="start" x="3268" y="-1152" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputePressureNorm()</text>
<text text-anchor="start" x="3268" y="-1141" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeErrorL2NormCaseImposedG()</text>
<text text-anchor="start" x="3268" y="-1130" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeErrorL2NormCasePoiseuille()</text>
<text text-anchor="start" x="3268" y="-1119" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckPressureConvergence()</text>
<text text-anchor="start" x="3268" y="-1108" font-family="Helvetica,sans-Serif" font-size="10.00">* FixTimeStepMomentum()</text>
<text text-anchor="start" x="3268" y="-1097" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckMomentumConvergence()</text>
<text text-anchor="start" x="3268" y="-1086" font-family="Helvetica,sans-Serif" font-size="10.00">* FixTimeStepContinuity()</text>
<text text-anchor="start" x="3268" y="-1075" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeStrategy()</text>
<text text-anchor="start" x="3268" y="-1064" font-family="Helvetica,sans-Serif" font-size="10.00">* FillNodalSFDVector()</text>
<text text-anchor="start" x="3268" y="-1053" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="3268" y="-1042" font-family="Helvetica,sans-Serif" font-size="10.00">* NodalTwoStepVPStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node28 -->
<g id="edge24" class="edge">
<title>Node10&#45;&gt;Node28</title>
<path fill="none" stroke="midnightblue" d="M3287.48,-2295.95C3296.07,-2213.91 3305.89,-2120.21 3315.63,-2027.19"/>
<polygon fill="none" stroke="midnightblue" points="3284,-2295.59 3286.44,-2305.9 3290.96,-2296.32 3284,-2295.59"/>
</g>
<!-- Node30 -->
<g id="node27" class="node">
<title>Node30</title>
<g id="a_node27"><a xlink:href="../../d6/d62/class_kratos_1_1_p_f_e_m2_monolithic_slip_strategy.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="3493.5,-1304.5 3493.5,-1757.5 3669.5,-1757.5 3669.5,-1304.5 3493.5,-1304.5"/>
<text text-anchor="start" x="3501.5" y="-1745.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::PFEM2MonolithicSlip</text>
<text text-anchor="start" x="3501.5" y="-1734.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="3581.5" y="-1723.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="3493.5,-1716.5 3669.5,-1716.5 "/>
<text text-anchor="start" x="3501.5" y="-1704.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ DomainSize</text>
<text text-anchor="start" x="3501.5" y="-1693.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mPressureTolerance</text>
<text text-anchor="start" x="3501.5" y="-1682.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mMaxVelocityIter</text>
<text text-anchor="start" x="3501.5" y="-1671.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mMaxPressureIter</text>
<text text-anchor="start" x="3501.5" y="-1660.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mDomainSize</text>
<text text-anchor="start" x="3501.5" y="-1649.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mTimeOrder</text>
<text text-anchor="start" x="3501.5" y="-1638.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mPredictorCorrector</text>
<text text-anchor="start" x="3501.5" y="-1627.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mUseSlipConditions</text>
<text text-anchor="start" x="3501.5" y="-1616.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mReformDofSet</text>
<text text-anchor="start" x="3501.5" y="-1605.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mpMomentumStrategy</text>
<text text-anchor="start" x="3501.5" y="-1594.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mpPressureStrategy</text>
<text text-anchor="start" x="3501.5" y="-1583.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mExtraIterationSteps</text>
<text text-anchor="start" x="3501.5" y="-1572.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mrPeriodicIdVar</text>
<polyline fill="none" stroke="black" points="3493.5,-1565.5 3669.5,-1565.5 "/>
<text text-anchor="start" x="3501.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeStrategy()</text>
<text text-anchor="start" x="3501.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="3501.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FSStrategy()</text>
<text text-anchor="start" x="3501.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Pointer</text>
<text text-anchor="start" x="3501.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="3501.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="3501.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="3501.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="3501.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="3501.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="3501.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="3501.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StrategyPointerType</text>
<text text-anchor="start" x="3501.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolverSettingsType</text>
<text text-anchor="start" x="3501.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pLinearSolver</text>
<text text-anchor="start" x="3501.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReformDofSet</text>
<text text-anchor="start" x="3501.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Tol</text>
<text text-anchor="start" x="3501.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaxIterations</text>
<text text-anchor="start" x="3501.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PFEM2MonolithicSlipStrategy()</text>
<text text-anchor="start" x="3501.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PFEM2MonolithicSlipStrategy()</text>
<text text-anchor="start" x="3501.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategyPython()</text>
<text text-anchor="start" x="3501.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeStrategy()</text>
<text text-anchor="start" x="3501.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="3501.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FSStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node30 -->
<g id="edge26" class="edge">
<title>Node10&#45;&gt;Node30</title>
<path fill="none" stroke="midnightblue" d="M3283.4,-2296.01C3297.98,-2248.73 3320.39,-2203.26 3354.5,-2168 3395.89,-2125.22 3443.79,-2176.34 3483.5,-2132 3573.36,-2031.65 3597.98,-1882.23 3600.07,-1757.61"/>
<polygon fill="none" stroke="midnightblue" points="3279.98,-2295.23 3280.5,-2305.81 3286.7,-2297.22 3279.98,-2295.23"/>
</g>
<!-- Node31 -->
<g id="node28" class="node">
<title>Node31</title>
<g id="a_node28"><a xlink:href="../../df/dd0/class_kratos_1_1_p_f_e_m2___explicit___strategy.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="3687,-1414.5 3687,-1647.5 3872,-1647.5 3872,-1414.5 3687,-1414.5"/>
<text text-anchor="start" x="3695" y="-1635.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::PFEM2_Explicit</text>
<text text-anchor="start" x="3695" y="-1624.5" font-family="Helvetica,sans-Serif" font-size="10.00">_Strategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="3779.5" y="-1613.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="3687,-1606.5 3872,-1606.5 "/>
<text text-anchor="middle" x="3779.5" y="-1594.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="3687,-1587.5 3872,-1587.5 "/>
<text text-anchor="start" x="3695" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="3695" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="3695" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PFEM2_Explicit_Strategy()</text>
<text text-anchor="start" x="3695" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~PFEM2_Explicit_Strategy()</text>
<text text-anchor="start" x="3695" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CreatePartition()</text>
<text text-anchor="start" x="3695" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssembleLoop()</text>
<text text-anchor="start" x="3695" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="3695" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="3695" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetToZeroVariablesInViscous</text>
<text text-anchor="start" x="3695" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="3695" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ UpdateLoopForViscousIterations</text>
<text text-anchor="start" x="3695" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">WithNormalization()</text>
<text text-anchor="start" x="3695" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetToZeroVariablesInPresure</text>
<text text-anchor="start" x="3695" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="3695" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 11 more...</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node31 -->
<g id="edge27" class="edge">
<title>Node10&#45;&gt;Node31</title>
<path fill="none" stroke="midnightblue" d="M3277.81,-2295.77C3292.62,-2247.27 3316.54,-2201.37 3354.5,-2168 3463.32,-2072.34 3573.22,-2231.54 3678.5,-2132 3809.09,-2008.54 3810.71,-1784.2 3797.11,-1647.57"/>
<polygon fill="none" stroke="midnightblue" points="3274.41,-2294.93 3274.97,-2305.51 3281.13,-2296.89 3274.41,-2294.93"/>
</g>
<!-- Node32 -->
<g id="node29" class="node">
<title>Node32</title>
<g id="a_node29"><a xlink:href="../../d2/db4/class_kratos_1_1_prebuckling_strategy.html" target="_top" xlink:title="Strategy for linearized prebuckling analysis.">
<polygon fill="none" stroke="black" points="3890,-1189 3890,-1873 4061,-1873 4061,-1189 3890,-1189"/>
<text text-anchor="start" x="3898" y="-1861" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::PrebucklingStrategy</text>
<text text-anchor="start" x="3898" y="-1850" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="3975.5" y="-1839" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="3890,-1832 4061,-1832 "/>
<text text-anchor="middle" x="3975.5" y="-1820" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="3890,-1813 4061,-1813 "/>
<text text-anchor="start" x="3898" y="-1801" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrebucklingStrategy()</text>
<text text-anchor="start" x="3898" y="-1790" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrebucklingStrategy()</text>
<text text-anchor="start" x="3898" y="-1779" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~PrebucklingStrategy()</text>
<text text-anchor="start" x="3898" y="-1768" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetScheme()</text>
<text text-anchor="start" x="3898" y="-1757" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetEigenSolver()</text>
<text text-anchor="start" x="3898" y="-1746" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetBuilderAndSolver()</text>
<text text-anchor="start" x="3898" y="-1735" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConvergenceCriteria()</text>
<text text-anchor="start" x="3898" y="-1724" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSolutionFoundFlag()</text>
<text text-anchor="start" x="3898" y="-1713" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="3898" y="-1702" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="3898" y="-1691" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="3898" y="-1680" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="3898" y="-1669" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="3898" y="-1658" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="3898" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="3898" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="3898" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemePointerType</text>
<text text-anchor="start" x="3898" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverPointerType</text>
<text text-anchor="start" x="3898" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseVectorType</text>
<text text-anchor="start" x="3898" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="3898" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="3898" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseVectorPointerType</text>
<text text-anchor="start" x="3898" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixPointerType</text>
<text text-anchor="start" x="3898" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixType</text>
<text text-anchor="start" x="3898" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseVectorType</text>
<text text-anchor="start" x="3898" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* ConvergenceCriteriaType</text>
<text text-anchor="start" x="3898" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="3898" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="3898" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="3898" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">* mpEigenSolver</text>
<text text-anchor="start" x="3898" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="3898" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">* mpStiffnessMatrix</text>
<text text-anchor="start" x="3898" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">* mpStiffnessMatrixPrevious</text>
<text text-anchor="start" x="3898" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">* mpRHS</text>
<text text-anchor="start" x="3898" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDx</text>
<text text-anchor="start" x="3898" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* mpConvergenceCriteria</text>
<text text-anchor="start" x="3898" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="3898" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* mSolutionStepIsInitialized</text>
<text text-anchor="start" x="3898" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">and 11 more...</text>
<text text-anchor="start" x="3898" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* PrebucklingStrategy()</text>
<text text-anchor="start" x="3898" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">* PrebucklingStrategy()</text>
<text text-anchor="start" x="3898" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">* ~PrebucklingStrategy()</text>
<text text-anchor="start" x="3898" y="-1339" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetScheme()</text>
<text text-anchor="start" x="3898" y="-1328" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetEigenSolver()</text>
<text text-anchor="start" x="3898" y="-1317" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetBuilderAndSolver()</text>
<text text-anchor="start" x="3898" y="-1306" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConvergenceCriteria()</text>
<text text-anchor="start" x="3898" y="-1295" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSolutionFoundFlag()</text>
<text text-anchor="start" x="3898" y="-1284" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="3898" y="-1273" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="3898" y="-1262" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="3898" y="-1251" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="3898" y="-1240" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="3898" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="3898" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="3898" y="-1207" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateLoadConditions()</text>
<text text-anchor="start" x="3898" y="-1196" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignVariables()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node32 -->
<g id="edge28" class="edge">
<title>Node10&#45;&gt;Node32</title>
<path fill="none" stroke="midnightblue" d="M3276.32,-2295.93C3291.17,-2246.98 3315.48,-2200.87 3354.5,-2168 3444.11,-2092.52 3794.06,-2211.09 3880.5,-2132 3952.47,-2066.14 3984.84,-1969.55 3996.82,-1873.02"/>
<polygon fill="none" stroke="midnightblue" points="3272.89,-2295.18 3273.47,-2305.75 3279.62,-2297.12 3272.89,-2295.18"/>
</g>
<!-- Node33 -->
<g id="node30" class="node">
<title>Node33</title>
<g id="a_node30"><a xlink:href="../../de/da9/class_kratos_1_1_residual_based_convection_diffusion_strategy.html" target="_top" xlink:title="This strategy is used to solve convection&#45;diffusion problem.">
<polygon fill="none" stroke="black" points="4079.5,-1315.5 4079.5,-1746.5 4277.5,-1746.5 4277.5,-1315.5 4079.5,-1315.5"/>
<text text-anchor="start" x="4087.5" y="-1734.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedConvection</text>
<text text-anchor="start" x="4087.5" y="-1723.5" font-family="Helvetica,sans-Serif" font-size="10.00">DiffusionStrategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="4178.5" y="-1712.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="4079.5,-1705.5 4277.5,-1705.5 "/>
<text text-anchor="middle" x="4178.5" y="-1693.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="4079.5,-1686.5 4277.5,-1686.5 "/>
<text text-anchor="start" x="4087.5" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedConvectionDiffusion</text>
<text text-anchor="start" x="4087.5" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4087.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ResidualBasedConvection</text>
<text text-anchor="start" x="4087.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">DiffusionStrategy()</text>
<text text-anchor="start" x="4087.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="4087.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateProjection()</text>
<text text-anchor="start" x="4087.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="4087.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="4087.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="4087.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="4087.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="4087.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="4087.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="4087.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="4087.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="4087.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="4087.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="4087.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="4087.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mstep1</text>
<text text-anchor="start" x="4087.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mOldDt</text>
<text text-anchor="start" x="4087.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mtime_order</text>
<text text-anchor="start" x="4087.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mprediction_order</text>
<text text-anchor="start" x="4087.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedConvectionDiffusion</text>
<text text-anchor="start" x="4087.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4087.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ResidualBasedConvection</text>
<text text-anchor="start" x="4087.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">DiffusionStrategy()</text>
<text text-anchor="start" x="4087.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="4087.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateProjection()</text>
<text text-anchor="start" x="4087.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="4087.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="4087.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="4087.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedConvectionDiffusion</text>
<text text-anchor="start" x="4087.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node33 -->
<g id="edge29" class="edge">
<title>Node10&#45;&gt;Node33</title>
<path fill="none" stroke="midnightblue" d="M3275.73,-2295.86C3290.59,-2246.77 3315.06,-2200.62 3354.5,-2168 3477.1,-2066.61 3949.97,-2236.99 4069.5,-2132 4176.19,-2038.29 4201.01,-1878.08 4200.45,-1746.77"/>
<polygon fill="none" stroke="midnightblue" points="3272.3,-2295.13 3272.89,-2305.71 3279.02,-2297.08 3272.3,-2295.13"/>
</g>
<!-- Node34 -->
<g id="node31" class="node">
<title>Node34</title>
<g id="a_node31"><a xlink:href="../../d3/dd4/class_kratos_1_1_residual_based_convection_diffusion_strategy_non_linear.html" target="_top" xlink:title="This strategy is used to solve convection&#45;diffusion problem.">
<polygon fill="none" stroke="black" points="4295.5,-1293.5 4295.5,-1768.5 4493.5,-1768.5 4493.5,-1293.5 4295.5,-1293.5"/>
<text text-anchor="start" x="4303.5" y="-1756.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedConvection</text>
<text text-anchor="start" x="4303.5" y="-1745.5" font-family="Helvetica,sans-Serif" font-size="10.00">DiffusionStrategyNonLinear</text>
<text text-anchor="start" x="4303.5" y="-1734.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="4394.5" y="-1723.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="4295.5,-1716.5 4493.5,-1716.5 "/>
<text text-anchor="middle" x="4394.5" y="-1704.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="4295.5,-1697.5 4493.5,-1697.5 "/>
<text text-anchor="start" x="4303.5" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedConvectionDiffusion</text>
<text text-anchor="start" x="4303.5" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">StrategyNonLinear()</text>
<text text-anchor="start" x="4303.5" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ResidualBasedConvection</text>
<text text-anchor="start" x="4303.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">DiffusionStrategyNonLinear()</text>
<text text-anchor="start" x="4303.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="4303.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateTemperatureNorm()</text>
<text text-anchor="start" x="4303.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateProjection()</text>
<text text-anchor="start" x="4303.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="4303.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="4303.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="4303.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="4303.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="4303.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="4303.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="4303.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="4303.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="4303.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="4303.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="4303.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="4303.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mstep1</text>
<text text-anchor="start" x="4303.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mOldDt</text>
<text text-anchor="start" x="4303.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mtime_order</text>
<text text-anchor="start" x="4303.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mmax_iter</text>
<text text-anchor="start" x="4303.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mtoll</text>
<text text-anchor="start" x="4303.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedConvectionDiffusion</text>
<text text-anchor="start" x="4303.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">StrategyNonLinear()</text>
<text text-anchor="start" x="4303.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ResidualBasedConvection</text>
<text text-anchor="start" x="4303.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">DiffusionStrategyNonLinear()</text>
<text text-anchor="start" x="4303.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="4303.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateTemperatureNorm()</text>
<text text-anchor="start" x="4303.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateProjection()</text>
<text text-anchor="start" x="4303.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="4303.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="4303.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="4303.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedConvectionDiffusion</text>
<text text-anchor="start" x="4303.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">StrategyNonLinear()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node34 -->
<g id="edge30" class="edge">
<title>Node10&#45;&gt;Node34</title>
<path fill="none" stroke="midnightblue" d="M3275.3,-2295.97C3290.17,-2246.73 3314.74,-2200.49 3354.5,-2168 3434.75,-2102.43 4208.29,-2199.99 4286.5,-2132 4387.84,-2043.89 4415.26,-1895.74 4417.14,-1768.71"/>
<polygon fill="none" stroke="midnightblue" points="3271.86,-2295.28 3272.46,-2305.86 3278.59,-2297.22 3271.86,-2295.28"/>
</g>
<!-- Node35 -->
<g id="node32" class="node">
<title>Node35</title>
<g id="a_node32"><a xlink:href="../../d7/d8b/class_kratos_1_1_residual_based_eulerian_convection_diffusion_strategy.html" target="_top" xlink:title="This strategy is used to solve convection&#45;diffusion problem.">
<polygon fill="none" stroke="black" points="4512,-1304.5 4512,-1757.5 4715,-1757.5 4715,-1304.5 4512,-1304.5"/>
<text text-anchor="start" x="4520" y="-1745.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedEulerian</text>
<text text-anchor="start" x="4520" y="-1734.5" font-family="Helvetica,sans-Serif" font-size="10.00">ConvectionDiffusionStrategy</text>
<text text-anchor="start" x="4520" y="-1723.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="4613.5" y="-1712.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="4512,-1705.5 4715,-1705.5 "/>
<text text-anchor="middle" x="4613.5" y="-1693.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="4512,-1686.5 4715,-1686.5 "/>
<text text-anchor="start" x="4520" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedEulerianConvection</text>
<text text-anchor="start" x="4520" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">DiffusionStrategy()</text>
<text text-anchor="start" x="4520" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ResidualBasedEulerianConvection</text>
<text text-anchor="start" x="4520" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">DiffusionStrategy()</text>
<text text-anchor="start" x="4520" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="4520" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="4520" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="4520" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="4520" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GenerateMeshPart()</text>
<text text-anchor="start" x="4520" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="4520" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="4520" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="4520" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="4520" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="4520" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="4520" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="4520" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="4520" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="4520" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mrModelPart</text>
<text text-anchor="start" x="4520" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpConvectionModelPart</text>
<text text-anchor="start" x="4520" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mstep1</text>
<text text-anchor="start" x="4520" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mOldDt</text>
<text text-anchor="start" x="4520" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mdimension</text>
<text text-anchor="start" x="4520" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedEulerianConvection</text>
<text text-anchor="start" x="4520" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">DiffusionStrategy()</text>
<text text-anchor="start" x="4520" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ResidualBasedEulerianConvection</text>
<text text-anchor="start" x="4520" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">DiffusionStrategy()</text>
<text text-anchor="start" x="4520" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="4520" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="4520" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="4520" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="4520" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GenerateMeshPart()</text>
<text text-anchor="start" x="4520" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedEulerianConvection</text>
<text text-anchor="start" x="4520" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">DiffusionStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node35 -->
<g id="edge31" class="edge">
<title>Node10&#45;&gt;Node35</title>
<path fill="none" stroke="midnightblue" d="M3275.13,-2295.76C3290,-2246.53 3314.63,-2200.34 3354.5,-2168 3453.61,-2087.61 4405.69,-2215.15 4502.5,-2132 4607.58,-2041.76 4634.27,-1887.18 4635.25,-1757.53"/>
<polygon fill="none" stroke="midnightblue" points="3271.68,-2295.06 3272.28,-2305.64 3278.41,-2297 3271.68,-2295.06"/>
</g>
<!-- Node36 -->
<g id="node33" class="node">
<title>Node36</title>
<g id="a_node33"><a xlink:href="../../d1/dfa/class_kratos_1_1_residual_based_linear_strategy.html" target="_top" xlink:title="This is a very simple strategy to solve linearly the problem.">
<polygon fill="none" stroke="black" points="4733.5,-1238.5 4733.5,-1823.5 4917.5,-1823.5 4917.5,-1238.5 4733.5,-1238.5"/>
<text text-anchor="start" x="4741.5" y="-1811.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedLinear</text>
<text text-anchor="start" x="4741.5" y="-1800.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="4825.5" y="-1789.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="4733.5,-1782.5 4917.5,-1782.5 "/>
<text text-anchor="middle" x="4825.5" y="-1770.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="4733.5,-1763.5 4917.5,-1763.5 "/>
<text text-anchor="start" x="4741.5" y="-1751.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="4741.5" y="-1740.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="4741.5" y="-1729.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="4741.5" y="-1718.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="4741.5" y="-1707.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategyType</text>
<text text-anchor="start" x="4741.5" y="-1696.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="4741.5" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="4741.5" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="4741.5" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="4741.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="4741.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="4741.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="4741.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="4741.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="4741.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="4741.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="4741.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="4741.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="4741.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="4741.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="4741.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="4741.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="4741.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDx</text>
<text text-anchor="start" x="4741.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpb</text>
<text text-anchor="start" x="4741.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpA</text>
<text text-anchor="start" x="4741.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSetAtEachStep</text>
<text text-anchor="start" x="4741.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateNormDxFlag</text>
<text text-anchor="start" x="4741.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="4741.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSolutionStepIsInitialized</text>
<text text-anchor="start" x="4741.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="4741.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedLinearStrategy()</text>
<text text-anchor="start" x="4741.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedLinearStrategy()</text>
<text text-anchor="start" x="4741.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedLinearStrategy()</text>
<text text-anchor="start" x="4741.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedLinearStrategy()</text>
<text text-anchor="start" x="4741.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ResidualBasedLinearStrategy()</text>
<text text-anchor="start" x="4741.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="4741.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetScheme()</text>
<text text-anchor="start" x="4741.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="4741.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetBuilderAndSolver()</text>
<text text-anchor="start" x="4741.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="4741.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 20 more...</text>
<text text-anchor="start" x="4741.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="4741.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="4741.5" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="4741.5" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="4741.5" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EchoInfo()</text>
<text text-anchor="start" x="4741.5" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedLinearStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node36 -->
<g id="edge32" class="edge">
<title>Node10&#45;&gt;Node36</title>
<path fill="none" stroke="midnightblue" d="M3274.86,-2296.07C3289.73,-2246.68 3314.42,-2200.34 3354.5,-2168 3472.92,-2072.44 4608.54,-2231.69 4723.5,-2132 4810.51,-2056.55 4841.92,-1936.58 4849.3,-1823.67"/>
<polygon fill="none" stroke="midnightblue" points="3271.41,-2295.41 3272.02,-2305.98 3278.14,-2297.34 3271.41,-2295.41"/>
</g>
<!-- Node38 -->
<g id="node35" class="node">
<title>Node38</title>
<g id="a_node35"><a xlink:href="../../d4/dcd/class_kratos_1_1_residual_based_newton_raphson_strategy.html" target="_top" xlink:title="This is the base Newton Raphson strategy.">
<polygon fill="none" stroke="red" points="4935.5,-996.5 4935.5,-2065.5 5121.5,-2065.5 5121.5,-996.5 4935.5,-996.5"/>
<text text-anchor="start" x="4943.5" y="-2053.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedNewton</text>
<text text-anchor="start" x="4943.5" y="-2042.5" font-family="Helvetica,sans-Serif" font-size="10.00">RaphsonStrategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="5028.5" y="-2031.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="red" points="4935.5,-2024.5 5121.5,-2024.5 "/>
<text text-anchor="start" x="4943.5" y="-2012.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpScheme</text>
<text text-anchor="start" x="4943.5" y="-2001.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpBuilderAndSolver</text>
<text text-anchor="start" x="4943.5" y="-1990.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpConvergenceCriteria</text>
<text text-anchor="start" x="4943.5" y="-1979.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpDx</text>
<text text-anchor="start" x="4943.5" y="-1968.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpb</text>
<text text-anchor="start" x="4943.5" y="-1957.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpA</text>
<text text-anchor="start" x="4943.5" y="-1946.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mReformDofSetAtEachStep</text>
<text text-anchor="start" x="4943.5" y="-1935.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCalculateReactionsFlag</text>
<text text-anchor="start" x="4943.5" y="-1924.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mUseOldStiffnessInFirstIteration</text>
<text text-anchor="start" x="4943.5" y="-1913.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxIterationNumber</text>
<text text-anchor="start" x="4943.5" y="-1902.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInitializeWasPerformed</text>
<text text-anchor="start" x="4943.5" y="-1891.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mKeepSystemConstantDuring</text>
<text text-anchor="start" x="4943.5" y="-1880.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations</text>
<polyline fill="none" stroke="red" points="4935.5,-1873.5 5121.5,-1873.5 "/>
<text text-anchor="start" x="4943.5" y="-1861.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSystemMatrix()</text>
<text text-anchor="start" x="4943.5" y="-1850.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSystemVector()</text>
<text text-anchor="start" x="4943.5" y="-1839.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSolutionVector()</text>
<text text-anchor="start" x="4943.5" y="-1828.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetKeepSystemConstantDuring</text>
<text text-anchor="start" x="4943.5" y="-1817.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="4943.5" y="-1806.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetKeepSystemConstantDuring</text>
<text text-anchor="start" x="4943.5" y="-1795.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="4943.5" y="-1784.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="4943.5" y="-1773.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="4943.5" y="-1762.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="4943.5" y="-1751.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateDatabase()</text>
<text text-anchor="start" x="4943.5" y="-1740.5" font-family="Helvetica,sans-Serif" font-size="10.00"># EchoInfo()</text>
<text text-anchor="start" x="4943.5" y="-1729.5" font-family="Helvetica,sans-Serif" font-size="10.00"># MaxIterationsExceeded()</text>
<text text-anchor="start" x="4943.5" y="-1718.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="4943.5" y="-1707.5" font-family="Helvetica,sans-Serif" font-size="10.00"># WriteDofInfo()</text>
<text text-anchor="start" x="4943.5" y="-1696.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4943.5" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4943.5" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TConvergenceCriteriaType</text>
<text text-anchor="start" x="4943.5" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategyType</text>
<text text-anchor="start" x="4943.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="4943.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="4943.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="4943.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="4943.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="4943.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="4943.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="4943.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="4943.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="4943.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="4943.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="4943.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpConvergenceCriteria</text>
<text text-anchor="start" x="4943.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDx</text>
<text text-anchor="start" x="4943.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpb</text>
<text text-anchor="start" x="4943.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpA</text>
<text text-anchor="start" x="4943.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSetAtEachStep</text>
<text text-anchor="start" x="4943.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="4943.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mUseOldStiffnessInFirstIteration</text>
<text text-anchor="start" x="4943.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxIterationNumber</text>
<text text-anchor="start" x="4943.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="4943.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mKeepSystemConstantDuring</text>
<text text-anchor="start" x="4943.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations</text>
<text text-anchor="start" x="4943.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4943.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4943.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4943.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4943.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4943.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4943.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4943.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4943.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4943.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4943.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4943.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4943.5" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4943.5" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4943.5" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4943.5" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4943.5" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4943.5" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4943.5" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4943.5" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4943.5" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 27 more...</text>
<text text-anchor="start" x="4943.5" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSystemMatrix()</text>
<text text-anchor="start" x="4943.5" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSystemVector()</text>
<text text-anchor="start" x="4943.5" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSolutionVector()</text>
<text text-anchor="start" x="4943.5" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetKeepSystemConstantDuring</text>
<text text-anchor="start" x="4943.5" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="4943.5" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetKeepSystemConstantDuring</text>
<text text-anchor="start" x="4943.5" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="4943.5" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="4943.5" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="4943.5" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="4943.5" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateDatabase()</text>
<text text-anchor="start" x="4943.5" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EchoInfo()</text>
<text text-anchor="start" x="4943.5" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaxIterationsExceeded()</text>
<text text-anchor="start" x="4943.5" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="4943.5" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">* WriteDofInfo()</text>
<text text-anchor="start" x="4943.5" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4943.5" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node38 -->
<g id="edge34" class="edge">
<title>Node10&#45;&gt;Node38</title>
<path fill="none" stroke="midnightblue" d="M3274.78,-2295.97C3289.65,-2246.58 3314.36,-2200.28 3354.5,-2168 3422.58,-2113.26 4860.4,-2189.12 4926.5,-2132 4948.98,-2112.57 4967.76,-2090.17 4983.37,-2065.68"/>
<polygon fill="none" stroke="midnightblue" points="3271.33,-2295.3 3271.94,-2305.88 3278.06,-2297.23 3271.33,-2295.3"/>
</g>
<!-- Node56 -->
<g id="node41" class="node">
<title>Node56</title>
<g id="a_node41"><a xlink:href="../../d6/da1/class_kratos_1_1_residual_based_semi_eulerian_convection_diffusion_strategy.html" target="_top" xlink:title="This strategy is used to solve convection&#45;diffusion problem.">
<polygon fill="none" stroke="black" points="5139.5,-1315.5 5139.5,-1746.5 5391.5,-1746.5 5391.5,-1315.5 5139.5,-1315.5"/>
<text text-anchor="start" x="5147.5" y="-1734.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedSemi</text>
<text text-anchor="start" x="5147.5" y="-1723.5" font-family="Helvetica,sans-Serif" font-size="10.00">EulerianConvectionDiffusionStrategy</text>
<text text-anchor="middle" x="5265.5" y="-1712.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="5139.5,-1705.5 5391.5,-1705.5 "/>
<text text-anchor="middle" x="5265.5" y="-1693.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="5139.5,-1686.5 5391.5,-1686.5 "/>
<text text-anchor="start" x="5147.5" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedSemiEulerian</text>
<text text-anchor="start" x="5147.5" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">ConvectionDiffusionStrategy()</text>
<text text-anchor="start" x="5147.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ResidualBasedSemiEulerian</text>
<text text-anchor="start" x="5147.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">ConvectionDiffusionStrategy()</text>
<text text-anchor="start" x="5147.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="5147.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="5147.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="5147.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="5147.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="5147.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="5147.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="5147.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="5147.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="5147.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="5147.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="5147.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="5147.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="5147.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mrReferenceModelPart</text>
<text text-anchor="start" x="5147.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpConvectionModelPart</text>
<text text-anchor="start" x="5147.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mstep1</text>
<text text-anchor="start" x="5147.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mOldDt</text>
<text text-anchor="start" x="5147.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mdimension</text>
<text text-anchor="start" x="5147.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedSemiEulerian</text>
<text text-anchor="start" x="5147.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">ConvectionDiffusionStrategy()</text>
<text text-anchor="start" x="5147.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ResidualBasedSemiEulerian</text>
<text text-anchor="start" x="5147.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">ConvectionDiffusionStrategy()</text>
<text text-anchor="start" x="5147.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="5147.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="5147.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="5147.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="5147.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GenerateMeshPart()</text>
<text text-anchor="start" x="5147.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedSemiEulerian</text>
<text text-anchor="start" x="5147.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">ConvectionDiffusionStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node56 -->
<g id="edge40" class="edge">
<title>Node10&#45;&gt;Node56</title>
<path fill="none" stroke="midnightblue" d="M3274.72,-2295.89C3289.59,-2246.51 3314.32,-2200.22 3354.5,-2168 3431.49,-2106.26 5054.07,-2194.43 5130.5,-2132 5242.03,-2040.9 5273.52,-1879.25 5278.34,-1746.67"/>
<polygon fill="none" stroke="midnightblue" points="3271.27,-2295.22 3271.87,-2305.8 3277.99,-2297.15 3271.27,-2295.22"/>
</g>
<!-- Node57 -->
<g id="node42" class="node">
<title>Node57</title>
<g id="a_node42"><a xlink:href="../../de/d93/class_kratos_1_1_runge_kutta_frac_step_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="5409.5,-1249.5 5409.5,-1812.5 5609.5,-1812.5 5609.5,-1249.5 5409.5,-1249.5"/>
<text text-anchor="start" x="5417.5" y="-1800.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::RungeKuttaFracStep</text>
<text text-anchor="start" x="5417.5" y="-1789.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TDim, TSparseSpace,</text>
<text text-anchor="middle" x="5509.5" y="-1778.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="5409.5,-1771.5 5609.5,-1771.5 "/>
<text text-anchor="start" x="5417.5" y="-1759.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpressurestep</text>
<text text-anchor="start" x="5417.5" y="-1748.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpressure_toll</text>
<text text-anchor="start" x="5417.5" y="-1737.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mReformDofAtEachIteration</text>
<polyline fill="none" stroke="black" points="5409.5,-1730.5 5609.5,-1730.5 "/>
<text text-anchor="start" x="5417.5" y="-1718.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ RungeKuttaFracStepStrategy()</text>
<text text-anchor="start" x="5417.5" y="-1707.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~RungeKuttaFracStepStrategy()</text>
<text text-anchor="start" x="5417.5" y="-1696.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="5417.5" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ApplyVelocityBoundaryConditions()</text>
<text text-anchor="start" x="5417.5" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetToZero()</text>
<text text-anchor="start" x="5417.5" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetToZero()</text>
<text text-anchor="start" x="5417.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveStep1()</text>
<text text-anchor="start" x="5417.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveStep2()</text>
<text text-anchor="start" x="5417.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveStep3()</text>
<text text-anchor="start" x="5417.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SavePressureIt()</text>
<text text-anchor="start" x="5417.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="5417.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndicesVectorType</text>
<text text-anchor="start" x="5417.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="5417.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="5417.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="5417.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="5417.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="5417.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="5417.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="5417.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointType</text>
<text text-anchor="start" x="5417.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointPointerType</text>
<text text-anchor="start" x="5417.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointVector</text>
<text text-anchor="start" x="5417.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointIterator</text>
<text text-anchor="start" x="5417.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="5417.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="5417.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpressurestep</text>
<text text-anchor="start" x="5417.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpressure_toll</text>
<text text-anchor="start" x="5417.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofAtEachIteration</text>
<text text-anchor="start" x="5417.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFixedVelocityDofSet</text>
<text text-anchor="start" x="5417.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFixedVelocityDofValues</text>
<text text-anchor="start" x="5417.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSlipBoundaryList</text>
<text text-anchor="start" x="5417.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RungeKuttaFracStepStrategy()</text>
<text text-anchor="start" x="5417.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~RungeKuttaFracStepStrategy()</text>
<text text-anchor="start" x="5417.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="5417.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ApplyVelocityBoundaryConditions()</text>
<text text-anchor="start" x="5417.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetToZero()</text>
<text text-anchor="start" x="5417.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetToZero()</text>
<text text-anchor="start" x="5417.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveStep1()</text>
<text text-anchor="start" x="5417.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveStep2()</text>
<text text-anchor="start" x="5417.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveStep3()</text>
<text text-anchor="start" x="5417.5" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SavePressureIt()</text>
<text text-anchor="start" x="5417.5" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="5417.5" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RungeKuttaFracStepStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node57 -->
<g id="edge41" class="edge">
<title>Node10&#45;&gt;Node57</title>
<path fill="none" stroke="midnightblue" d="M3274.65,-2295.81C3289.53,-2246.43 3314.28,-2200.17 3354.5,-2168 3443.28,-2096.99 5313.87,-2205.61 5400.5,-2132 5491.46,-2054.7 5523.45,-1929.11 5530.75,-1812.75"/>
<polygon fill="none" stroke="midnightblue" points="3271.2,-2295.14 3271.81,-2305.72 3277.93,-2297.07 3271.2,-2295.14"/>
</g>
<!-- Node58 -->
<g id="node43" class="node">
<title>Node58</title>
<g id="a_node43"><a xlink:href="../../d2/d64/class_kratos_1_1_structural_mesh_moving_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="5627.5,-1359.5 5627.5,-1702.5 5821.5,-1702.5 5821.5,-1359.5 5627.5,-1359.5"/>
<text text-anchor="start" x="5635.5" y="-1690.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::StructuralMeshMoving</text>
<text text-anchor="start" x="5635.5" y="-1679.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="5724.5" y="-1668.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="5627.5,-1661.5 5821.5,-1661.5 "/>
<text text-anchor="middle" x="5724.5" y="-1649.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="5627.5,-1642.5 5821.5,-1642.5 "/>
<text text-anchor="start" x="5635.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ StructuralMeshMovingStrategy()</text>
<text text-anchor="start" x="5635.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~StructuralMeshMovingStrategy()</text>
<text text-anchor="start" x="5635.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="5635.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="5635.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="5635.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="5635.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="5635.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="5635.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="5635.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpmesh_model_part</text>
<text text-anchor="start" x="5635.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mstrategy</text>
<text text-anchor="start" x="5635.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpbulider_and_solver</text>
<text text-anchor="start" x="5635.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mecho_level</text>
<text text-anchor="start" x="5635.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mtime_order</text>
<text text-anchor="start" x="5635.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mreform_dof_set_at</text>
<text text-anchor="start" x="5635.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">_each_step</text>
<text text-anchor="start" x="5635.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mcompute_reactions</text>
<text text-anchor="start" x="5635.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mcalculate_mesh_velocities</text>
<text text-anchor="start" x="5635.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mreinitialize_model</text>
<text text-anchor="start" x="5635.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">_part_at_each_step</text>
<text text-anchor="start" x="5635.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StructuralMeshMovingStrategy()</text>
<text text-anchor="start" x="5635.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~StructuralMeshMovingStrategy()</text>
<text text-anchor="start" x="5635.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="5635.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="5635.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StructuralMeshMovingStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node58 -->
<g id="edge42" class="edge">
<title>Node10&#45;&gt;Node58</title>
<path fill="none" stroke="midnightblue" d="M3274.61,-2295.76C3289.49,-2246.38 3314.25,-2200.14 3354.5,-2168 3452.81,-2089.51 5522.77,-2213.61 5618.5,-2132 5739.15,-2029.15 5754.86,-1841.08 5747.16,-1702.82"/>
<polygon fill="none" stroke="midnightblue" points="3271.16,-2295.09 3271.77,-2305.67 3277.89,-2297.02 3271.16,-2295.09"/>
</g>
<!-- Node59 -->
<g id="node44" class="node">
<title>Node59</title>
<g id="a_node44"><a xlink:href="../../d0/dbe/class_kratos_1_1_trilinos_laplacian_mesh_moving_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="5839,-1343 5839,-1719 6042,-1719 6042,-1343 5839,-1343"/>
<text text-anchor="start" x="5847" y="-1707" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::TrilinosLaplacian</text>
<text text-anchor="start" x="5847" y="-1696" font-family="Helvetica,sans-Serif" font-size="10.00">MeshMovingStrategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="5940.5" y="-1685" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="5839,-1678 6042,-1678 "/>
<text text-anchor="middle" x="5940.5" y="-1666" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="5839,-1659 6042,-1659 "/>
<text text-anchor="start" x="5847" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00">+ TrilinosLaplacianMeshMoving</text>
<text text-anchor="start" x="5847" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="5847" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~TrilinosLaplacianMeshMoving</text>
<text text-anchor="start" x="5847" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="5847" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="5847" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="5847" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="5847" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00">* VariableType</text>
<text text-anchor="start" x="5847" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="5847" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="5847" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* mrReferenceModelPart</text>
<text text-anchor="start" x="5847" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* mpmesh_model_part</text>
<text text-anchor="start" x="5847" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">* mstrategy</text>
<text text-anchor="start" x="5847" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">* m_reform_dof_set_at</text>
<text text-anchor="start" x="5847" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">_each_step</text>
<text text-anchor="start" x="5847" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">* m_compute_reactions</text>
<text text-anchor="start" x="5847" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">* m_calculate_mesh_velocities</text>
<text text-anchor="start" x="5847" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">* m_time_order</text>
<text text-anchor="start" x="5847" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">* m_echo_level</text>
<text text-anchor="start" x="5847" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">* TrilinosLaplacianMeshMoving</text>
<text text-anchor="start" x="5847" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="5847" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* ~TrilinosLaplacianMeshMoving</text>
<text text-anchor="start" x="5847" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="5847" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="5847" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="5847" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* GenerateMeshPart()</text>
<text text-anchor="start" x="5847" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">* TrilinosLaplacianMeshMoving</text>
<text text-anchor="start" x="5847" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node59 -->
<g id="edge43" class="edge">
<title>Node10&#45;&gt;Node59</title>
<path fill="none" stroke="midnightblue" d="M3274.58,-2295.71C3289.46,-2246.34 3314.23,-2200.11 3354.5,-2168 3462.07,-2082.24 5725.46,-2220.84 5830.5,-2132 5947.04,-2033.44 5967.23,-1855.68 5962.61,-1719.14"/>
<polygon fill="none" stroke="midnightblue" points="3271.13,-2295.05 3271.73,-2305.63 3277.86,-2296.98 3271.13,-2295.05"/>
</g>
<!-- Node60 -->
<g id="node45" class="node">
<title>Node60</title>
<g id="a_node45"><a xlink:href="../../d6/d52/class_kratos_1_1_trilinos_structural_mesh_moving_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="6060,-1343 6060,-1719 6263,-1719 6263,-1343 6060,-1343"/>
<text text-anchor="start" x="6068" y="-1707" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::TrilinosStructural</text>
<text text-anchor="start" x="6068" y="-1696" font-family="Helvetica,sans-Serif" font-size="10.00">MeshMovingStrategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="6161.5" y="-1685" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="6060,-1678 6263,-1678 "/>
<text text-anchor="middle" x="6161.5" y="-1666" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="6060,-1659 6263,-1659 "/>
<text text-anchor="start" x="6068" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00">+ TrilinosStructuralMeshMoving</text>
<text text-anchor="start" x="6068" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="6068" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~TrilinosStructuralMeshMoving</text>
<text text-anchor="start" x="6068" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="6068" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="6068" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="6068" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="6068" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="6068" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="6068" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="6068" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* mrReferenceModelPart</text>
<text text-anchor="start" x="6068" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* mpmesh_model_part</text>
<text text-anchor="start" x="6068" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">* mstrategy</text>
<text text-anchor="start" x="6068" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">* m_echo_level</text>
<text text-anchor="start" x="6068" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">* m_time_order</text>
<text text-anchor="start" x="6068" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">* m_reform_dof_set_at</text>
<text text-anchor="start" x="6068" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">_each_step</text>
<text text-anchor="start" x="6068" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">* m_compute_reactions</text>
<text text-anchor="start" x="6068" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">* m_calculate_mesh_velocities</text>
<text text-anchor="start" x="6068" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">* TrilinosStructuralMeshMoving</text>
<text text-anchor="start" x="6068" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="6068" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* ~TrilinosStructuralMeshMoving</text>
<text text-anchor="start" x="6068" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="6068" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="6068" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="6068" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* GenerateMeshPart()</text>
<text text-anchor="start" x="6068" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">* TrilinosStructuralMeshMoving</text>
<text text-anchor="start" x="6068" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node60 -->
<g id="edge44" class="edge">
<title>Node10&#45;&gt;Node60</title>
<path fill="none" stroke="midnightblue" d="M3274.55,-2295.68C3289.43,-2246.31 3314.21,-2200.08 3354.5,-2168 3471.68,-2074.69 5935.99,-2228.57 6050.5,-2132 6167.21,-2033.57 6187.69,-1855.8 6183.3,-1719.22"/>
<polygon fill="none" stroke="midnightblue" points="3271.1,-2295.01 3271.7,-2305.59 3277.83,-2296.95 3271.1,-2295.01"/>
</g>
<!-- Node18 -->
<g id="node16" class="node">
<title>Node18</title>
<g id="a_node16"><a xlink:href="../../d6/d81/class_kratos_1_1_fractional_step_strategy_for_chimera.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="1678.5,-187.5 1678.5,-706.5 1854.5,-706.5 1854.5,-187.5 1678.5,-187.5"/>
<text text-anchor="start" x="1686.5" y="-694.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::FractionalStepStrategy</text>
<text text-anchor="start" x="1686.5" y="-683.5" font-family="Helvetica,sans-Serif" font-size="10.00">ForChimera&lt; TSparseSpace,</text>
<text text-anchor="middle" x="1766.5" y="-672.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="1678.5,-665.5 1854.5,-665.5 "/>
<text text-anchor="middle" x="1766.5" y="-653.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="1678.5,-646.5 1854.5,-646.5 "/>
<text text-anchor="start" x="1686.5" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategyFor</text>
<text text-anchor="start" x="1686.5" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="1686.5" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategyFor</text>
<text text-anchor="start" x="1686.5" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="1686.5" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~FractionalStepStrategyFor</text>
<text text-anchor="start" x="1686.5" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="1686.5" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="1686.5" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategyFor</text>
<text text-anchor="start" x="1686.5" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="1686.5" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="1686.5" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="1686.5" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="1686.5" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveStep()</text>
<text text-anchor="start" x="1686.5" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeSplitOssProjections()</text>
<text text-anchor="start" x="1686.5" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateEndOfStepVelocity()</text>
<text text-anchor="start" x="1686.5" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ChimeraProjectionCorrection()</text>
<text text-anchor="start" x="1686.5" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ChimeraVelocityCorrection()</text>
<text text-anchor="start" x="1686.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="1686.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolverSettingsType</text>
<text text-anchor="start" x="1686.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="1686.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="1686.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mAreaTolerance</text>
<text text-anchor="start" x="1686.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategyFor</text>
<text text-anchor="start" x="1686.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="1686.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategyFor</text>
<text text-anchor="start" x="1686.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="1686.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~FractionalStepStrategyFor</text>
<text text-anchor="start" x="1686.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="1686.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="1686.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategyFor</text>
<text text-anchor="start" x="1686.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="1686.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="1686.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="1686.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="1686.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveStep()</text>
<text text-anchor="start" x="1686.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeSplitOssProjections()</text>
<text text-anchor="start" x="1686.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateEndOfStepVelocity()</text>
<text text-anchor="start" x="1686.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ChimeraProjectionCorrection()</text>
<text text-anchor="start" x="1686.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ChimeraVelocityCorrection()</text>
<text text-anchor="start" x="1686.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InterpolateVelocity()</text>
<text text-anchor="start" x="1686.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeStrategy()</text>
</a>
</g>
</g>
<!-- Node17&#45;&gt;Node18 -->
<g id="edge15" class="edge">
<title>Node17&#45;&gt;Node18</title>
<path fill="none" stroke="midnightblue" d="M1766.5,-920.35C1766.5,-845.37 1766.5,-772.18 1766.5,-706.66"/>
<polygon fill="none" stroke="midnightblue" points="1763,-920.46 1766.5,-930.46 1770,-920.46 1763,-920.46"/>
</g>
<!-- Node26 -->
<g id="node24" class="node">
<title>Node26</title>
<g id="a_node24"><a xlink:href="../../d0/d53/class_kratos_1_1_poromechanics_explicit_strategy.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="red" points="3042.5,-330.5 3042.5,-563.5 3254.5,-563.5 3254.5,-330.5 3042.5,-330.5"/>
<text text-anchor="start" x="3050.5" y="-551.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::PoromechanicsExplicit</text>
<text text-anchor="start" x="3050.5" y="-540.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="3148.5" y="-529.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="red" points="3042.5,-522.5 3254.5,-522.5 "/>
<text text-anchor="start" x="3050.5" y="-510.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mInitializeWasPerformed</text>
<text text-anchor="start" x="3050.5" y="-499.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mCalculateReactionsFlag</text>
<text text-anchor="start" x="3050.5" y="-488.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mpScheme</text>
<text text-anchor="start" x="3050.5" y="-477.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpParameters</text>
<text text-anchor="start" x="3050.5" y="-466.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mSubModelPartList</text>
<text text-anchor="start" x="3050.5" y="-455.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mVariableNames</text>
<polyline fill="none" stroke="red" points="3042.5,-448.5 3254.5,-448.5 "/>
<text text-anchor="start" x="3050.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="3050.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="3050.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PoromechanicsExplicitStrategy()</text>
<text text-anchor="start" x="3050.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~PoromechanicsExplicitStrategy()</text>
<text text-anchor="start" x="3050.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="3050.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="3050.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="3050.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="3050.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateReactions()</text>
<text text-anchor="start" x="3050.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckConvergence()</text>
</a>
</g>
</g>
<!-- Node25&#45;&gt;Node26 -->
<g id="edge23" class="edge">
<title>Node25&#45;&gt;Node26</title>
<path fill="none" stroke="midnightblue" d="M3151.7,-1140.42C3150.76,-936.22 3149.67,-700.72 3149.03,-563.68"/>
<polygon fill="none" stroke="midnightblue" points="3148.2,-1140.45 3151.75,-1150.43 3155.2,-1140.41 3148.2,-1140.45"/>
</g>
<!-- Node29 -->
<g id="node26" class="node">
<title>Node29</title>
<g id="a_node26"><a xlink:href="../../d2/d29/class_kratos_1_1_nodal_two_step_v_p_strategy_for_f_s_i.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="3272.5,-143.5 3272.5,-750.5 3472.5,-750.5 3472.5,-143.5 3272.5,-143.5"/>
<text text-anchor="start" x="3280.5" y="-738.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NodalTwoStepVPStrategy</text>
<text text-anchor="start" x="3280.5" y="-727.5" font-family="Helvetica,sans-Serif" font-size="10.00">ForFSI&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="3372.5" y="-716.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="3272.5,-709.5 3472.5,-709.5 "/>
<text text-anchor="middle" x="3372.5" y="-697.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="3272.5,-690.5 3472.5,-690.5 "/>
<text text-anchor="start" x="3280.5" y="-678.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NodalTwoStepVPStrategyFor</text>
<text text-anchor="start" x="3280.5" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00">FSI()</text>
<text text-anchor="start" x="3280.5" y="-656.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NodalTwoStepVPStrategyFor</text>
<text text-anchor="start" x="3280.5" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10.00">FSI()</text>
<text text-anchor="start" x="3280.5" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NodalTwoStepVPStrategyFor</text>
<text text-anchor="start" x="3280.5" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">FSI()</text>
<text text-anchor="start" x="3280.5" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="3280.5" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ UpdateElementalStressStrain()</text>
<text text-anchor="start" x="3280.5" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="3280.5" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitialAssignMaterialToEach</text>
<text text-anchor="start" x="3280.5" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00">Node()</text>
<text text-anchor="start" x="3280.5" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ComputeNodalVolume()</text>
<text text-anchor="start" x="3280.5" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ComputeNodalVolumeAndAssign</text>
<text text-anchor="start" x="3280.5" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">FlagToElementType()</text>
<text text-anchor="start" x="3280.5" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetNeighboursOrderToSolid</text>
<text text-anchor="start" x="3280.5" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">Node()</text>
<text text-anchor="start" x="3280.5" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 15 more...</text>
<text text-anchor="start" x="3280.5" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="3280.5" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="3280.5" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="3280.5" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GeometryType</text>
<text text-anchor="start" x="3280.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="3280.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="3280.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="3280.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="3280.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="3280.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="3280.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="3280.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodalTwoStepVPStrategyFor</text>
<text text-anchor="start" x="3280.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">FSI()</text>
<text text-anchor="start" x="3280.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodalTwoStepVPStrategyFor</text>
<text text-anchor="start" x="3280.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">FSI()</text>
<text text-anchor="start" x="3280.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~NodalTwoStepVPStrategyFor</text>
<text text-anchor="start" x="3280.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">FSI()</text>
<text text-anchor="start" x="3280.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="3280.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateElementalStressStrain()</text>
<text text-anchor="start" x="3280.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="3280.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitialAssignMaterialToEach</text>
<text text-anchor="start" x="3280.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">Node()</text>
<text text-anchor="start" x="3280.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeNodalVolume()</text>
<text text-anchor="start" x="3280.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeNodalVolumeAndAssign</text>
<text text-anchor="start" x="3280.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">FlagToElementType()</text>
<text text-anchor="start" x="3280.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetNeighboursOrderToSolid</text>
<text text-anchor="start" x="3280.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">Node()</text>
<text text-anchor="start" x="3280.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 15 more...</text>
<text text-anchor="start" x="3280.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FillNodalSFDVector()</text>
<text text-anchor="start" x="3280.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="3280.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodalTwoStepVPStrategyFor</text>
<text text-anchor="start" x="3280.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">FSI()</text>
</a>
</g>
</g>
<!-- Node28&#45;&gt;Node29 -->
<g id="edge25" class="edge">
<title>Node28&#45;&gt;Node29</title>
<path fill="none" stroke="midnightblue" d="M3369.84,-1024.68C3370.27,-931.01 3370.71,-835.9 3371.1,-750.66"/>
<polygon fill="none" stroke="midnightblue" points="3366.33,-1024.9 3369.79,-1034.91 3373.33,-1024.93 3366.33,-1024.9"/>
</g>
<!-- Node37 -->
<g id="node34" class="node">
<title>Node37</title>
<g id="a_node34"><a xlink:href="../../db/da7/class_kratos_1_1_residual_based_derivative_recovery_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="4404,-259 4404,-635 4601,-635 4601,-259 4404,-259"/>
<text text-anchor="start" x="4412" y="-623" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedDerivative</text>
<text text-anchor="start" x="4412" y="-612" font-family="Helvetica,sans-Serif" font-size="10.00">RecoveryStrategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="4502.5" y="-601" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="4404,-594 4601,-594 "/>
<text text-anchor="middle" x="4502.5" y="-582" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="4404,-575 4601,-575 "/>
<text text-anchor="start" x="4412" y="-563" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedDerivativeRecovery</text>
<text text-anchor="start" x="4412" y="-552" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4412" y="-541" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedDerivativeRecovery</text>
<text text-anchor="start" x="4412" y="-530" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4412" y="-519" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ResidualBasedDerivative</text>
<text text-anchor="start" x="4412" y="-508" font-family="Helvetica,sans-Serif" font-size="10.00">RecoveryStrategy()</text>
<text text-anchor="start" x="4412" y="-497" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="4412" y="-486" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="4412" y="-475" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="4412" y="-464" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="4412" y="-453" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="4412" y="-442" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="4412" y="-431" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="4412" y="-420" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="4412" y="-409" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="4412" y="-398" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="4412" y="-387" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="4412" y="-376" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="4412" y="-365" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="4412" y="-354" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="4412" y="-343" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedDerivativeRecovery</text>
<text text-anchor="start" x="4412" y="-332" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4412" y="-321" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedDerivativeRecovery</text>
<text text-anchor="start" x="4412" y="-310" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4412" y="-299" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ResidualBasedDerivative</text>
<text text-anchor="start" x="4412" y="-288" font-family="Helvetica,sans-Serif" font-size="10.00">RecoveryStrategy()</text>
<text text-anchor="start" x="4412" y="-277" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedDerivativeRecovery</text>
<text text-anchor="start" x="4412" y="-266" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
</a>
</g>
</g>
<!-- Node36&#45;&gt;Node37 -->
<g id="edge33" class="edge">
<title>Node36&#45;&gt;Node37</title>
<path fill="none" stroke="midnightblue" d="M4835.91,-1228.05C4824.72,-1123.04 4794.16,-1011.32 4723.5,-930 4688.93,-890.21 4646.43,-932.57 4610.5,-894 4545.95,-824.7 4518.06,-723.59 4506.7,-635.16"/>
<polygon fill="none" stroke="midnightblue" points="4832.44,-1228.59 4836.93,-1238.19 4839.41,-1227.89 4832.44,-1228.59"/>
</g>
<!-- Node39 -->
<g id="node36" class="node">
<title>Node39</title>
<g id="a_node36"><a xlink:href="../../d8/de2/class_kratos_1_1_arc_length_strategy.html" target="_top" xlink:title="This is the base ArcLengthStrategy.">
<polygon fill="none" stroke="black" points="4619.5,-77.5 4619.5,-816.5 4819.5,-816.5 4819.5,-77.5 4619.5,-77.5"/>
<text text-anchor="start" x="4627.5" y="-804.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ArcLengthStrategy</text>
<text text-anchor="start" x="4627.5" y="-793.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="4719.5" y="-782.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="4619.5,-775.5 4819.5,-775.5 "/>
<text text-anchor="start" x="4627.5" y="-763.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpf</text>
<text text-anchor="start" x="4627.5" y="-752.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpDxf</text>
<text text-anchor="start" x="4627.5" y="-741.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpDxb</text>
<text text-anchor="start" x="4627.5" y="-730.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpDxPred</text>
<text text-anchor="start" x="4627.5" y="-719.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpDxStep</text>
<text text-anchor="start" x="4627.5" y="-708.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mDesiredIterations</text>
<text text-anchor="start" x="4627.5" y="-697.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInitializeArcLengthWasPerformed</text>
<text text-anchor="start" x="4627.5" y="-686.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInsideIterationLoop</text>
<text text-anchor="start" x="4627.5" y="-675.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxRadiusFactor</text>
<text text-anchor="start" x="4627.5" y="-664.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMinRadiusFactor</text>
<text text-anchor="start" x="4627.5" y="-653.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<polyline fill="none" stroke="black" points="4619.5,-646.5 4819.5,-646.5 "/>
<text text-anchor="start" x="4627.5" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="4627.5" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="4627.5" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="4627.5" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateDatabase()</text>
<text text-anchor="start" x="4627.5" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00"># MaxIterationsExceeded()</text>
<text text-anchor="start" x="4627.5" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ArcLengthStrategy()</text>
<text text-anchor="start" x="4627.5" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="4627.5" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="4627.5" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="4627.5" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="4627.5" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="4627.5" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TConvergenceCriteriaType</text>
<text text-anchor="start" x="4627.5" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="4627.5" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="4627.5" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="4627.5" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="4627.5" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="4627.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="4627.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="4627.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="4627.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="4627.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpf</text>
<text text-anchor="start" x="4627.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDxf</text>
<text text-anchor="start" x="4627.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDxb</text>
<text text-anchor="start" x="4627.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDxPred</text>
<text text-anchor="start" x="4627.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDxStep</text>
<text text-anchor="start" x="4627.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mDesiredIterations</text>
<text text-anchor="start" x="4627.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeArcLengthWasPerformed</text>
<text text-anchor="start" x="4627.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInsideIterationLoop</text>
<text text-anchor="start" x="4627.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxRadiusFactor</text>
<text text-anchor="start" x="4627.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMinRadiusFactor</text>
<text text-anchor="start" x="4627.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="4627.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ArcLengthStrategy()</text>
<text text-anchor="start" x="4627.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ArcLengthStrategy()</text>
<text text-anchor="start" x="4627.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="4627.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="4627.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="4627.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="4627.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="4627.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="4627.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateExternalLoads()</text>
<text text-anchor="start" x="4627.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="4627.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSystemVector()</text>
<text text-anchor="start" x="4627.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SaveInitializeSystemVector()</text>
<text text-anchor="start" x="4627.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="4627.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="4627.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="4627.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="4627.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateDatabase()</text>
<text text-anchor="start" x="4627.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaxIterationsExceeded()</text>
<text text-anchor="start" x="4627.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ArcLengthStrategy()</text>
</a>
</g>
</g>
<!-- Node38&#45;&gt;Node39 -->
<g id="edge35" class="edge">
<title>Node38&#45;&gt;Node39</title>
<path fill="none" stroke="midnightblue" d="M4966.03,-987.59C4954.53,-967.27 4941.42,-947.95 4926.5,-930 4896.84,-894.32 4859.42,-928.6 4828.5,-894 4807.92,-870.97 4791.07,-844.69 4777.3,-816.67"/>
<polygon fill="none" stroke="midnightblue" points="4962.96,-989.29 4970.85,-996.36 4969.1,-985.92 4962.96,-989.29"/>
</g>
<!-- Node40 -->
<g id="node37" class="node">
<title>Node40</title>
<g id="a_node37"><a xlink:href="../../d0/d57/class_kratos_1_1_formfinding_strategy.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="4838,-297.5 4838,-596.5 5019,-596.5 5019,-297.5 4838,-297.5"/>
<text text-anchor="start" x="4846" y="-584.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::FormfindingStrategy</text>
<text text-anchor="start" x="4846" y="-573.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="4928.5" y="-562.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="4838,-555.5 5019,-555.5 "/>
<text text-anchor="middle" x="4928.5" y="-543.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="4838,-536.5 5019,-536.5 "/>
<text text-anchor="start" x="4846" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TConvergenceCriteriaType</text>
<text text-anchor="start" x="4846" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="4846" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="4846" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="4846" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="4846" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="4846" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterationIOType</text>
<text text-anchor="start" x="4846" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterationIOPointerType</text>
<text text-anchor="start" x="4846" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="4846" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="4846" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpIterationIO</text>
<text text-anchor="start" x="4846" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mProjectionSettings</text>
<text text-anchor="start" x="4846" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mrFormFindingModelPart</text>
<text text-anchor="start" x="4846" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPrintingFormat</text>
<text text-anchor="start" x="4846" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIterationNumber</text>
<text text-anchor="start" x="4846" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mWriteFormFoundGeometryFile</text>
<text text-anchor="start" x="4846" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FormfindingStrategy()</text>
<text text-anchor="start" x="4846" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~FormfindingStrategy()</text>
<text text-anchor="start" x="4846" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* WriteFormFoundMdpa()</text>
<text text-anchor="start" x="4846" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateDatabase()</text>
<text text-anchor="start" x="4846" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
</a>
</g>
</g>
<!-- Node38&#45;&gt;Node40 -->
<g id="edge36" class="edge">
<title>Node38&#45;&gt;Node40</title>
<path fill="none" stroke="midnightblue" d="M4978.2,-985.8C4964.94,-842.28 4951.7,-699.06 4942.23,-596.55"/>
<polygon fill="none" stroke="midnightblue" points="4974.75,-986.5 4979.16,-996.13 4981.72,-985.85 4974.75,-986.5"/>
</g>
<!-- Node41 -->
<g id="node38" class="node">
<title>Node41</title>
<g id="a_node38"><a xlink:href="../../d7/d24/class_kratos_1_1_geo_mechanics_newton_raphson_strategy.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="red" points="5037.5,-336 5037.5,-558 5219.5,-558 5219.5,-336 5037.5,-336"/>
<text text-anchor="start" x="5045.5" y="-546" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::GeoMechanicsNewton</text>
<text text-anchor="start" x="5045.5" y="-535" font-family="Helvetica,sans-Serif" font-size="10.00">RaphsonStrategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="5128.5" y="-524" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="red" points="5037.5,-517 5219.5,-517 "/>
<text text-anchor="start" x="5045.5" y="-505" font-family="Helvetica,sans-Serif" font-size="10.00">+ mInitializeWasPerformed</text>
<text text-anchor="start" x="5045.5" y="-494" font-family="Helvetica,sans-Serif" font-size="10.00">+ mMaxIterationNumber</text>
<text text-anchor="start" x="5045.5" y="-483" font-family="Helvetica,sans-Serif" font-size="10.00">+ mpA</text>
<text text-anchor="start" x="5045.5" y="-472" font-family="Helvetica,sans-Serif" font-size="10.00">+ mpb</text>
<text text-anchor="start" x="5045.5" y="-461" font-family="Helvetica,sans-Serif" font-size="10.00">+ mpBuilderAndSolver</text>
<text text-anchor="start" x="5045.5" y="-450" font-family="Helvetica,sans-Serif" font-size="10.00">+ mpDx</text>
<text text-anchor="start" x="5045.5" y="-439" font-family="Helvetica,sans-Serif" font-size="10.00">+ mpScheme</text>
<text text-anchor="start" x="5045.5" y="-428" font-family="Helvetica,sans-Serif" font-size="10.00"># mSubModelPartList</text>
<text text-anchor="start" x="5045.5" y="-417" font-family="Helvetica,sans-Serif" font-size="10.00"># mVariableNames</text>
<polyline fill="none" stroke="red" points="5037.5,-410 5219.5,-410 "/>
<text text-anchor="start" x="5045.5" y="-398" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="5045.5" y="-387" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="5045.5" y="-376" font-family="Helvetica,sans-Serif" font-size="10.00">+ GeoMechanicsNewtonRaphson</text>
<text text-anchor="start" x="5045.5" y="-365" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="5045.5" y="-354" font-family="Helvetica,sans-Serif" font-size="10.00"># Check()</text>
<text text-anchor="start" x="5045.5" y="-343" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateReferenceDofsNorm()</text>
</a>
</g>
</g>
<!-- Node38&#45;&gt;Node41 -->
<g id="edge37" class="edge">
<title>Node38&#45;&gt;Node41</title>
<path fill="none" stroke="midnightblue" d="M5078.78,-985.93C5093.8,-823.45 5108.78,-661.33 5118.31,-558.22"/>
<polygon fill="none" stroke="midnightblue" points="5075.28,-985.85 5077.84,-996.13 5082.25,-986.5 5075.28,-985.85"/>
</g>
<!-- Node44 -->
<g id="node39" class="node">
<title>Node44</title>
<g id="a_node39"><a xlink:href="../../d0/ddf/class_kratos_1_1_hexahedra_newton_raphson_strategy.html" target="_top" xlink:title="This is the base Newton Raphson strategy.">
<polygon fill="none" stroke="black" points="5237.5,-275.5 5237.5,-618.5 5455.5,-618.5 5455.5,-275.5 5237.5,-275.5"/>
<text text-anchor="start" x="5245.5" y="-606.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::HexahedraNewtonRaphson</text>
<text text-anchor="start" x="5245.5" y="-595.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="5346.5" y="-584.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="5237.5,-577.5 5455.5,-577.5 "/>
<text text-anchor="middle" x="5346.5" y="-565.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="5237.5,-558.5 5455.5,-558.5 "/>
<text text-anchor="start" x="5245.5" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ HexahedraNewtonRaphsonStrategy()</text>
<text text-anchor="start" x="5245.5" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ HexahedraNewtonRaphsonStrategy()</text>
<text text-anchor="start" x="5245.5" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~HexahedraNewtonRaphsonStrategy()</text>
<text text-anchor="start" x="5245.5" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="5245.5" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00"># HexahedraNewtonRaphsonStrategy()</text>
<text text-anchor="start" x="5245.5" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TConvergenceCriteriaType</text>
<text text-anchor="start" x="5245.5" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="5245.5" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="5245.5" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="5245.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="5245.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="5245.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="5245.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="5245.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="5245.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="5245.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="5245.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="5245.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="5245.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="5245.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="5245.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HexahedraNewtonRaphsonStrategy()</text>
<text text-anchor="start" x="5245.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HexahedraNewtonRaphsonStrategy()</text>
<text text-anchor="start" x="5245.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~HexahedraNewtonRaphsonStrategy()</text>
<text text-anchor="start" x="5245.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="5245.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HexahedraNewtonRaphsonStrategy()</text>
</a>
</g>
</g>
<!-- Node38&#45;&gt;Node44 -->
<g id="edge38" class="edge">
<title>Node38&#45;&gt;Node44</title>
<path fill="none" stroke="midnightblue" d="M5090.97,-987.59C5102.47,-967.27 5115.58,-947.95 5130.5,-930 5160.16,-894.32 5197.26,-928.31 5228.5,-894 5296.45,-819.39 5326.1,-710.18 5338.69,-618.5"/>
<polygon fill="none" stroke="midnightblue" points="5087.9,-985.92 5086.15,-996.36 5094.04,-989.29 5087.9,-985.92"/>
</g>
<!-- Node45 -->
<g id="node40" class="node">
<title>Node45</title>
<g id="a_node40"><a xlink:href="../../de/d22/class_kratos_1_1_line_search_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="red" points="5474,-127 5474,-767 5645,-767 5645,-127 5474,-127"/>
<text text-anchor="start" x="5482" y="-755" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::LineSearchStrategy</text>
<text text-anchor="start" x="5482" y="-744" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="5559.5" y="-733" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="red" points="5474,-726 5645,-726 "/>
<text text-anchor="middle" x="5559.5" y="-714" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="red" points="5474,-707 5645,-707 "/>
<text text-anchor="start" x="5482" y="-695" font-family="Helvetica,sans-Serif" font-size="10.00">+ LineSearchStrategy()</text>
<text text-anchor="start" x="5482" y="-684" font-family="Helvetica,sans-Serif" font-size="10.00">+ LineSearchStrategy()</text>
<text text-anchor="start" x="5482" y="-673" font-family="Helvetica,sans-Serif" font-size="10.00">+ LineSearchStrategy()</text>
<text text-anchor="start" x="5482" y="-662" font-family="Helvetica,sans-Serif" font-size="10.00">+ LineSearchStrategy()</text>
<text text-anchor="start" x="5482" y="-651" font-family="Helvetica,sans-Serif" font-size="10.00">+ LineSearchStrategy()</text>
<text text-anchor="start" x="5482" y="-640" font-family="Helvetica,sans-Serif" font-size="10.00">+ LineSearchStrategy()</text>
<text text-anchor="start" x="5482" y="-629" font-family="Helvetica,sans-Serif" font-size="10.00">+ LineSearchStrategy()</text>
<text text-anchor="start" x="5482" y="-618" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~LineSearchStrategy()</text>
<text text-anchor="start" x="5482" y="-607" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="5482" y="-596" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="5482" y="-585" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="5482" y="-574" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateDatabase()</text>
<text text-anchor="start" x="5482" y="-563" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="5482" y="-552" font-family="Helvetica,sans-Serif" font-size="10.00"># OverrideDefaultSettingsWith</text>
<text text-anchor="start" x="5482" y="-541" font-family="Helvetica,sans-Serif" font-size="10.00">Parameters()</text>
<text text-anchor="start" x="5482" y="-530" font-family="Helvetica,sans-Serif" font-size="10.00"># LineSearchStrategy()</text>
<text text-anchor="start" x="5482" y="-519" font-family="Helvetica,sans-Serif" font-size="10.00">* TConvergenceCriteriaType</text>
<text text-anchor="start" x="5482" y="-508" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategyType</text>
<text text-anchor="start" x="5482" y="-497" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="5482" y="-486" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="5482" y="-475" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="5482" y="-464" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="5482" y="-453" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="5482" y="-442" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="5482" y="-431" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="5482" y="-420" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="5482" y="-409" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="5482" y="-398" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxLineSearchIterations</text>
<text text-anchor="start" x="5482" y="-387" font-family="Helvetica,sans-Serif" font-size="10.00">* mFirstAlphaValue</text>
<text text-anchor="start" x="5482" y="-376" font-family="Helvetica,sans-Serif" font-size="10.00">* mSecondAlphaValue</text>
<text text-anchor="start" x="5482" y="-365" font-family="Helvetica,sans-Serif" font-size="10.00">* mMinAlpha</text>
<text text-anchor="start" x="5482" y="-354" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxAlpha</text>
<text text-anchor="start" x="5482" y="-343" font-family="Helvetica,sans-Serif" font-size="10.00">* mLineSearchTolerance</text>
<text text-anchor="start" x="5482" y="-332" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchStrategy()</text>
<text text-anchor="start" x="5482" y="-321" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchStrategy()</text>
<text text-anchor="start" x="5482" y="-310" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchStrategy()</text>
<text text-anchor="start" x="5482" y="-299" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchStrategy()</text>
<text text-anchor="start" x="5482" y="-288" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchStrategy()</text>
<text text-anchor="start" x="5482" y="-277" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchStrategy()</text>
<text text-anchor="start" x="5482" y="-266" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchStrategy()</text>
<text text-anchor="start" x="5482" y="-255" font-family="Helvetica,sans-Serif" font-size="10.00">* ~LineSearchStrategy()</text>
<text text-anchor="start" x="5482" y="-244" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="5482" y="-233" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="5482" y="-222" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="5482" y="-211" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="5482" y="-200" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="5482" y="-189" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="5482" y="-178" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateDatabase()</text>
<text text-anchor="start" x="5482" y="-167" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="5482" y="-156" font-family="Helvetica,sans-Serif" font-size="10.00">* OverrideDefaultSettingsWith</text>
<text text-anchor="start" x="5482" y="-145" font-family="Helvetica,sans-Serif" font-size="10.00">Parameters()</text>
<text text-anchor="start" x="5482" y="-134" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchStrategy()</text>
</a>
</g>
</g>
<!-- Node38&#45;&gt;Node45 -->
<g id="edge39" class="edge">
<title>Node38&#45;&gt;Node45</title>
<path fill="none" stroke="midnightblue" d="M5082.56,-987.51C5096.19,-966.69 5112.07,-947.34 5130.5,-930 5239.25,-827.7 5353.66,-994.03 5464.5,-894 5502.12,-860.06 5526.86,-815.21 5542.82,-767.03"/>
<polygon fill="none" stroke="midnightblue" points="5079.44,-985.89 5077.05,-996.2 5085.36,-989.63 5079.44,-985.89"/>
</g>
<!-- Node63 -->
<g id="node48" class="node">
<title>Node63</title>
<g id="a_node48"><a xlink:href="../../d6/df4/class_kratos_1_1_three_step_v_p_strategy.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="6281,-1068 6281,-1994 6502,-1994 6502,-1068 6281,-1068"/>
<text text-anchor="start" x="6289" y="-1982" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ThreeStepVPStrategy</text>
<text text-anchor="start" x="6289" y="-1971" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="6391.5" y="-1960" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="6281,-1953 6502,-1953 "/>
<text text-anchor="start" x="6289" y="-1941" font-family="Helvetica,sans-Serif" font-size="10.00"># mVelocityTolerance</text>
<text text-anchor="start" x="6289" y="-1930" font-family="Helvetica,sans-Serif" font-size="10.00"># mPressureTolerance</text>
<text text-anchor="start" x="6289" y="-1919" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxPressureIter</text>
<text text-anchor="start" x="6289" y="-1908" font-family="Helvetica,sans-Serif" font-size="10.00"># mDomainSize</text>
<text text-anchor="start" x="6289" y="-1897" font-family="Helvetica,sans-Serif" font-size="10.00"># mTimeOrder</text>
<text text-anchor="start" x="6289" y="-1886" font-family="Helvetica,sans-Serif" font-size="10.00"># mReformDofSet</text>
<text text-anchor="start" x="6289" y="-1875" font-family="Helvetica,sans-Serif" font-size="10.00"># mpMomentumStrategy</text>
<text text-anchor="start" x="6289" y="-1864" font-family="Helvetica,sans-Serif" font-size="10.00"># mpPressureStrategy</text>
<polyline fill="none" stroke="black" points="6281,-1857 6502,-1857 "/>
<text text-anchor="start" x="6289" y="-1845" font-family="Helvetica,sans-Serif" font-size="10.00">+ ThreeStepVPStrategy()</text>
<text text-anchor="start" x="6289" y="-1834" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ThreeStepVPStrategy()</text>
<text text-anchor="start" x="6289" y="-1823" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="6289" y="-1812" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetTimeCoefficients()</text>
<text text-anchor="start" x="6289" y="-1801" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="6289" y="-1790" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="6289" y="-1779" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="6289" y="-1768" font-family="Helvetica,sans-Serif" font-size="10.00">+ UpdateStressStrain()</text>
<text text-anchor="start" x="6289" y="-1757" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateTemporalVariables()</text>
<text text-anchor="start" x="6289" y="-1746" font-family="Helvetica,sans-Serif" font-size="10.00">+ UpdateAccelerations()</text>
<text text-anchor="start" x="6289" y="-1735" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="6289" y="-1724" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="6289" y="-1713" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="6289" y="-1702" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="6289" y="-1691" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="6289" y="-1680" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveFirstVelocitySystem()</text>
<text text-anchor="start" x="6289" y="-1669" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveContinuityIteration()</text>
<text text-anchor="start" x="6289" y="-1658" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateEndOfStepVelocity()</text>
<text text-anchor="start" x="6289" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00"># RecoverFractionalVelocity()</text>
<text text-anchor="start" x="6289" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckVelocityIncrementConvergence()</text>
<text text-anchor="start" x="6289" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckVelocityConvergence()</text>
<text text-anchor="start" x="6289" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckPressureIncrementConvergence()</text>
<text text-anchor="start" x="6289" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00"># FixPressure()</text>
<text text-anchor="start" x="6289" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00"># FreePressure()</text>
<text text-anchor="start" x="6289" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00"># operator=()</text>
<text text-anchor="start" x="6289" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00"># ThreeStepVPStrategy()</text>
<text text-anchor="start" x="6289" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="6289" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="6289" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="6289" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="6289" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="6289" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="6289" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="6289" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">* StrategyPointerType</text>
<text text-anchor="start" x="6289" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">* SolverSettingsType</text>
<text text-anchor="start" x="6289" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="6289" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="6289" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">* mVelocityTolerance</text>
<text text-anchor="start" x="6289" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">* mPressureTolerance</text>
<text text-anchor="start" x="6289" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxPressureIter</text>
<text text-anchor="start" x="6289" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">* mDomainSize</text>
<text text-anchor="start" x="6289" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* mTimeOrder</text>
<text text-anchor="start" x="6289" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSet</text>
<text text-anchor="start" x="6289" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* mpMomentumStrategy</text>
<text text-anchor="start" x="6289" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">* mpPressureStrategy</text>
<text text-anchor="start" x="6289" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">* ThreeStepVPStrategy()</text>
<text text-anchor="start" x="6289" y="-1339" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ThreeStepVPStrategy()</text>
<text text-anchor="start" x="6289" y="-1328" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="6289" y="-1317" font-family="Helvetica,sans-Serif" font-size="10.00">* SetTimeCoefficients()</text>
<text text-anchor="start" x="6289" y="-1306" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="6289" y="-1295" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="6289" y="-1284" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="6289" y="-1273" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateStressStrain()</text>
<text text-anchor="start" x="6289" y="-1262" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateTemporalVariables()</text>
<text text-anchor="start" x="6289" y="-1251" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateAccelerations()</text>
<text text-anchor="start" x="6289" y="-1240" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="6289" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="6289" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="6289" y="-1207" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="6289" y="-1196" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="6289" y="-1185" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveFirstVelocitySystem()</text>
<text text-anchor="start" x="6289" y="-1174" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveContinuityIteration()</text>
<text text-anchor="start" x="6289" y="-1163" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateEndOfStepVelocity()</text>
<text text-anchor="start" x="6289" y="-1152" font-family="Helvetica,sans-Serif" font-size="10.00">* RecoverFractionalVelocity()</text>
<text text-anchor="start" x="6289" y="-1141" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckVelocityIncrementConvergence()</text>
<text text-anchor="start" x="6289" y="-1130" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckVelocityConvergence()</text>
<text text-anchor="start" x="6289" y="-1119" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckPressureIncrementConvergence()</text>
<text text-anchor="start" x="6289" y="-1108" font-family="Helvetica,sans-Serif" font-size="10.00">* FixPressure()</text>
<text text-anchor="start" x="6289" y="-1097" font-family="Helvetica,sans-Serif" font-size="10.00">* FreePressure()</text>
<text text-anchor="start" x="6289" y="-1086" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="6289" y="-1075" font-family="Helvetica,sans-Serif" font-size="10.00">* ThreeStepVPStrategy()</text>
</a>
</g>
</g>
<!-- Node62&#45;&gt;Node63 -->
<g id="edge47" class="edge">
<title>Node62&#45;&gt;Node63</title>
<path fill="none" stroke="midnightblue" d="M6391.5,-2158.4C6391.5,-2104.67 6391.5,-2049.14 6391.5,-1994.35"/>
<polygon fill="none" stroke="midnightblue" points="6388,-2158.41 6391.5,-2168.41 6395,-2158.41 6388,-2158.41"/>
</g>
<!-- Node64 -->
<g id="node49" class="node">
<title>Node64</title>
<g id="a_node49"><a xlink:href="../../dd/de3/class_kratos_1_1_two_step_v_p_strategy.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="red" points="6520,-1101 6520,-1961 6705,-1961 6705,-1101 6520,-1101"/>
<text text-anchor="start" x="6528" y="-1949" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::TwoStepVPStrategy</text>
<text text-anchor="start" x="6528" y="-1938" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="6612.5" y="-1927" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="red" points="6520,-1920 6705,-1920 "/>
<text text-anchor="start" x="6528" y="-1908" font-family="Helvetica,sans-Serif" font-size="10.00"># mVelocityTolerance</text>
<text text-anchor="start" x="6528" y="-1897" font-family="Helvetica,sans-Serif" font-size="10.00"># mPressureTolerance</text>
<text text-anchor="start" x="6528" y="-1886" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxPressureIter</text>
<text text-anchor="start" x="6528" y="-1875" font-family="Helvetica,sans-Serif" font-size="10.00"># mDomainSize</text>
<text text-anchor="start" x="6528" y="-1864" font-family="Helvetica,sans-Serif" font-size="10.00"># mTimeOrder</text>
<text text-anchor="start" x="6528" y="-1853" font-family="Helvetica,sans-Serif" font-size="10.00"># mReformDofSet</text>
<text text-anchor="start" x="6528" y="-1842" font-family="Helvetica,sans-Serif" font-size="10.00"># mpMomentumStrategy</text>
<text text-anchor="start" x="6528" y="-1831" font-family="Helvetica,sans-Serif" font-size="10.00"># mpPressureStrategy</text>
<polyline fill="none" stroke="red" points="6520,-1824 6705,-1824 "/>
<text text-anchor="start" x="6528" y="-1812" font-family="Helvetica,sans-Serif" font-size="10.00">+ TwoStepVPStrategy()</text>
<text text-anchor="start" x="6528" y="-1801" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~TwoStepVPStrategy()</text>
<text text-anchor="start" x="6528" y="-1790" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="6528" y="-1779" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetTimeCoefficients()</text>
<text text-anchor="start" x="6528" y="-1768" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="6528" y="-1757" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="6528" y="-1746" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="6528" y="-1735" font-family="Helvetica,sans-Serif" font-size="10.00">+ UpdateStressStrain()</text>
<text text-anchor="start" x="6528" y="-1724" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="6528" y="-1713" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="6528" y="-1702" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="6528" y="-1691" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="6528" y="-1680" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="6528" y="-1669" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveMomentumIteration()</text>
<text text-anchor="start" x="6528" y="-1658" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveContinuityIteration()</text>
<text text-anchor="start" x="6528" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckVelocityConvergence()</text>
<text text-anchor="start" x="6528" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckPressureConvergence()</text>
<text text-anchor="start" x="6528" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00"># FixTimeStepMomentum()</text>
<text text-anchor="start" x="6528" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckMomentumConvergence()</text>
<text text-anchor="start" x="6528" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00"># FixTimeStepContinuity()</text>
<text text-anchor="start" x="6528" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckContinuityConvergence()</text>
<text text-anchor="start" x="6528" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00"># operator=()</text>
<text text-anchor="start" x="6528" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00"># TwoStepVPStrategy()</text>
<text text-anchor="start" x="6528" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="6528" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="6528" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="6528" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="6528" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="6528" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="6528" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="6528" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">* StrategyPointerType</text>
<text text-anchor="start" x="6528" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">* SolverSettingsType</text>
<text text-anchor="start" x="6528" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="6528" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="6528" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">* mVelocityTolerance</text>
<text text-anchor="start" x="6528" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">* mPressureTolerance</text>
<text text-anchor="start" x="6528" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxPressureIter</text>
<text text-anchor="start" x="6528" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">* mDomainSize</text>
<text text-anchor="start" x="6528" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* mTimeOrder</text>
<text text-anchor="start" x="6528" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSet</text>
<text text-anchor="start" x="6528" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* mpMomentumStrategy</text>
<text text-anchor="start" x="6528" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">* mpPressureStrategy</text>
<text text-anchor="start" x="6528" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">* TwoStepVPStrategy()</text>
<text text-anchor="start" x="6528" y="-1339" font-family="Helvetica,sans-Serif" font-size="10.00">* ~TwoStepVPStrategy()</text>
<text text-anchor="start" x="6528" y="-1328" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="6528" y="-1317" font-family="Helvetica,sans-Serif" font-size="10.00">* SetTimeCoefficients()</text>
<text text-anchor="start" x="6528" y="-1306" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="6528" y="-1295" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="6528" y="-1284" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="6528" y="-1273" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateStressStrain()</text>
<text text-anchor="start" x="6528" y="-1262" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="6528" y="-1251" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="6528" y="-1240" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="6528" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="6528" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="6528" y="-1207" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveMomentumIteration()</text>
<text text-anchor="start" x="6528" y="-1196" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveContinuityIteration()</text>
<text text-anchor="start" x="6528" y="-1185" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckVelocityConvergence()</text>
<text text-anchor="start" x="6528" y="-1174" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckPressureConvergence()</text>
<text text-anchor="start" x="6528" y="-1163" font-family="Helvetica,sans-Serif" font-size="10.00">* FixTimeStepMomentum()</text>
<text text-anchor="start" x="6528" y="-1152" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckMomentumConvergence()</text>
<text text-anchor="start" x="6528" y="-1141" font-family="Helvetica,sans-Serif" font-size="10.00">* FixTimeStepContinuity()</text>
<text text-anchor="start" x="6528" y="-1130" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckContinuityConvergence()</text>
<text text-anchor="start" x="6528" y="-1119" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="6528" y="-1108" font-family="Helvetica,sans-Serif" font-size="10.00">* TwoStepVPStrategy()</text>
</a>
</g>
</g>
<!-- Node62&#45;&gt;Node64 -->
<g id="edge48" class="edge">
<title>Node62&#45;&gt;Node64</title>
<path fill="none" stroke="midnightblue" d="M6499.97,-2176.89C6503.64,-2161.76 6507.17,-2146.76 6510.5,-2132 6522.91,-2076.98 6534.57,-2018.83 6545.27,-1961.23"/>
<polygon fill="none" stroke="midnightblue" points="6496.51,-2176.31 6497.53,-2186.85 6503.3,-2177.97 6496.51,-2176.31"/>
</g>
</g>
</svg>
