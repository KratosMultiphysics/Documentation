<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::AnnPromLeastSquaresPetrovGalerkinROMBuilderAndSolver&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt; Pages: 1 -->
<!--zoomable 4865 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 807;
var viewHeight = 4865;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::AnnPromLeastSquaresPetrovGalerkinROMBuilderAndSolver&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="This class provides an implementation for the AnnPromLeastSquaresPetrovGalerkinROM builder and solver...">
<polygon fill="#bfbfbf" stroke="black" points="184.5,-0.5 184.5,-772.5 436.5,-772.5 436.5,-0.5 184.5,-0.5"/>
<text text-anchor="start" x="192.5" y="-760.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::AnnPromLeastSquares</text>
<text text-anchor="start" x="192.5" y="-749.5" font-family="Helvetica,sans-Serif" font-size="10.00">PetrovGalerkinROMBuilderAndSolver</text>
<text text-anchor="middle" x="310.5" y="-738.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="184.5,-731.5 436.5,-731.5 "/>
<text text-anchor="start" x="192.5" y="-719.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mNeighbouringAndSelected</text>
<text text-anchor="start" x="192.5" y="-708.5" font-family="Helvetica,sans-Serif" font-size="10.00">Elements</text>
<text text-anchor="start" x="192.5" y="-697.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mNeighbouringAndSelected</text>
<text text-anchor="start" x="192.5" y="-686.5" font-family="Helvetica,sans-Serif" font-size="10.00">Conditions</text>
<polyline fill="none" stroke="black" points="184.5,-679.5 436.5,-679.5 "/>
<text text-anchor="start" x="192.5" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AnnPromLeastSquaresPetrov</text>
<text text-anchor="start" x="192.5" y="-656.5" font-family="Helvetica,sans-Serif" font-size="10.00">GalerkinROMBuilderAndSolver()</text>
<text text-anchor="start" x="192.5" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~AnnPromLeastSquaresPetrov</text>
<text text-anchor="start" x="192.5" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">GalerkinROMBuilderAndSolver()</text>
<text text-anchor="start" x="192.5" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="192.5" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="192.5" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="192.5" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="192.5" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00"># BuildWithComplementaryMesh()</text>
<text text-anchor="start" x="192.5" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FindNeighbouringElements</text>
<text text-anchor="start" x="192.5" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConditions()</text>
<text text-anchor="start" x="192.5" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="192.5" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="192.5" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="192.5" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseBuilderAndSolverType</text>
<text text-anchor="start" x="192.5" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="192.5" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="192.5" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="192.5" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="192.5" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementsArrayType</text>
<text text-anchor="start" x="192.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConditionsArrayType</text>
<text text-anchor="start" x="192.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="192.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNeighbouringAndSelected</text>
<text text-anchor="start" x="192.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">Elements</text>
<text text-anchor="start" x="192.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNeighbouringAndSelected</text>
<text text-anchor="start" x="192.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">Conditions</text>
<text text-anchor="start" x="192.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNodalUnknowns</text>
<text text-anchor="start" x="192.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mTrainPetrovGalerkinFlag</text>
<text text-anchor="start" x="192.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mBasisStrategy</text>
<text text-anchor="start" x="192.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSolvingTechnique</text>
<text text-anchor="start" x="192.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEigenRomA</text>
<text text-anchor="start" x="192.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEigenRomB</text>
<text text-anchor="start" x="192.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mRightRomBasisInitialized</text>
<text text-anchor="start" x="192.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSelectedDofs</text>
<text text-anchor="start" x="192.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsSelectedDofsInitialized</text>
<text text-anchor="start" x="192.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AnnPromLeastSquaresPetrov</text>
<text text-anchor="start" x="192.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">GalerkinROMBuilderAndSolver()</text>
<text text-anchor="start" x="192.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~AnnPromLeastSquaresPetrov</text>
<text text-anchor="start" x="192.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">GalerkinROMBuilderAndSolver()</text>
<text text-anchor="start" x="192.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpDofSet()</text>
<text text-anchor="start" x="192.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndProjectROM()</text>
<text text-anchor="start" x="192.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndApplyDirichletConditions()</text>
<text text-anchor="start" x="192.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildWithComplementaryMesh</text>
<text text-anchor="start" x="192.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndApplyDirichletConditions()</text>
<text text-anchor="start" x="192.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSelectedDofs()</text>
<text text-anchor="start" x="192.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ZeroOutUnselectedComplementary</text>
<text text-anchor="start" x="192.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">MeshRows()</text>
<text text-anchor="start" x="192.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetRightROMBasis()</text>
<text text-anchor="start" x="192.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ProjectROM()</text>
<text text-anchor="start" x="192.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* WriteReactionDataToMatrix</text>
<text text-anchor="start" x="192.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">Market()</text>
<text text-anchor="start" x="192.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndSolve()</text>
<text text-anchor="start" x="192.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="192.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="192.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="192.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="192.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="192.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="192.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildWithComplementaryMesh()</text>
<text text-anchor="start" x="192.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FindNeighbouringElements</text>
<text text-anchor="start" x="192.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConditions()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d3/d4c/class_kratos_1_1_ann_prom_global_r_o_m_builder_and_solver.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="200,-810.5 200,-1626.5 421,-1626.5 421,-810.5 200,-810.5"/>
<text text-anchor="start" x="208" y="-1614.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::AnnPromGlobalROMBuilder</text>
<text text-anchor="start" x="208" y="-1603.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="310.5" y="-1592.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="200,-1585.5 421,-1585.5 "/>
<text text-anchor="start" x="208" y="-1573.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mNodalDofs</text>
<text text-anchor="start" x="208" y="-1562.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMapPhi</text>
<text text-anchor="start" x="208" y="-1551.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mHromSimulation</text>
<text text-anchor="start" x="208" y="-1540.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mHromWeightsInitialized</text>
<text text-anchor="start" x="208" y="-1529.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mRightRomBasisInitialized</text>
<polyline fill="none" stroke="black" points="200,-1522.5 421,-1522.5 "/>
<text text-anchor="start" x="208" y="-1510.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AnnPromGlobalROMBuilderAnd</text>
<text text-anchor="start" x="208" y="-1499.5" font-family="Helvetica,sans-Serif" font-size="10.00">Solver()</text>
<text text-anchor="start" x="208" y="-1488.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AnnPromGlobalROMBuilderAnd</text>
<text text-anchor="start" x="208" y="-1477.5" font-family="Helvetica,sans-Serif" font-size="10.00">Solver()</text>
<text text-anchor="start" x="208" y="-1466.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~AnnPromGlobalROMBuilder</text>
<text text-anchor="start" x="208" y="-1455.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="208" y="-1444.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="208" y="-1433.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="208" y="-1422.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="208" y="-1411.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="208" y="-1400.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="208" y="-1389.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="208" y="-1378.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseBuilderAndSolverType</text>
<text text-anchor="start" x="208" y="-1367.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="208" y="-1356.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="208" y="-1345.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="208" y="-1334.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="208" y="-1323.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="208" y="-1312.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="208" y="-1301.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 18 more...</text>
<text text-anchor="start" x="208" y="-1290.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNodalDofs</text>
<text text-anchor="start" x="208" y="-1279.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMapPhi</text>
<text text-anchor="start" x="208" y="-1268.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mHromSimulation</text>
<text text-anchor="start" x="208" y="-1257.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mHromWeightsInitialized</text>
<text text-anchor="start" x="208" y="-1246.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mRightRomBasisInitialized</text>
<text text-anchor="start" x="208" y="-1235.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNumberOfRomModes</text>
<text text-anchor="start" x="208" y="-1224.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEigenRomA</text>
<text text-anchor="start" x="208" y="-1213.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEigenRomB</text>
<text text-anchor="start" x="208" y="-1202.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMonotonicityPreservingFlag</text>
<text text-anchor="start" x="208" y="-1191.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AnnPromGlobalROMBuilderAnd</text>
<text text-anchor="start" x="208" y="-1180.5" font-family="Helvetica,sans-Serif" font-size="10.00">Solver()</text>
<text text-anchor="start" x="208" y="-1169.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AnnPromGlobalROMBuilderAnd</text>
<text text-anchor="start" x="208" y="-1158.5" font-family="Helvetica,sans-Serif" font-size="10.00">Solver()</text>
<text text-anchor="start" x="208" y="-1147.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~AnnPromGlobalROMBuilder</text>
<text text-anchor="start" x="208" y="-1136.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="208" y="-1125.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="208" y="-1114.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpDofSet()</text>
<text text-anchor="start" x="208" y="-1103.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpSystem()</text>
<text text-anchor="start" x="208" y="-1092.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetNumberOfROMModes()</text>
<text text-anchor="start" x="208" y="-1081.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMonotonicityPreserving</text>
<text text-anchor="start" x="208" y="-1070.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="208" y="-1059.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetNumberOfROMModes()</text>
<text text-anchor="start" x="208" y="-1048.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDecoderParameters()</text>
<text text-anchor="start" x="208" y="-1037.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetNNLayer()</text>
<text text-anchor="start" x="208" y="-1026.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MonotonicityPreserving()</text>
<text text-anchor="start" x="208" y="-1015.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="208" y="-1004.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndSolve()</text>
<text text-anchor="start" x="208" y="-993.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResizeAndInitializeVectors()</text>
<text text-anchor="start" x="208" y="-982.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="208" y="-971.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="208" y="-960.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="208" y="-949.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="208" y="-938.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="208" y="-927.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="208" y="-916.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeHROMWeights()</text>
<text text-anchor="start" x="208" y="-905.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndProjectROM()</text>
<text text-anchor="start" x="208" y="-894.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Build()</text>
<text text-anchor="start" x="208" y="-883.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ProjectROM()</text>
<text text-anchor="start" x="208" y="-872.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveROM()</text>
<text text-anchor="start" x="208" y="-861.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDxAndUpdateXBase()</text>
<text text-anchor="start" x="208" y="-850.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFixedDofsROMBasisToZero()</text>
<text text-anchor="start" x="208" y="-839.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExtractDofSet()</text>
<text text-anchor="start" x="208" y="-828.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SortAndRemoveDuplicateDofs()</text>
<text text-anchor="start" x="208" y="-817.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResizeIfNeeded()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M310.5,-800.35C310.5,-791.08 310.5,-781.81 310.5,-772.56"/>
<polygon fill="none" stroke="midnightblue" points="307,-800.4 310.5,-810.4 314,-800.4 307,-800.4"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d9/d26/class_kratos_1_1_residual_based_block_builder_and_solver.html" target="_top" xlink:title="Current class provides an implementation for standard builder and solving operations.">
<polygon fill="none" stroke="black" points="214,-1674.5 214,-2754.5 407,-2754.5 407,-1674.5 214,-1674.5"/>
<text text-anchor="start" x="222" y="-2742.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedBlock</text>
<text text-anchor="start" x="222" y="-2731.5" font-family="Helvetica,sans-Serif" font-size="10.00">BuilderAndSolver&lt; TSparseSpace,</text>
<text text-anchor="middle" x="310.5" y="-2720.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="214,-2713.5 407,-2713.5 "/>
<text text-anchor="start" x="222" y="-2701.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mT</text>
<text text-anchor="start" x="222" y="-2690.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mConstantVector</text>
<text text-anchor="start" x="222" y="-2679.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mSlaveIds</text>
<text text-anchor="start" x="222" y="-2668.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMasterIds</text>
<text text-anchor="start" x="222" y="-2657.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInactiveSlaveDofs</text>
<text text-anchor="start" x="222" y="-2646.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mScaleFactor</text>
<text text-anchor="start" x="222" y="-2635.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mScalingDiagonal</text>
<polyline fill="none" stroke="black" points="214,-2628.5 407,-2628.5 "/>
<text text-anchor="start" x="222" y="-2616.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="222" y="-2605.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="222" y="-2594.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="222" y="-2583.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="222" y="-2572.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="222" y="-2561.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="222" y="-2550.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="222" y="-2539.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="222" y="-2528.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="222" y="-2517.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConstraintRelationMatrix()</text>
<text text-anchor="start" x="222" y="-2506.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConstraintConstantVector()</text>
<text text-anchor="start" x="222" y="-2495.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetScaleFactor()</text>
<text text-anchor="start" x="222" y="-2484.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScaleFactor()</text>
<text text-anchor="start" x="222" y="-2473.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="222" y="-2462.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="222" y="-2451.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="222" y="-2440.5" font-family="Helvetica,sans-Serif" font-size="10.00"># BuildRHSNoDirichlet()</text>
<text text-anchor="start" x="222" y="-2429.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ConstructMasterSlaveConstraints</text>
<text text-anchor="start" x="222" y="-2418.5" font-family="Helvetica,sans-Serif" font-size="10.00">Structure()</text>
<text text-anchor="start" x="222" y="-2407.5" font-family="Helvetica,sans-Serif" font-size="10.00"># BuildMasterSlaveConstraints()</text>
<text text-anchor="start" x="222" y="-2396.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ConstructMatrixStructure()</text>
<text text-anchor="start" x="222" y="-2385.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Assemble()</text>
<text text-anchor="start" x="222" y="-2374.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssembleLHS()</text>
<text text-anchor="start" x="222" y="-2363.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssembleRHS()</text>
<text text-anchor="start" x="222" y="-2352.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssembleRowContribution()</text>
<text text-anchor="start" x="222" y="-2341.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="222" y="-2330.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="222" y="-2319.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="222" y="-2308.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="222" y="-2297.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="222" y="-2286.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="222" y="-2275.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="222" y="-2264.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="222" y="-2253.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="222" y="-2242.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="222" y="-2231.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="222" y="-2220.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 15 more...</text>
<text text-anchor="start" x="222" y="-2209.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mT</text>
<text text-anchor="start" x="222" y="-2198.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mConstantVector</text>
<text text-anchor="start" x="222" y="-2187.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSlaveIds</text>
<text text-anchor="start" x="222" y="-2176.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMasterIds</text>
<text text-anchor="start" x="222" y="-2165.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInactiveSlaveDofs</text>
<text text-anchor="start" x="222" y="-2154.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mScaleFactor</text>
<text text-anchor="start" x="222" y="-2143.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mScalingDiagonal</text>
<text text-anchor="start" x="222" y="-2132.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="222" y="-2121.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="222" y="-2110.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="222" y="-2099.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="222" y="-2088.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="222" y="-2077.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="222" y="-2066.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="222" y="-2055.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="222" y="-2044.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="222" y="-2033.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Build()</text>
<text text-anchor="start" x="222" y="-2022.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildLHS()</text>
<text text-anchor="start" x="222" y="-2011.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildLHS_CompleteOnFreeRows()</text>
<text text-anchor="start" x="222" y="-2000.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemSolve()</text>
<text text-anchor="start" x="222" y="-1989.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemSolveWithPhysics()</text>
<text text-anchor="start" x="222" y="-1978.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InternalSystemSolveWithPhysics()</text>
<text text-anchor="start" x="222" y="-1967.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndSolve()</text>
<text text-anchor="start" x="222" y="-1956.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndSolveLinearizedOn</text>
<text text-anchor="start" x="222" y="-1945.5" font-family="Helvetica,sans-Serif" font-size="10.00">PreviousIteration()</text>
<text text-anchor="start" x="222" y="-1934.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHSAndSolve()</text>
<text text-anchor="start" x="222" y="-1923.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHS()</text>
<text text-anchor="start" x="222" y="-1912.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 11 more...</text>
<text text-anchor="start" x="222" y="-1901.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConstraintRelationMatrix()</text>
<text text-anchor="start" x="222" y="-1890.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConstraintConstantVector()</text>
<text text-anchor="start" x="222" y="-1879.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetScaleFactor()</text>
<text text-anchor="start" x="222" y="-1868.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScaleFactor()</text>
<text text-anchor="start" x="222" y="-1857.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="222" y="-1846.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="222" y="-1835.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="222" y="-1824.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHSNoDirichlet()</text>
<text text-anchor="start" x="222" y="-1813.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstructMasterSlaveConstraints</text>
<text text-anchor="start" x="222" y="-1802.5" font-family="Helvetica,sans-Serif" font-size="10.00">Structure()</text>
<text text-anchor="start" x="222" y="-1791.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildMasterSlaveConstraints()</text>
<text text-anchor="start" x="222" y="-1780.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstructMatrixStructure()</text>
<text text-anchor="start" x="222" y="-1769.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Assemble()</text>
<text text-anchor="start" x="222" y="-1758.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleLHS()</text>
<text text-anchor="start" x="222" y="-1747.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleRHS()</text>
<text text-anchor="start" x="222" y="-1736.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleRowContribution()</text>
<text text-anchor="start" x="222" y="-1725.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="222" y="-1714.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddUnique()</text>
<text text-anchor="start" x="222" y="-1703.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CreatePartition()</text>
<text text-anchor="start" x="222" y="-1692.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ForwardFind()</text>
<text text-anchor="start" x="222" y="-1681.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BackwardFind()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M310.5,-1664.22C310.5,-1651.64 310.5,-1639.1 310.5,-1626.64"/>
<polygon fill="none" stroke="midnightblue" points="307,-1664.32 310.5,-1674.32 314,-1664.32 307,-1664.32"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../d2/d88/class_kratos_1_1_builder_and_solver.html" target="_top" xlink:title="Current class provides an implementation for the base builder and solving operations.">
<polygon fill="none" stroke="black" points="99.5,-2868.5 99.5,-3629.5 281.5,-3629.5 281.5,-2868.5 99.5,-2868.5"/>
<text text-anchor="start" x="107.5" y="-3617.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::BuilderAndSolver</text>
<text text-anchor="start" x="107.5" y="-3606.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="190.5" y="-3595.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="99.5,-3588.5 281.5,-3588.5 "/>
<text text-anchor="start" x="107.5" y="-3576.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpLinearSystemSolver</text>
<text text-anchor="start" x="107.5" y="-3565.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mReshapeMatrixFlag</text>
<text text-anchor="start" x="107.5" y="-3554.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mDofSetIsInitialized</text>
<text text-anchor="start" x="107.5" y="-3543.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCalculateReactionsFlag</text>
<text text-anchor="start" x="107.5" y="-3532.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEquationSystemSize</text>
<text text-anchor="start" x="107.5" y="-3521.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<text text-anchor="start" x="107.5" y="-3510.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpReactionsVector</text>
<polyline fill="none" stroke="black" points="99.5,-3503.5 281.5,-3503.5 "/>
<text text-anchor="start" x="107.5" y="-3491.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-3480.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-3469.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-3458.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-3447.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="107.5" y="-3436.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="107.5" y="-3425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetEchoLevel()</text>
<text text-anchor="start" x="107.5" y="-3414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConstraintRelationMatrix()</text>
<text text-anchor="start" x="107.5" y="-3403.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConstraintConstantVector()</text>
<text text-anchor="start" x="107.5" y="-3392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="107.5" y="-3381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="107.5" y="-3370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="107.5" y="-3359.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ValidateAndAssignParameters()</text>
<text text-anchor="start" x="107.5" y="-3348.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="107.5" y="-3337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="107.5" y="-3326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="107.5" y="-3315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="107.5" y="-3304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="107.5" y="-3293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="107.5" y="-3282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="107.5" y="-3271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="107.5" y="-3260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="107.5" y="-3249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="107.5" y="-3238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="107.5" y="-3227.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="107.5" y="-3216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpLinearSystemSolver</text>
<text text-anchor="start" x="107.5" y="-3205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReshapeMatrixFlag</text>
<text text-anchor="start" x="107.5" y="-3194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mDofSetIsInitialized</text>
<text text-anchor="start" x="107.5" y="-3183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="107.5" y="-3172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEquationSystemSize</text>
<text text-anchor="start" x="107.5" y="-3161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="107.5" y="-3150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpReactionsVector</text>
<text text-anchor="start" x="107.5" y="-3139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-3128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-3117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-3106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-3095.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="107.5" y="-3084.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetCalculateReactionsFlag()</text>
<text text-anchor="start" x="107.5" y="-3073.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="107.5" y="-3062.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDofSetIsInitializedFlag()</text>
<text text-anchor="start" x="107.5" y="-3051.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDofSetIsInitializedFlag()</text>
<text text-anchor="start" x="107.5" y="-3040.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetReshapeMatrixFlag()</text>
<text text-anchor="start" x="107.5" y="-3029.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetReshapeMatrixFlag()</text>
<text text-anchor="start" x="107.5" y="-3018.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetEquationSystemSize()</text>
<text text-anchor="start" x="107.5" y="-3007.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetLinearSystemSolver()</text>
<text text-anchor="start" x="107.5" y="-2996.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetLinearSystemSolver()</text>
<text text-anchor="start" x="107.5" y="-2985.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildLHS()</text>
<text text-anchor="start" x="107.5" y="-2974.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 25 more...</text>
<text text-anchor="start" x="107.5" y="-2963.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="107.5" y="-2952.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetEchoLevel()</text>
<text text-anchor="start" x="107.5" y="-2941.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConstraintRelationMatrix()</text>
<text text-anchor="start" x="107.5" y="-2930.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConstraintConstantVector()</text>
<text text-anchor="start" x="107.5" y="-2919.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="107.5" y="-2908.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="107.5" y="-2897.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="107.5" y="-2886.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ValidateAndAssignParameters()</text>
<text text-anchor="start" x="107.5" y="-2875.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M235.79,-2858.28C239.74,-2824.35 243.77,-2789.66 247.82,-2754.82"/>
<polygon fill="none" stroke="midnightblue" points="232.31,-2857.96 234.63,-2868.3 239.26,-2858.77 232.31,-2857.96"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../db/dc6/class_kratos_1_1_pointer_vector_set.html" target="_top" xlink:title="A sorted associative container similar to an STL set, but uses a vector to store pointers to its data...">
<polygon fill="none" stroke="black" points="0,-3732.5 0,-4856.5 175,-4856.5 175,-3732.5 0,-3732.5"/>
<text text-anchor="start" x="8" y="-4844.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::PointerVectorSet</text>
<text text-anchor="start" x="8" y="-4833.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TDataType, TGetKeyType,</text>
<text text-anchor="start" x="8" y="-4822.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TCompareType, TEqualType,</text>
<text text-anchor="middle" x="87.5" y="-4811.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TPointerType, TContainerType &gt;</text>
<polyline fill="none" stroke="black" points="0,-4804.5 175,-4804.5 "/>
<text text-anchor="middle" x="87.5" y="-4792.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-4785.5 175,-4785.5 "/>
<text text-anchor="start" x="8" y="-4773.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-4762.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-4751.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-4740.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-4729.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-4718.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-4707.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="8" y="-4696.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="8" y="-4685.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator==()</text>
<text text-anchor="start" x="8" y="-4674.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator&lt;()</text>
<text text-anchor="start" x="8" y="-4663.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ begin()</text>
<text text-anchor="start" x="8" y="-4652.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ begin()</text>
<text text-anchor="start" x="8" y="-4641.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cbegin()</text>
<text text-anchor="start" x="8" y="-4630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cbegin()</text>
<text text-anchor="start" x="8" y="-4619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ end()</text>
<text text-anchor="start" x="8" y="-4608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ end()</text>
<text text-anchor="start" x="8" y="-4597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cend()</text>
<text text-anchor="start" x="8" y="-4586.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cend()</text>
<text text-anchor="start" x="8" y="-4575.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ rbegin()</text>
<text text-anchor="start" x="8" y="-4564.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ rbegin()</text>
<text text-anchor="start" x="8" y="-4553.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 36 more...</text>
<text text-anchor="start" x="8" y="-4542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetContainer()</text>
<text text-anchor="start" x="8" y="-4531.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetContainer()</text>
<text text-anchor="start" x="8" y="-4520.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMaxBufferSize()</text>
<text text-anchor="start" x="8" y="-4509.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetMaxBufferSize()</text>
<text text-anchor="start" x="8" y="-4498.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSortedPartSize()</text>
<text text-anchor="start" x="8" y="-4487.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetSortedPartSize()</text>
<text text-anchor="start" x="8" y="-4476.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ empty()</text>
<text text-anchor="start" x="8" y="-4465.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsSorted()</text>
<text text-anchor="start" x="8" y="-4454.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-4443.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-4432.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-4421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* key_type</text>
<text text-anchor="start" x="8" y="-4410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* data_type</text>
<text text-anchor="start" x="8" y="-4399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* value_type</text>
<text text-anchor="start" x="8" y="-4388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* key_compare</text>
<text text-anchor="start" x="8" y="-4377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pointer</text>
<text text-anchor="start" x="8" y="-4366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* reference</text>
<text text-anchor="start" x="8" y="-4355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reference</text>
<text text-anchor="start" x="8" y="-4344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ContainerType</text>
<text text-anchor="start" x="8" y="-4333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-4322.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-4311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* iterator</text>
<text text-anchor="start" x="8" y="-4300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_iterator</text>
<text text-anchor="start" x="8" y="-4289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* reverse_iterator</text>
<text text-anchor="start" x="8" y="-4278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reverse_iterator</text>
<text text-anchor="start" x="8" y="-4267.5" font-family="Helvetica,sans-Serif" font-size="10.00">* size_type</text>
<text text-anchor="start" x="8" y="-4256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_iterator</text>
<text text-anchor="start" x="8" y="-4245.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_const_iterator</text>
<text text-anchor="start" x="8" y="-4234.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_reverse_iterator</text>
<text text-anchor="start" x="8" y="-4223.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_const_reverse_iterator</text>
<text text-anchor="start" x="8" y="-4212.5" font-family="Helvetica,sans-Serif" font-size="10.00">* difference_type</text>
<text text-anchor="start" x="8" y="-4201.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mData</text>
<text text-anchor="start" x="8" y="-4190.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSortedPartSize</text>
<text text-anchor="start" x="8" y="-4179.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxBufferSize</text>
<text text-anchor="start" x="8" y="-4168.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="8" y="-4157.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="8" y="-4146.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="8" y="-4135.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-4124.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-4113.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-4102.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-4091.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-4080.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-4069.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="8" y="-4058.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="8" y="-4047.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==()</text>
<text text-anchor="start" x="8" y="-4036.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&lt;()</text>
<text text-anchor="start" x="8" y="-4025.5" font-family="Helvetica,sans-Serif" font-size="10.00">* begin()</text>
<text text-anchor="start" x="8" y="-4014.5" font-family="Helvetica,sans-Serif" font-size="10.00">* begin()</text>
<text text-anchor="start" x="8" y="-4003.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cbegin()</text>
<text text-anchor="start" x="8" y="-3992.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cbegin()</text>
<text text-anchor="start" x="8" y="-3981.5" font-family="Helvetica,sans-Serif" font-size="10.00">* end()</text>
<text text-anchor="start" x="8" y="-3970.5" font-family="Helvetica,sans-Serif" font-size="10.00">* end()</text>
<text text-anchor="start" x="8" y="-3959.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cend()</text>
<text text-anchor="start" x="8" y="-3948.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cend()</text>
<text text-anchor="start" x="8" y="-3937.5" font-family="Helvetica,sans-Serif" font-size="10.00">* rbegin()</text>
<text text-anchor="start" x="8" y="-3926.5" font-family="Helvetica,sans-Serif" font-size="10.00">* rbegin()</text>
<text text-anchor="start" x="8" y="-3915.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 36 more...</text>
<text text-anchor="start" x="8" y="-3904.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetContainer()</text>
<text text-anchor="start" x="8" y="-3893.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetContainer()</text>
<text text-anchor="start" x="8" y="-3882.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMaxBufferSize()</text>
<text text-anchor="start" x="8" y="-3871.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetMaxBufferSize()</text>
<text text-anchor="start" x="8" y="-3860.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSortedPartSize()</text>
<text text-anchor="start" x="8" y="-3849.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSortedPartSize()</text>
<text text-anchor="start" x="8" y="-3838.5" font-family="Helvetica,sans-Serif" font-size="10.00">* empty()</text>
<text text-anchor="start" x="8" y="-3827.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsSorted()</text>
<text text-anchor="start" x="8" y="-3816.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-3805.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-3794.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-3783.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SortedInsert()</text>
<text text-anchor="start" x="8" y="-3772.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyOf()</text>
<text text-anchor="start" x="8" y="-3761.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyOf()</text>
<text text-anchor="start" x="8" y="-3750.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyOf()</text>
<text text-anchor="start" x="8" y="-3739.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetReference()</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge9" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M75.74,-3732.5C73.22,-3455.55 75.04,-3116.55 90.5,-2813 116.38,-2304.91 121.22,-2175.89 204.5,-1674 206.44,-1662.31 208.5,-1650.47 210.67,-1638.54"/>
<polygon fill="none" stroke="#404040" points="210.7,-1638.38 207.85,-1631.76 212.87,-1626.58 215.72,-1633.21 210.7,-1638.38"/>
<text text-anchor="middle" x="150" y="-2787" font-family="Helvetica,sans-Serif" font-size="10.00"> #mSelectedConditions</text>
<text text-anchor="middle" x="150" y="-2776" font-family="Helvetica,sans-Serif" font-size="10.00">#mSelectedElements</text>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M142.88,-3732.42C145.89,-3701.98 148.87,-3671.73 151.8,-3642.06"/>
<polygon fill="none" stroke="#404040" points="151.83,-3641.78 148.44,-3635.42 153.01,-3629.84 156.4,-3636.2 151.83,-3641.78"/>
<text text-anchor="middle" x="173" y="-3706" font-family="Helvetica,sans-Serif" font-size="10.00"> #mDofSet</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title="Forward declaration.">
<polygon fill="none" stroke="black" points="300,-2813.5 300,-3684.5 449,-3684.5 449,-2813.5 300,-2813.5"/>
<text text-anchor="middle" x="374.5" y="-3672.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="300,-3665.5 449,-3665.5 "/>
<text text-anchor="middle" x="374.5" y="-3653.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="300,-3646.5 449,-3646.5 "/>
<text text-anchor="start" x="308" y="-3634.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="308" y="-3623.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="308" y="-3612.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="308" y="-3601.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="308" y="-3590.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="308" y="-3579.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="308" y="-3568.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="308" y="-3557.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="308" y="-3546.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="308" y="-3535.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="308" y="-3524.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="308" y="-3513.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="308" y="-3502.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="308" y="-3491.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="308" y="-3480.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="308" y="-3469.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="308" y="-3458.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="308" y="-3447.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="308" y="-3436.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="308" y="-3425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="308" y="-3414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="308" y="-3403.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="308" y="-3392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="308" y="-3381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="308" y="-3370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="308" y="-3359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="308" y="-3348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="308" y="-3337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="308" y="-3326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="308" y="-3315.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="308" y="-3304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="308" y="-3293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="308" y="-3282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="308" y="-3271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="308" y="-3260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="308" y="-3249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="308" y="-3238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="308" y="-3227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="308" y="-3216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="308" y="-3205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="308" y="-3194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="308" y="-3183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="308" y="-3172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="308" y="-3161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="308" y="-3150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="308" y="-3139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="308" y="-3128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="308" y="-3117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="308" y="-3106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="308" y="-3095.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="308" y="-3084.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="308" y="-3073.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="308" y="-3062.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="308" y="-3051.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="308" y="-3040.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="308" y="-3029.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="308" y="-3018.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="308" y="-3007.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="308" y="-2996.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="308" y="-2985.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="308" y="-2974.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="308" y="-2963.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="308" y="-2952.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="308" y="-2941.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="308" y="-2930.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="308" y="-2919.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="308" y="-2908.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="308" y="-2897.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="308" y="-2886.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="308" y="-2875.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="308" y="-2864.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="308" y="-2853.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="308" y="-2842.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="308" y="-2831.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="308" y="-2820.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node3 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node3</title>
<path fill="none" stroke="#404040" d="M347.57,-2813.49C346.62,-2798.16 345.66,-2782.73 344.7,-2767.25"/>
<polygon fill="none" stroke="#404040" points="344.67,-2766.81 340.31,-2761.07 343.93,-2754.83 348.29,-2760.57 344.67,-2766.81"/>
<text text-anchor="middle" x="376" y="-2781.5" font-family="Helvetica,sans-Serif" font-size="10.00"> #mOptions</text>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="../../d9/dbb/class_kratos_1_1_internals_1_1_matrix.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="465.5,-2120 465.5,-2309 633.5,-2309 633.5,-2120 465.5,-2120"/>
<text text-anchor="start" x="473.5" y="-2297" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Internals::</text>
<text text-anchor="start" x="473.5" y="-2286" font-family="Helvetica,sans-Serif" font-size="10.00">Matrix&lt; double, AMatrix</text>
<text text-anchor="middle" x="549.5" y="-2275" font-family="Helvetica,sans-Serif" font-size="10.00">::dynamic, AMatrix::dynamic &gt;</text>
<polyline fill="none" stroke="black" points="465.5,-2268 633.5,-2268 "/>
<text text-anchor="middle" x="549.5" y="-2256" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="465.5,-2249 633.5,-2249 "/>
<text text-anchor="start" x="473.5" y="-2237" font-family="Helvetica,sans-Serif" font-size="10.00">+ Matrix()</text>
<text text-anchor="start" x="473.5" y="-2226" font-family="Helvetica,sans-Serif" font-size="10.00">+ Matrix()</text>
<text text-anchor="start" x="473.5" y="-2215" font-family="Helvetica,sans-Serif" font-size="10.00">+ Matrix()</text>
<text text-anchor="start" x="473.5" y="-2204" font-family="Helvetica,sans-Serif" font-size="10.00">+ Matrix()</text>
<text text-anchor="start" x="473.5" y="-2193" font-family="Helvetica,sans-Serif" font-size="10.00">+ Matrix()</text>
<text text-anchor="start" x="473.5" y="-2182" font-family="Helvetica,sans-Serif" font-size="10.00">+ Matrix()</text>
<text text-anchor="start" x="473.5" y="-2171" font-family="Helvetica,sans-Serif" font-size="10.00">+ Matrix()</text>
<text text-anchor="start" x="473.5" y="-2160" font-family="Helvetica,sans-Serif" font-size="10.00">+ Matrix()</text>
<text text-anchor="start" x="473.5" y="-2149" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="473.5" y="-2138" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="473.5" y="-2127" font-family="Helvetica,sans-Serif" font-size="10.00">and 30 more...</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node2 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M527.02,-2119.99C500.37,-2009.15 454.15,-1816.93 411.24,-1638.48"/>
<polygon fill="none" stroke="#404040" points="411.22,-1638.41 405.93,-1633.52 408.42,-1626.75 413.71,-1631.65 411.22,-1638.41"/>
<text text-anchor="middle" x="448.5" y="-1648" font-family="Helvetica,sans-Serif" font-size="10.00"> #mPhiGlobal</text>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:title=" ">
<polygon fill="none" stroke="#bfbfbf" points="467,-3204 467,-3294 632,-3294 632,-3204 467,-3204"/>
<text text-anchor="start" x="475" y="-3282" font-family="Helvetica,sans-Serif" font-size="10.00">AMatrix::MatrixExpression</text>
<text text-anchor="start" x="475" y="-3271" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; Matrix&lt; double, TSize1,</text>
<text text-anchor="start" x="475" y="-3260" font-family="Helvetica,sans-Serif" font-size="10.00"> TSize2 &gt;, AMatrix::row_major</text>
<text text-anchor="middle" x="549.5" y="-3249" font-family="Helvetica,sans-Serif" font-size="10.00">_access &gt;</text>
<polyline fill="none" stroke="#bfbfbf" points="467,-3242 632,-3242 "/>
<text text-anchor="middle" x="549.5" y="-3230" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#bfbfbf" points="467,-3223 632,-3223 "/>
<text text-anchor="middle" x="549.5" y="-3211" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node7 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node7</title>
<path fill="none" stroke="midnightblue" d="M549.5,-3193.96C549.5,-3027.39 549.5,-2520.45 549.5,-2309.33"/>
<polygon fill="none" stroke="midnightblue" points="546,-3193.97 549.5,-3203.97 553,-3193.97 546,-3193.97"/>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:title=" ">
<polygon fill="none" stroke="#bfbfbf" points="650,-3215 650,-3283 799,-3283 799,-3215 650,-3215"/>
<text text-anchor="start" x="658" y="-3271" font-family="Helvetica,sans-Serif" font-size="10.00">AMatrix::MatrixStorage</text>
<text text-anchor="middle" x="724.5" y="-3260" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; double, TSize1, TSize2 &gt;</text>
<polyline fill="none" stroke="#bfbfbf" points="650,-3253 799,-3253 "/>
<text text-anchor="middle" x="724.5" y="-3241" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#bfbfbf" points="650,-3234 799,-3234 "/>
<text text-anchor="middle" x="724.5" y="-3222" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node9&#45;&gt;Node7 -->
<g id="edge8" class="edge">
<title>Node9&#45;&gt;Node7</title>
<path fill="none" stroke="midnightblue" d="M717.17,-3204.78C691.03,-3050.53 601.93,-2524.81 565.36,-2309.06"/>
<polygon fill="none" stroke="midnightblue" points="713.75,-3205.54 718.88,-3214.82 720.66,-3204.37 713.75,-3205.54"/>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_ann_prom_least_squares_petrov_galerkin_r_o_m_builder_and_solver__coll__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
