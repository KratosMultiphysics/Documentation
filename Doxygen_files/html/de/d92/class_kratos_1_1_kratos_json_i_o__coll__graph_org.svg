<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::KratosJsonIO Pages: 1 -->
<svg width="346pt" height="1458pt"
 viewBox="0.00 0.00 345.50 1458.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1454)">
<title>Kratos::KratosJsonIO</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="An IO class for reading and writing a modelpart.">
<polygon fill="#bfbfbf" stroke="black" points="77,-0.5 77,-530.5 271,-530.5 271,-0.5 77,-0.5"/>
<text text-anchor="middle" x="174" y="-518.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::KratosJsonIO</text>
<polyline fill="none" stroke="black" points="77,-511.5 271,-511.5 "/>
<text text-anchor="start" x="85" y="-499.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mFilename</text>
<polyline fill="none" stroke="black" points="77,-492.5 271,-492.5 "/>
<text text-anchor="start" x="85" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KratosJsonIO()</text>
<text text-anchor="start" x="85" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ReadModelPart()</text>
<text text-anchor="start" x="85" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~KratosJsonIO()</text>
<text text-anchor="start" x="85" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="85" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="85" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="85" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FillModelPart()</text>
<text text-anchor="start" x="85" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00"># EnforceConsecutiveOrdering()</text>
<text text-anchor="start" x="85" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckAndAssignNodalValue()</text>
<text text-anchor="start" x="85" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckAndAssignNodalComponent</text>
<text text-anchor="start" x="85" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">Value()</text>
<text text-anchor="start" x="85" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckAndAssignNodalValue</text>
<text text-anchor="start" x="85" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ErrorIfFixed()</text>
<text text-anchor="start" x="85" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckAndAssignPropertyValue()</text>
<text text-anchor="start" x="85" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00"># operator=()</text>
<text text-anchor="start" x="85" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00"># KratosJsonIO()</text>
<text text-anchor="start" x="85" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="85" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="85" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MeshType</text>
<text text-anchor="start" x="85" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodesContainerType</text>
<text text-anchor="start" x="85" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PropertiesContainerType</text>
<text text-anchor="start" x="85" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementsContainerType</text>
<text text-anchor="start" x="85" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConditionsContainerType</text>
<text text-anchor="start" x="85" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConnectivitiesContainerType</text>
<text text-anchor="start" x="85" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="85" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="85" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="85" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFilename</text>
<text text-anchor="start" x="85" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KratosJsonIO()</text>
<text text-anchor="start" x="85" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadModelPart()</text>
<text text-anchor="start" x="85" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~KratosJsonIO()</text>
<text text-anchor="start" x="85" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="85" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="85" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="85" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FillModelPart()</text>
<text text-anchor="start" x="85" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EnforceConsecutiveOrdering()</text>
<text text-anchor="start" x="85" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckAndAssignNodalValue()</text>
<text text-anchor="start" x="85" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckAndAssignNodalComponent</text>
<text text-anchor="start" x="85" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">Value()</text>
<text text-anchor="start" x="85" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckAndAssignNodalValue</text>
<text text-anchor="start" x="85" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ErrorIfFixed()</text>
<text text-anchor="start" x="85" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckAndAssignPropertyValue()</text>
<text text-anchor="start" x="85" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="85" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KratosJsonIO()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d2/d4d/class_kratos_1_1_i_o.html" target="_top" xlink:title="IO provides different implementation of input output procedures which can be used to read and write w...">
<polygon fill="none" stroke="black" points="0,-732.5 0,-1295.5 170,-1295.5 170,-732.5 0,-732.5"/>
<text text-anchor="middle" x="85" y="-1283.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::IO</text>
<polyline fill="none" stroke="black" points="0,-1276.5 170,-1276.5 "/>
<text text-anchor="middle" x="85" y="-1264.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-1257.5 170,-1257.5 "/>
<text text-anchor="start" x="8" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IO()</text>
<text text-anchor="start" x="8" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~IO()</text>
<text text-anchor="start" x="8" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IO()</text>
<text text-anchor="start" x="8" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ReadNode()</text>
<text text-anchor="start" x="8" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ReadNodes()</text>
<text text-anchor="start" x="8" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ReadNodesNumber()</text>
<text text-anchor="start" x="8" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ WriteNodes()</text>
<text text-anchor="start" x="8" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ReadProperties()</text>
<text text-anchor="start" x="8" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ReadProperties()</text>
<text text-anchor="start" x="8" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ WriteProperties()</text>
<text text-anchor="start" x="8" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ WriteProperties()</text>
<text text-anchor="start" x="8" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ReadGeometry()</text>
<text text-anchor="start" x="8" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ReadGeometries()</text>
<text text-anchor="start" x="8" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 27 more...</text>
<text text-anchor="start" x="8" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="8" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GeometryType</text>
<text text-anchor="start" x="8" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MeshType</text>
<text text-anchor="start" x="8" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodesContainerType</text>
<text text-anchor="start" x="8" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PropertiesContainerType</text>
<text text-anchor="start" x="8" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GeometryContainerType</text>
<text text-anchor="start" x="8" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementsContainerType</text>
<text text-anchor="start" x="8" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConditionsContainerType</text>
<text text-anchor="start" x="8" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConnectivitiesContainerType</text>
<text text-anchor="start" x="8" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PartitionIndicesContainerType</text>
<text text-anchor="start" x="8" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 11 more...</text>
<text text-anchor="start" x="8" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IO()</text>
<text text-anchor="start" x="8" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~IO()</text>
<text text-anchor="start" x="8" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IO()</text>
<text text-anchor="start" x="8" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadNode()</text>
<text text-anchor="start" x="8" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadNodes()</text>
<text text-anchor="start" x="8" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadNodesNumber()</text>
<text text-anchor="start" x="8" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">* WriteNodes()</text>
<text text-anchor="start" x="8" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadProperties()</text>
<text text-anchor="start" x="8" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadProperties()</text>
<text text-anchor="start" x="8" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">* WriteProperties()</text>
<text text-anchor="start" x="8" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">* WriteProperties()</text>
<text text-anchor="start" x="8" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadGeometry()</text>
<text text-anchor="start" x="8" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadGeometries()</text>
<text text-anchor="start" x="8" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 27 more...</text>
<text text-anchor="start" x="8" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M119.66,-722.27C127.19,-659.09 135.12,-592.59 142.52,-530.51"/>
<polygon fill="none" stroke="midnightblue" points="116.17,-722.03 118.46,-732.38 123.12,-722.86 116.17,-722.03"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="188.5,-578.5 188.5,-1449.5 337.5,-1449.5 337.5,-578.5 188.5,-578.5"/>
<text text-anchor="middle" x="263" y="-1437.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="188.5,-1430.5 337.5,-1430.5 "/>
<text text-anchor="middle" x="263" y="-1418.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="188.5,-1411.5 337.5,-1411.5 "/>
<text text-anchor="start" x="196.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="196.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="196.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="196.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="196.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="196.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="196.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="196.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="196.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="196.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="196.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="196.5" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="196.5" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="196.5" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="196.5" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="196.5" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="196.5" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="196.5" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="196.5" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="196.5" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="196.5" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="196.5" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="196.5" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="196.5" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="196.5" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="196.5" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="196.5" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="196.5" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="196.5" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="196.5" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="196.5" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="196.5" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="196.5" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="196.5" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="196.5" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="196.5" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="196.5" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="196.5" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="196.5" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="196.5" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="196.5" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="196.5" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="196.5" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="196.5" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="196.5" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="196.5" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="196.5" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="196.5" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="196.5" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="196.5" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="196.5" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="196.5" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="196.5" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="196.5" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="196.5" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="196.5" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="196.5" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="196.5" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="196.5" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="196.5" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="196.5" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="196.5" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="196.5" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="196.5" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="196.5" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="196.5" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="196.5" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="196.5" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="196.5" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="196.5" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="196.5" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="196.5" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="196.5" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="196.5" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="196.5" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M211.2,-578.49C209.76,-566.47 208.34,-554.55 206.94,-542.76"/>
<polygon fill="none" stroke="#404040" points="206.9,-542.44 202.22,-536.96 205.48,-530.53 210.16,-536.01 206.9,-542.44"/>
<text text-anchor="middle" x="237.5" y="-552" font-family="Helvetica,sans-Serif" font-size="10.00"> #mOptions</text>
</g>
</g>
</svg>
