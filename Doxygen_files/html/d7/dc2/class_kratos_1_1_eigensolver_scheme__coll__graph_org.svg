<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::EigensolverScheme&lt; TSparseSpace, TDenseSpace &gt; Pages: 1 -->
<svg width="196pt" height="2103pt"
 viewBox="0.00 0.00 196.00 2103.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2099)">
<title>Kratos::EigensolverScheme&lt; TSparseSpace, TDenseSpace &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="An adapter scheme for obtaining mass and stiffness matrices for dynamic eigenvalue problems.">
<polygon fill="#bfbfbf" stroke="black" points="2.5,-0.5 2.5,-321.5 185.5,-321.5 185.5,-0.5 2.5,-0.5"/>
<text text-anchor="start" x="10.5" y="-309.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::EigensolverScheme</text>
<text text-anchor="middle" x="94" y="-298.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace &gt;</text>
<polyline fill="none" stroke="black" points="2.5,-291.5 185.5,-291.5 "/>
<text text-anchor="middle" x="94" y="-279.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="2.5,-272.5 185.5,-272.5 "/>
<text text-anchor="start" x="10.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EigensolverScheme()</text>
<text text-anchor="start" x="10.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EigensolverScheme()</text>
<text text-anchor="start" x="10.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~EigensolverScheme()</text>
<text text-anchor="start" x="10.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateSystemContributions()</text>
<text text-anchor="start" x="10.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Calculate_LHS_Contribution()</text>
<text text-anchor="start" x="10.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Condition_CalculateSystem</text>
<text text-anchor="start" x="10.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">Contributions()</text>
<text text-anchor="start" x="10.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Condition_Calculate</text>
<text text-anchor="start" x="10.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">_LHS_Contribution()</text>
<text text-anchor="start" x="10.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="10.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BasePointerType</text>
<text text-anchor="start" x="10.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="10.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="10.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="10.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="10.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EigensolverScheme()</text>
<text text-anchor="start" x="10.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EigensolverScheme()</text>
<text text-anchor="start" x="10.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~EigensolverScheme()</text>
<text text-anchor="start" x="10.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateSystemContributions()</text>
<text text-anchor="start" x="10.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Calculate_LHS_Contribution()</text>
<text text-anchor="start" x="10.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Condition_CalculateSystem</text>
<text text-anchor="start" x="10.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">Contributions()</text>
<text text-anchor="start" x="10.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Condition_Calculate</text>
<text text-anchor="start" x="10.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">_LHS_Contribution()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d9/d92/class_kratos_1_1_solution_scheme.html" target="_top" xlink:title="Solution scheme base class.">
<polygon fill="none" stroke="black" points="0,-359.5 0,-1175.5 188,-1175.5 188,-359.5 0,-359.5"/>
<text text-anchor="start" x="8" y="-1163.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::SolutionScheme</text>
<text text-anchor="middle" x="94" y="-1152.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace &gt;</text>
<polyline fill="none" stroke="black" points="0,-1145.5 188,-1145.5 "/>
<text text-anchor="start" x="8" y="-1133.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mTimeVectorIntegrationMethods</text>
<text text-anchor="start" x="8" y="-1122.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mTimeScalarIntegrationMethods</text>
<text text-anchor="start" x="8" y="-1111.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mProcesses</text>
<polyline fill="none" stroke="black" points="0,-1104.5 188,-1104.5 "/>
<text text-anchor="start" x="8" y="-1092.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionScheme()</text>
<text text-anchor="start" x="8" y="-1081.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionScheme()</text>
<text text-anchor="start" x="8" y="-1070.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionScheme()</text>
<text text-anchor="start" x="8" y="-1059.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionScheme()</text>
<text text-anchor="start" x="8" y="-1048.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionScheme()</text>
<text text-anchor="start" x="8" y="-1037.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionScheme()</text>
<text text-anchor="start" x="8" y="-1026.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionScheme()</text>
<text text-anchor="start" x="8" y="-1015.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionScheme()</text>
<text text-anchor="start" x="8" y="-1004.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionScheme()</text>
<text text-anchor="start" x="8" y="-993.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="8" y="-982.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SolutionScheme()</text>
<text text-anchor="start" x="8" y="-971.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetOptions()</text>
<text text-anchor="start" x="8" y="-960.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetOptions()</text>
<text text-anchor="start" x="8" y="-949.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetProcess()</text>
<text text-anchor="start" x="8" y="-938.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetProcessVector()</text>
<text text-anchor="start" x="8" y="-927.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeElements()</text>
<text text-anchor="start" x="8" y="-916.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeConditions()</text>
<text text-anchor="start" x="8" y="-905.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeNonLinearIteration()</text>
<text text-anchor="start" x="8" y="-894.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeNonLinearIteration()</text>
<text text-anchor="start" x="8" y="-883.5" font-family="Helvetica,sans-Serif" font-size="10.00"># IntegrationMethodUpdate()</text>
<text text-anchor="start" x="8" y="-872.5" font-family="Helvetica,sans-Serif" font-size="10.00"># IntegrationMethodPredict()</text>
<text text-anchor="start" x="8" y="-861.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionSchemeType</text>
<text text-anchor="start" x="8" y="-850.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionSchemePointerType</text>
<text text-anchor="start" x="8" y="-839.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="8" y="-828.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="8" y="-817.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixType</text>
<text text-anchor="start" x="8" y="-806.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="8" y="-795.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="8" y="-784.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="8" y="-773.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodesContainerType</text>
<text text-anchor="start" x="8" y="-762.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementsContainerType</text>
<text text-anchor="start" x="8" y="-751.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 14 more...</text>
<text text-anchor="start" x="8" y="-740.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mTimeVectorIntegrationMethods</text>
<text text-anchor="start" x="8" y="-729.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mTimeScalarIntegrationMethods</text>
<text text-anchor="start" x="8" y="-718.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mProcesses</text>
<text text-anchor="start" x="8" y="-707.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionScheme()</text>
<text text-anchor="start" x="8" y="-696.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionScheme()</text>
<text text-anchor="start" x="8" y="-685.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionScheme()</text>
<text text-anchor="start" x="8" y="-674.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionScheme()</text>
<text text-anchor="start" x="8" y="-663.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionScheme()</text>
<text text-anchor="start" x="8" y="-652.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionScheme()</text>
<text text-anchor="start" x="8" y="-641.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionScheme()</text>
<text text-anchor="start" x="8" y="-630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionScheme()</text>
<text text-anchor="start" x="8" y="-619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionScheme()</text>
<text text-anchor="start" x="8" y="-608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="8" y="-597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~SolutionScheme()</text>
<text text-anchor="start" x="8" y="-586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefaultFlags()</text>
<text text-anchor="start" x="8" y="-575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="8" y="-564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeNonLinearIteration()</text>
<text text-anchor="start" x="8" y="-531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeNonLinearIteration()</text>
<text text-anchor="start" x="8" y="-520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Predict()</text>
<text text-anchor="start" x="8" y="-509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="8" y="-498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateDofs()</text>
<text text-anchor="start" x="8" y="-487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateVariables()</text>
<text text-anchor="start" x="8" y="-476.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 18 more...</text>
<text text-anchor="start" x="8" y="-465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetOptions()</text>
<text text-anchor="start" x="8" y="-454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetOptions()</text>
<text text-anchor="start" x="8" y="-443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetProcess()</text>
<text text-anchor="start" x="8" y="-432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetProcessVector()</text>
<text text-anchor="start" x="8" y="-421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeElements()</text>
<text text-anchor="start" x="8" y="-410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeConditions()</text>
<text text-anchor="start" x="8" y="-399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeNonLinearIteration()</text>
<text text-anchor="start" x="8" y="-388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeNonLinearIteration()</text>
<text text-anchor="start" x="8" y="-377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IntegrationMethodUpdate()</text>
<text text-anchor="start" x="8" y="-366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IntegrationMethodPredict()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M94,-348.99C94,-339.73 94,-330.64 94,-321.76"/>
<polygon fill="none" stroke="midnightblue" points="90.5,-349.1 94,-359.1 97.5,-349.1 90.5,-349.1"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="19.5,-1223.5 19.5,-2094.5 168.5,-2094.5 168.5,-1223.5 19.5,-1223.5"/>
<text text-anchor="middle" x="94" y="-2082.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="19.5,-2075.5 168.5,-2075.5 "/>
<text text-anchor="middle" x="94" y="-2063.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="19.5,-2056.5 168.5,-2056.5 "/>
<text text-anchor="start" x="27.5" y="-2044.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="27.5" y="-2033.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="27.5" y="-2022.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="27.5" y="-2011.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="27.5" y="-2000.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="27.5" y="-1989.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="27.5" y="-1978.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="27.5" y="-1967.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="27.5" y="-1956.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="27.5" y="-1945.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="27.5" y="-1934.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="27.5" y="-1923.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="27.5" y="-1912.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="27.5" y="-1901.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="27.5" y="-1890.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="27.5" y="-1879.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="27.5" y="-1868.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="27.5" y="-1857.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="27.5" y="-1846.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="27.5" y="-1835.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="27.5" y="-1824.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="27.5" y="-1813.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="27.5" y="-1802.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="27.5" y="-1791.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="27.5" y="-1780.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="27.5" y="-1769.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="27.5" y="-1758.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="27.5" y="-1747.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="27.5" y="-1736.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="27.5" y="-1725.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="27.5" y="-1714.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="27.5" y="-1703.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="27.5" y="-1692.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="27.5" y="-1681.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="27.5" y="-1670.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="27.5" y="-1659.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="27.5" y="-1648.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="27.5" y="-1637.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="27.5" y="-1626.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="27.5" y="-1615.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="27.5" y="-1604.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="27.5" y="-1593.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="27.5" y="-1582.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="27.5" y="-1571.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="27.5" y="-1560.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="27.5" y="-1549.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="27.5" y="-1538.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="27.5" y="-1527.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="27.5" y="-1516.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="27.5" y="-1505.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="27.5" y="-1494.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="27.5" y="-1483.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="27.5" y="-1472.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="27.5" y="-1461.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="27.5" y="-1450.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="27.5" y="-1439.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="27.5" y="-1428.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="27.5" y="-1417.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="27.5" y="-1406.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="27.5" y="-1395.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="27.5" y="-1384.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="27.5" y="-1373.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="27.5" y="-1362.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="27.5" y="-1351.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="27.5" y="-1340.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="27.5" y="-1329.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="27.5" y="-1318.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="27.5" y="-1307.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="27.5" y="-1296.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="27.5" y="-1285.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="27.5" y="-1274.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="27.5" y="-1263.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="27.5" y="-1252.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="27.5" y="-1241.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="27.5" y="-1230.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M91.96,-1213.17C91.97,-1206.74 91.99,-1200.34 92,-1194 92.01,-1187.91 92.03,-1181.76 92.05,-1175.58"/>
<polygon fill="none" stroke="midnightblue" points="88.46,-1213.3 91.95,-1223.31 95.46,-1213.31 88.46,-1213.3"/>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge3" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M94,-1223.35C94,-1211.57 94,-1199.78 94,-1188.02"/>
<polygon fill="none" stroke="#404040" points="94,-1187.77 90,-1181.77 94,-1175.77 98,-1181.77 94,-1187.77"/>
<text text-anchor="middle" x="123.5" y="-1197" font-family="Helvetica,sans-Serif" font-size="10.00"> #mOptions</text>
</g>
</g>
</svg>
