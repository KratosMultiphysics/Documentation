<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::AMGCLSolver&lt; TSparseSpaceType, TDenseSpaceType, TReordererType &gt; Pages: 1 -->
<svg width="208pt" height="1821pt"
 viewBox="0.00 0.00 208.00 1821.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1817)">
<title>Kratos::AMGCLSolver&lt; TSparseSpaceType, TDenseSpaceType, TReordererType &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="This is a multigrid solver based on the AMGCL library.">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-959.5 200,-959.5 200,-0.5 0,-0.5"/>
<text text-anchor="start" x="8" y="-947.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::AMGCLSolver</text>
<text text-anchor="start" x="8" y="-936.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpaceType,</text>
<text text-anchor="start" x="8" y="-925.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpaceType, TReorderer</text>
<text text-anchor="middle" x="100" y="-914.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type &gt;</text>
<polyline fill="none" stroke="black" points="0,-907.5 200,-907.5 "/>
<text text-anchor="start" x="8" y="-895.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mTolerance</text>
<text text-anchor="start" x="8" y="-884.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxIterationsNumber</text>
<text text-anchor="start" x="8" y="-873.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mVerbosity</text>
<text text-anchor="start" x="8" y="-862.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mBlockSize</text>
<text text-anchor="start" x="8" y="-851.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mGMRESSize</text>
<text text-anchor="start" x="8" y="-840.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCoarseEnough</text>
<text text-anchor="start" x="8" y="-829.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mFallbackToGMRES</text>
<text text-anchor="start" x="8" y="-818.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mProvideCoordinates</text>
<text text-anchor="start" x="8" y="-807.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mUseBlockMatricesIfPossible</text>
<text text-anchor="start" x="8" y="-796.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mUseGPGPU</text>
<text text-anchor="start" x="8" y="-785.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCoordinates</text>
<text text-anchor="start" x="8" y="-774.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mAMGCLParameters</text>
<text text-anchor="start" x="8" y="-763.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mResidualNorm</text>
<text text-anchor="start" x="8" y="-752.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mIterationsNumber</text>
<text text-anchor="start" x="8" y="-741.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mUseAMGPreconditioning</text>
<polyline fill="none" stroke="black" points="0,-734.5 200,-734.5 "/>
<text text-anchor="start" x="8" y="-722.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AMGCLSolver()</text>
<text text-anchor="start" x="8" y="-711.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AMGCLSolver()</text>
<text text-anchor="start" x="8" y="-700.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AMGCLSolver()</text>
<text text-anchor="start" x="8" y="-689.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~AMGCLSolver()</text>
<text text-anchor="start" x="8" y="-678.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="8" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetIterationsNumber()</text>
<text text-anchor="start" x="8" y="-656.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetResidualNorm()</text>
<text text-anchor="start" x="8" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetIterationsNumber()</text>
<text text-anchor="start" x="8" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetResidualNorm()</text>
<text text-anchor="start" x="8" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="8" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AdditionalPhysicalDataIs</text>
<text text-anchor="start" x="8" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00">Needed()</text>
<text text-anchor="start" x="8" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ProvideAdditionalData()</text>
<text text-anchor="start" x="8" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckIfSelectedOptionIsAvailable()</text>
<text text-anchor="start" x="8" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetSmootherType()</text>
<text text-anchor="start" x="8" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetIterativeSolverType()</text>
<text text-anchor="start" x="8" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetCoarseningType()</text>
<text text-anchor="start" x="8" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00"># operator=()</text>
<text text-anchor="start" x="8" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AMGCLSolver()</text>
<text text-anchor="start" x="8" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="8" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixType</text>
<text text-anchor="start" x="8" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="8" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="8" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="8" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="8" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="8" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mTolerance</text>
<text text-anchor="start" x="8" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxIterationsNumber</text>
<text text-anchor="start" x="8" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mVerbosity</text>
<text text-anchor="start" x="8" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mBlockSize</text>
<text text-anchor="start" x="8" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mGMRESSize</text>
<text text-anchor="start" x="8" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCoarseEnough</text>
<text text-anchor="start" x="8" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFallbackToGMRES</text>
<text text-anchor="start" x="8" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mProvideCoordinates</text>
<text text-anchor="start" x="8" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mUseBlockMatricesIfPossible</text>
<text text-anchor="start" x="8" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mUseGPGPU</text>
<text text-anchor="start" x="8" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCoordinates</text>
<text text-anchor="start" x="8" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mAMGCLParameters</text>
<text text-anchor="start" x="8" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mResidualNorm</text>
<text text-anchor="start" x="8" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIterationsNumber</text>
<text text-anchor="start" x="8" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mUseAMGPreconditioning</text>
<text text-anchor="start" x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AMGCLSolver()</text>
<text text-anchor="start" x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AMGCLSolver()</text>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AMGCLSolver()</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~AMGCLSolver()</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetIterationsNumber()</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetResidualNorm()</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetIterationsNumber()</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetResidualNorm()</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AdditionalPhysicalDataIs</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">Needed()</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ProvideAdditionalData()</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckIfSelectedOptionIsAvailable()</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSmootherType()</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetIterativeSolverType()</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetCoarseningType()</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AMGCLSolver()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d1/df6/class_kratos_1_1_linear_solver.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="1,-996.5 1,-1812.5 199,-1812.5 199,-996.5 1,-996.5"/>
<text text-anchor="start" x="9" y="-1800.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::LinearSolver</text>
<text text-anchor="start" x="9" y="-1789.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpaceType, TDenseSpace</text>
<text text-anchor="start" x="9" y="-1778.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type, Reorderer&lt; TSparseSpaceType,</text>
<text text-anchor="middle" x="100" y="-1767.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpaceType &gt; &gt;</text>
<polyline fill="none" stroke="black" points="1,-1760.5 199,-1760.5 "/>
<text text-anchor="middle" x="100" y="-1748.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="1,-1741.5 199,-1741.5 "/>
<text text-anchor="start" x="9" y="-1729.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearSolver()</text>
<text text-anchor="start" x="9" y="-1718.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearSolver()</text>
<text text-anchor="start" x="9" y="-1707.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearSolver()</text>
<text text-anchor="start" x="9" y="-1696.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~LinearSolver()</text>
<text text-anchor="start" x="9" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="9" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="9" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="9" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PerformSolutionStep()</text>
<text text-anchor="start" x="9" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="9" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="9" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="9" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="9" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="9" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AdditionalPhysicalDataIs</text>
<text text-anchor="start" x="9" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">Needed()</text>
<text text-anchor="start" x="9" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ProvideAdditionalData()</text>
<text text-anchor="start" x="9" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetReorderer()</text>
<text text-anchor="start" x="9" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetReorderer()</text>
<text text-anchor="start" x="9" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetTolerance()</text>
<text text-anchor="start" x="9" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetTolerance()</text>
<text text-anchor="start" x="9" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetIterationsNumber()</text>
<text text-anchor="start" x="9" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsConsistent()</text>
<text text-anchor="start" x="9" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsConsistent()</text>
<text text-anchor="start" x="9" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotConsistent()</text>
<text text-anchor="start" x="9" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotConsistent()</text>
<text text-anchor="start" x="9" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="9" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="9" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="9" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixType</text>
<text text-anchor="start" x="9" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixPointerType</text>
<text text-anchor="start" x="9" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="9" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorPointerType</text>
<text text-anchor="start" x="9" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="9" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseVectorType</text>
<text text-anchor="start" x="9" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="9" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="9" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="9" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="9" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpReorderer</text>
<text text-anchor="start" x="9" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolver()</text>
<text text-anchor="start" x="9" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolver()</text>
<text text-anchor="start" x="9" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolver()</text>
<text text-anchor="start" x="9" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~LinearSolver()</text>
<text text-anchor="start" x="9" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="9" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="9" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="9" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PerformSolutionStep()</text>
<text text-anchor="start" x="9" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="9" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="9" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="9" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="9" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="9" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AdditionalPhysicalDataIs</text>
<text text-anchor="start" x="9" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">Needed()</text>
<text text-anchor="start" x="9" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ProvideAdditionalData()</text>
<text text-anchor="start" x="9" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetReorderer()</text>
<text text-anchor="start" x="9" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetReorderer()</text>
<text text-anchor="start" x="9" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetTolerance()</text>
<text text-anchor="start" x="9" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetTolerance()</text>
<text text-anchor="start" x="9" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetIterationsNumber()</text>
<text text-anchor="start" x="9" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsConsistent()</text>
<text text-anchor="start" x="9" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsConsistent()</text>
<text text-anchor="start" x="9" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotConsistent()</text>
<text text-anchor="start" x="9" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotConsistent()</text>
<text text-anchor="start" x="9" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="9" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="9" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M100,-986.18C100,-977.31 100,-968.42 100,-959.51"/>
<polygon fill="none" stroke="midnightblue" points="96.5,-986.19 100,-996.19 103.5,-986.19 96.5,-986.19"/>
</g>
</g>
</svg>
