<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::ResidualBasedBlockBuilderAndSolver&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt; Pages: 1 -->
<svg width="358pt" height="3158pt"
 viewBox="0.00 0.00 357.50 3158.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 3154)">
<title>Kratos::ResidualBasedBlockBuilderAndSolver&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Current class provides an implementation for standard builder and solving operations.">
<polygon fill="#bfbfbf" stroke="black" points="86.5,-0.5 86.5,-1080.5 279.5,-1080.5 279.5,-0.5 86.5,-0.5"/>
<text text-anchor="start" x="94.5" y="-1068.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedBlock</text>
<text text-anchor="start" x="94.5" y="-1057.5" font-family="Helvetica,sans-Serif" font-size="10.00">BuilderAndSolver&lt; TSparseSpace,</text>
<text text-anchor="middle" x="183" y="-1046.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="86.5,-1039.5 279.5,-1039.5 "/>
<text text-anchor="start" x="94.5" y="-1027.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mT</text>
<text text-anchor="start" x="94.5" y="-1016.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mConstantVector</text>
<text text-anchor="start" x="94.5" y="-1005.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mSlaveIds</text>
<text text-anchor="start" x="94.5" y="-994.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMasterIds</text>
<text text-anchor="start" x="94.5" y="-983.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInactiveSlaveDofs</text>
<text text-anchor="start" x="94.5" y="-972.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mScaleFactor</text>
<text text-anchor="start" x="94.5" y="-961.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mScalingDiagonal</text>
<polyline fill="none" stroke="black" points="86.5,-954.5 279.5,-954.5 "/>
<text text-anchor="start" x="94.5" y="-942.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="94.5" y="-931.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="94.5" y="-920.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="94.5" y="-909.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="94.5" y="-898.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="94.5" y="-887.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="94.5" y="-876.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="94.5" y="-865.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="94.5" y="-854.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="94.5" y="-843.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConstraintRelationMatrix()</text>
<text text-anchor="start" x="94.5" y="-832.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConstraintConstantVector()</text>
<text text-anchor="start" x="94.5" y="-821.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetScaleFactor()</text>
<text text-anchor="start" x="94.5" y="-810.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScaleFactor()</text>
<text text-anchor="start" x="94.5" y="-799.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="94.5" y="-788.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="94.5" y="-777.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="94.5" y="-766.5" font-family="Helvetica,sans-Serif" font-size="10.00"># BuildRHSNoDirichlet()</text>
<text text-anchor="start" x="94.5" y="-755.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ConstructMasterSlaveConstraints</text>
<text text-anchor="start" x="94.5" y="-744.5" font-family="Helvetica,sans-Serif" font-size="10.00">Structure()</text>
<text text-anchor="start" x="94.5" y="-733.5" font-family="Helvetica,sans-Serif" font-size="10.00"># BuildMasterSlaveConstraints()</text>
<text text-anchor="start" x="94.5" y="-722.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ConstructMatrixStructure()</text>
<text text-anchor="start" x="94.5" y="-711.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Assemble()</text>
<text text-anchor="start" x="94.5" y="-700.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssembleLHS()</text>
<text text-anchor="start" x="94.5" y="-689.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssembleRHS()</text>
<text text-anchor="start" x="94.5" y="-678.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssembleRowContribution()</text>
<text text-anchor="start" x="94.5" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="94.5" y="-656.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="94.5" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="94.5" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="94.5" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="94.5" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="94.5" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="94.5" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="94.5" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="94.5" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="94.5" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="94.5" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 15 more...</text>
<text text-anchor="start" x="94.5" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mT</text>
<text text-anchor="start" x="94.5" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mConstantVector</text>
<text text-anchor="start" x="94.5" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSlaveIds</text>
<text text-anchor="start" x="94.5" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMasterIds</text>
<text text-anchor="start" x="94.5" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInactiveSlaveDofs</text>
<text text-anchor="start" x="94.5" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mScaleFactor</text>
<text text-anchor="start" x="94.5" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mScalingDiagonal</text>
<text text-anchor="start" x="94.5" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="94.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="94.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="94.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="94.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="94.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="94.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="94.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="94.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="94.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Build()</text>
<text text-anchor="start" x="94.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildLHS()</text>
<text text-anchor="start" x="94.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildLHS_CompleteOnFreeRows()</text>
<text text-anchor="start" x="94.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemSolve()</text>
<text text-anchor="start" x="94.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemSolveWithPhysics()</text>
<text text-anchor="start" x="94.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InternalSystemSolveWithPhysics()</text>
<text text-anchor="start" x="94.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndSolve()</text>
<text text-anchor="start" x="94.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndSolveLinearizedOn</text>
<text text-anchor="start" x="94.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">PreviousIteration()</text>
<text text-anchor="start" x="94.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHSAndSolve()</text>
<text text-anchor="start" x="94.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHS()</text>
<text text-anchor="start" x="94.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 11 more...</text>
<text text-anchor="start" x="94.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConstraintRelationMatrix()</text>
<text text-anchor="start" x="94.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConstraintConstantVector()</text>
<text text-anchor="start" x="94.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetScaleFactor()</text>
<text text-anchor="start" x="94.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScaleFactor()</text>
<text text-anchor="start" x="94.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="94.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="94.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="94.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHSNoDirichlet()</text>
<text text-anchor="start" x="94.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstructMasterSlaveConstraints</text>
<text text-anchor="start" x="94.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">Structure()</text>
<text text-anchor="start" x="94.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildMasterSlaveConstraints()</text>
<text text-anchor="start" x="94.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstructMatrixStructure()</text>
<text text-anchor="start" x="94.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Assemble()</text>
<text text-anchor="start" x="94.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleLHS()</text>
<text text-anchor="start" x="94.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleRHS()</text>
<text text-anchor="start" x="94.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleRowContribution()</text>
<text text-anchor="start" x="94.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="94.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddUnique()</text>
<text text-anchor="start" x="94.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CreatePartition()</text>
<text text-anchor="start" x="94.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ForwardFind()</text>
<text text-anchor="start" x="94.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BackwardFind()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d2/d88/class_kratos_1_1_builder_and_solver.html" target="_top" xlink:title="Current class provides an implementation for the base builder and solving operations.">
<polygon fill="none" stroke="black" points="0,-1183.5 0,-1944.5 182,-1944.5 182,-1183.5 0,-1183.5"/>
<text text-anchor="start" x="8" y="-1932.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::BuilderAndSolver</text>
<text text-anchor="start" x="8" y="-1921.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="91" y="-1910.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="0,-1903.5 182,-1903.5 "/>
<text text-anchor="start" x="8" y="-1891.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpLinearSystemSolver</text>
<text text-anchor="start" x="8" y="-1880.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mReshapeMatrixFlag</text>
<text text-anchor="start" x="8" y="-1869.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mDofSetIsInitialized</text>
<text text-anchor="start" x="8" y="-1858.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCalculateReactionsFlag</text>
<text text-anchor="start" x="8" y="-1847.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEquationSystemSize</text>
<text text-anchor="start" x="8" y="-1836.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<text text-anchor="start" x="8" y="-1825.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpReactionsVector</text>
<polyline fill="none" stroke="black" points="0,-1818.5 182,-1818.5 "/>
<text text-anchor="start" x="8" y="-1806.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1795.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1784.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1773.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1762.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="8" y="-1751.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="8" y="-1740.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetEchoLevel()</text>
<text text-anchor="start" x="8" y="-1729.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConstraintRelationMatrix()</text>
<text text-anchor="start" x="8" y="-1718.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConstraintConstantVector()</text>
<text text-anchor="start" x="8" y="-1707.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-1696.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ValidateAndAssignParameters()</text>
<text text-anchor="start" x="8" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="8" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="8" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="8" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="8" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="8" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="8" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="8" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="8" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="8" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="8" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="8" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="8" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpLinearSystemSolver</text>
<text text-anchor="start" x="8" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReshapeMatrixFlag</text>
<text text-anchor="start" x="8" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mDofSetIsInitialized</text>
<text text-anchor="start" x="8" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="8" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEquationSystemSize</text>
<text text-anchor="start" x="8" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="8" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpReactionsVector</text>
<text text-anchor="start" x="8" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="8" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetCalculateReactionsFlag()</text>
<text text-anchor="start" x="8" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="8" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDofSetIsInitializedFlag()</text>
<text text-anchor="start" x="8" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDofSetIsInitializedFlag()</text>
<text text-anchor="start" x="8" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetReshapeMatrixFlag()</text>
<text text-anchor="start" x="8" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetReshapeMatrixFlag()</text>
<text text-anchor="start" x="8" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetEquationSystemSize()</text>
<text text-anchor="start" x="8" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetLinearSystemSolver()</text>
<text text-anchor="start" x="8" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetLinearSystemSolver()</text>
<text text-anchor="start" x="8" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildLHS()</text>
<text text-anchor="start" x="8" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 25 more...</text>
<text text-anchor="start" x="8" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="8" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetEchoLevel()</text>
<text text-anchor="start" x="8" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConstraintRelationMatrix()</text>
<text text-anchor="start" x="8" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConstraintConstantVector()</text>
<text text-anchor="start" x="8" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ValidateAndAssignParameters()</text>
<text text-anchor="start" x="8" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M126.12,-1173.09C128.85,-1142.73 131.64,-1111.78 134.44,-1080.68"/>
<polygon fill="none" stroke="midnightblue" points="122.6,-1173.08 125.19,-1183.36 129.58,-1173.71 122.6,-1173.08"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../db/dc6/class_kratos_1_1_pointer_vector_set.html" target="_top" xlink:title="A sorted associative container similar to an STL set, but uses a vector to store pointers to its data...">
<polygon fill="none" stroke="black" points="3.5,-2047.5 3.5,-3149.5 178.5,-3149.5 178.5,-2047.5 3.5,-2047.5"/>
<text text-anchor="start" x="11.5" y="-3137.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::PointerVectorSet</text>
<text text-anchor="start" x="11.5" y="-3126.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TDataType, TGetKeyType,</text>
<text text-anchor="start" x="11.5" y="-3115.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TCompareType, TEqualType,</text>
<text text-anchor="middle" x="91" y="-3104.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TPointerType, TContainerType &gt;</text>
<polyline fill="none" stroke="black" points="3.5,-3097.5 178.5,-3097.5 "/>
<text text-anchor="middle" x="91" y="-3085.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="3.5,-3078.5 178.5,-3078.5 "/>
<text text-anchor="start" x="11.5" y="-3066.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="11.5" y="-3055.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="11.5" y="-3044.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="11.5" y="-3033.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="11.5" y="-3022.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~PointerVectorSet()</text>
<text text-anchor="start" x="11.5" y="-3011.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="11.5" y="-3000.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="11.5" y="-2989.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="11.5" y="-2978.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator==()</text>
<text text-anchor="start" x="11.5" y="-2967.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator&lt;()</text>
<text text-anchor="start" x="11.5" y="-2956.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ begin()</text>
<text text-anchor="start" x="11.5" y="-2945.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ begin()</text>
<text text-anchor="start" x="11.5" y="-2934.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cbegin()</text>
<text text-anchor="start" x="11.5" y="-2923.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cbegin()</text>
<text text-anchor="start" x="11.5" y="-2912.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ end()</text>
<text text-anchor="start" x="11.5" y="-2901.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ end()</text>
<text text-anchor="start" x="11.5" y="-2890.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cend()</text>
<text text-anchor="start" x="11.5" y="-2879.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cend()</text>
<text text-anchor="start" x="11.5" y="-2868.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ rbegin()</text>
<text text-anchor="start" x="11.5" y="-2857.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ rbegin()</text>
<text text-anchor="start" x="11.5" y="-2846.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 33 more...</text>
<text text-anchor="start" x="11.5" y="-2835.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetContainer()</text>
<text text-anchor="start" x="11.5" y="-2824.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetContainer()</text>
<text text-anchor="start" x="11.5" y="-2813.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMaxBufferSize()</text>
<text text-anchor="start" x="11.5" y="-2802.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetMaxBufferSize()</text>
<text text-anchor="start" x="11.5" y="-2791.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSortedPartSize()</text>
<text text-anchor="start" x="11.5" y="-2780.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetSortedPartSize()</text>
<text text-anchor="start" x="11.5" y="-2769.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ empty()</text>
<text text-anchor="start" x="11.5" y="-2758.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsSorted()</text>
<text text-anchor="start" x="11.5" y="-2747.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="11.5" y="-2736.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="11.5" y="-2725.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="11.5" y="-2714.5" font-family="Helvetica,sans-Serif" font-size="10.00">* key_type</text>
<text text-anchor="start" x="11.5" y="-2703.5" font-family="Helvetica,sans-Serif" font-size="10.00">* data_type</text>
<text text-anchor="start" x="11.5" y="-2692.5" font-family="Helvetica,sans-Serif" font-size="10.00">* value_type</text>
<text text-anchor="start" x="11.5" y="-2681.5" font-family="Helvetica,sans-Serif" font-size="10.00">* key_compare</text>
<text text-anchor="start" x="11.5" y="-2670.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pointer</text>
<text text-anchor="start" x="11.5" y="-2659.5" font-family="Helvetica,sans-Serif" font-size="10.00">* reference</text>
<text text-anchor="start" x="11.5" y="-2648.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reference</text>
<text text-anchor="start" x="11.5" y="-2637.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ContainerType</text>
<text text-anchor="start" x="11.5" y="-2626.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="11.5" y="-2615.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="11.5" y="-2604.5" font-family="Helvetica,sans-Serif" font-size="10.00">* iterator</text>
<text text-anchor="start" x="11.5" y="-2593.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_iterator</text>
<text text-anchor="start" x="11.5" y="-2582.5" font-family="Helvetica,sans-Serif" font-size="10.00">* reverse_iterator</text>
<text text-anchor="start" x="11.5" y="-2571.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reverse_iterator</text>
<text text-anchor="start" x="11.5" y="-2560.5" font-family="Helvetica,sans-Serif" font-size="10.00">* size_type</text>
<text text-anchor="start" x="11.5" y="-2549.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_iterator</text>
<text text-anchor="start" x="11.5" y="-2538.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_const_iterator</text>
<text text-anchor="start" x="11.5" y="-2527.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_reverse_iterator</text>
<text text-anchor="start" x="11.5" y="-2516.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_const_reverse_iterator</text>
<text text-anchor="start" x="11.5" y="-2505.5" font-family="Helvetica,sans-Serif" font-size="10.00">* difference_type</text>
<text text-anchor="start" x="11.5" y="-2494.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mData</text>
<text text-anchor="start" x="11.5" y="-2483.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSortedPartSize</text>
<text text-anchor="start" x="11.5" y="-2472.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxBufferSize</text>
<text text-anchor="start" x="11.5" y="-2461.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="11.5" y="-2450.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="11.5" y="-2439.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="11.5" y="-2428.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="11.5" y="-2417.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="11.5" y="-2406.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="11.5" y="-2395.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="11.5" y="-2384.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~PointerVectorSet()</text>
<text text-anchor="start" x="11.5" y="-2373.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="11.5" y="-2362.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="11.5" y="-2351.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="11.5" y="-2340.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==()</text>
<text text-anchor="start" x="11.5" y="-2329.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&lt;()</text>
<text text-anchor="start" x="11.5" y="-2318.5" font-family="Helvetica,sans-Serif" font-size="10.00">* begin()</text>
<text text-anchor="start" x="11.5" y="-2307.5" font-family="Helvetica,sans-Serif" font-size="10.00">* begin()</text>
<text text-anchor="start" x="11.5" y="-2296.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cbegin()</text>
<text text-anchor="start" x="11.5" y="-2285.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cbegin()</text>
<text text-anchor="start" x="11.5" y="-2274.5" font-family="Helvetica,sans-Serif" font-size="10.00">* end()</text>
<text text-anchor="start" x="11.5" y="-2263.5" font-family="Helvetica,sans-Serif" font-size="10.00">* end()</text>
<text text-anchor="start" x="11.5" y="-2252.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cend()</text>
<text text-anchor="start" x="11.5" y="-2241.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cend()</text>
<text text-anchor="start" x="11.5" y="-2230.5" font-family="Helvetica,sans-Serif" font-size="10.00">* rbegin()</text>
<text text-anchor="start" x="11.5" y="-2219.5" font-family="Helvetica,sans-Serif" font-size="10.00">* rbegin()</text>
<text text-anchor="start" x="11.5" y="-2208.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 33 more...</text>
<text text-anchor="start" x="11.5" y="-2197.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetContainer()</text>
<text text-anchor="start" x="11.5" y="-2186.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetContainer()</text>
<text text-anchor="start" x="11.5" y="-2175.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMaxBufferSize()</text>
<text text-anchor="start" x="11.5" y="-2164.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetMaxBufferSize()</text>
<text text-anchor="start" x="11.5" y="-2153.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSortedPartSize()</text>
<text text-anchor="start" x="11.5" y="-2142.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSortedPartSize()</text>
<text text-anchor="start" x="11.5" y="-2131.5" font-family="Helvetica,sans-Serif" font-size="10.00">* empty()</text>
<text text-anchor="start" x="11.5" y="-2120.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsSorted()</text>
<text text-anchor="start" x="11.5" y="-2109.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="11.5" y="-2098.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="11.5" y="-2087.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="11.5" y="-2076.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyOf()</text>
<text text-anchor="start" x="11.5" y="-2065.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyOf()</text>
<text text-anchor="start" x="11.5" y="-2054.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyOf()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M91,-2047.24C91,-2016.8 91,-1986.52 91,-1956.82"/>
<polygon fill="none" stroke="#404040" points="91,-1956.57 87,-1950.57 91,-1944.57 95,-1950.57 91,-1956.57"/>
<text text-anchor="middle" x="118.5" y="-2021" font-family="Helvetica,sans-Serif" font-size="10.00"> #mDofSet</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="200.5,-1128.5 200.5,-1999.5 349.5,-1999.5 349.5,-1128.5 200.5,-1128.5"/>
<text text-anchor="middle" x="275" y="-1987.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="200.5,-1980.5 349.5,-1980.5 "/>
<text text-anchor="middle" x="275" y="-1968.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="200.5,-1961.5 349.5,-1961.5 "/>
<text text-anchor="start" x="208.5" y="-1949.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="208.5" y="-1938.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="208.5" y="-1927.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="208.5" y="-1916.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="208.5" y="-1905.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="208.5" y="-1894.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="208.5" y="-1883.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="208.5" y="-1872.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="208.5" y="-1861.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="208.5" y="-1850.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="208.5" y="-1839.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="208.5" y="-1828.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="208.5" y="-1817.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="208.5" y="-1806.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="208.5" y="-1795.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="208.5" y="-1784.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="208.5" y="-1773.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="208.5" y="-1762.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="208.5" y="-1751.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="208.5" y="-1740.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="208.5" y="-1729.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="208.5" y="-1718.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="208.5" y="-1707.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="208.5" y="-1696.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="208.5" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="208.5" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="208.5" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="208.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="208.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="208.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="208.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="208.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="208.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="208.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="208.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="208.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="208.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="208.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="208.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="208.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="208.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="208.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="208.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="208.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="208.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="208.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="208.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="208.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="208.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="208.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="208.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="208.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="208.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="208.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="208.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="208.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="208.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="208.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="208.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="208.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="208.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="208.5" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="208.5" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="208.5" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="208.5" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="208.5" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="208.5" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="208.5" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="208.5" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="208.5" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="208.5" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="208.5" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="208.5" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="208.5" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="208.5" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node1 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M235.85,-1128.31C234.8,-1116.62 233.74,-1104.88 232.68,-1093.11"/>
<polygon fill="none" stroke="#404040" points="232.65,-1092.79 228.13,-1087.17 231.57,-1080.83 236.1,-1086.45 232.65,-1092.79"/>
<text text-anchor="middle" x="263.5" y="-1102" font-family="Helvetica,sans-Serif" font-size="10.00"> #mOptions</text>
</g>
</g>
</svg>
