<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::ResidualBasedBlockBuilderAndSolverWithConstraintsForChimera&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt; Pages: 1 -->
<!--zoomable 3583 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 358;
var viewHeight = 3583;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::ResidualBasedBlockBuilderAndSolverWithConstraintsForChimera&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Current class provides an implementation for applying the chimera constraints that is enforcing conti...">
<polygon fill="#bfbfbf" stroke="black" points="69.5,-0.5 69.5,-387.5 296.5,-387.5 296.5,-0.5 69.5,-0.5"/>
<text text-anchor="start" x="77.5" y="-375.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedBlock</text>
<text text-anchor="start" x="77.5" y="-364.5" font-family="Helvetica,sans-Serif" font-size="10.00">BuilderAndSolverWithConstraints</text>
<text text-anchor="start" x="77.5" y="-353.5" font-family="Helvetica,sans-Serif" font-size="10.00">ForChimera&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="183" y="-342.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="69.5,-335.5 296.5,-335.5 "/>
<text text-anchor="start" x="77.5" y="-323.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mL</text>
<polyline fill="none" stroke="black" points="69.5,-316.5 296.5,-316.5 "/>
<text text-anchor="start" x="77.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="77.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolverWithConstraintsForChimera()</text>
<text text-anchor="start" x="77.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="77.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolverWithConstraintsForChimera()</text>
<text text-anchor="start" x="77.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="77.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="77.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ConstructMasterSlaveConstraints</text>
<text text-anchor="start" x="77.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">Structure()</text>
<text text-anchor="start" x="77.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00"># BuildMasterSlaveConstraints()</text>
<text text-anchor="start" x="77.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ApplyConstraints()</text>
<text text-anchor="start" x="77.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="77.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="77.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="77.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="77.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="77.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="77.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="77.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mL</text>
<text text-anchor="start" x="77.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="77.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolverWithConstraintsForChimera()</text>
<text text-anchor="start" x="77.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="77.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolverWithConstraintsForChimera()</text>
<text text-anchor="start" x="77.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="77.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="77.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstructMasterSlaveConstraints</text>
<text text-anchor="start" x="77.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">Structure()</text>
<text text-anchor="start" x="77.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildMasterSlaveConstraints()</text>
<text text-anchor="start" x="77.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ApplyConstraints()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d9/d26/class_kratos_1_1_residual_based_block_builder_and_solver.html" target="_top" xlink:title="Current class provides an implementation for standard builder and solving operations.">
<polygon fill="none" stroke="black" points="86.5,-425.5 86.5,-1505.5 279.5,-1505.5 279.5,-425.5 86.5,-425.5"/>
<text text-anchor="start" x="94.5" y="-1493.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedBlock</text>
<text text-anchor="start" x="94.5" y="-1482.5" font-family="Helvetica,sans-Serif" font-size="10.00">BuilderAndSolver&lt; TSparseSpace,</text>
<text text-anchor="middle" x="183" y="-1471.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="86.5,-1464.5 279.5,-1464.5 "/>
<text text-anchor="start" x="94.5" y="-1452.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mT</text>
<text text-anchor="start" x="94.5" y="-1441.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mConstantVector</text>
<text text-anchor="start" x="94.5" y="-1430.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mSlaveIds</text>
<text text-anchor="start" x="94.5" y="-1419.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMasterIds</text>
<text text-anchor="start" x="94.5" y="-1408.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInactiveSlaveDofs</text>
<text text-anchor="start" x="94.5" y="-1397.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mScaleFactor</text>
<text text-anchor="start" x="94.5" y="-1386.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mScalingDiagonal</text>
<polyline fill="none" stroke="black" points="86.5,-1379.5 279.5,-1379.5 "/>
<text text-anchor="start" x="94.5" y="-1367.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="94.5" y="-1356.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="94.5" y="-1345.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="94.5" y="-1334.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="94.5" y="-1323.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="94.5" y="-1312.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="94.5" y="-1301.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="94.5" y="-1290.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="94.5" y="-1279.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="94.5" y="-1268.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConstraintRelationMatrix()</text>
<text text-anchor="start" x="94.5" y="-1257.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConstraintConstantVector()</text>
<text text-anchor="start" x="94.5" y="-1246.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetScaleFactor()</text>
<text text-anchor="start" x="94.5" y="-1235.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScaleFactor()</text>
<text text-anchor="start" x="94.5" y="-1224.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="94.5" y="-1213.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="94.5" y="-1202.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="94.5" y="-1191.5" font-family="Helvetica,sans-Serif" font-size="10.00"># BuildRHSNoDirichlet()</text>
<text text-anchor="start" x="94.5" y="-1180.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ConstructMasterSlaveConstraints</text>
<text text-anchor="start" x="94.5" y="-1169.5" font-family="Helvetica,sans-Serif" font-size="10.00">Structure()</text>
<text text-anchor="start" x="94.5" y="-1158.5" font-family="Helvetica,sans-Serif" font-size="10.00"># BuildMasterSlaveConstraints()</text>
<text text-anchor="start" x="94.5" y="-1147.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ConstructMatrixStructure()</text>
<text text-anchor="start" x="94.5" y="-1136.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Assemble()</text>
<text text-anchor="start" x="94.5" y="-1125.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssembleLHS()</text>
<text text-anchor="start" x="94.5" y="-1114.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssembleRHS()</text>
<text text-anchor="start" x="94.5" y="-1103.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssembleRowContribution()</text>
<text text-anchor="start" x="94.5" y="-1092.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="94.5" y="-1081.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="94.5" y="-1070.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="94.5" y="-1059.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="94.5" y="-1048.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="94.5" y="-1037.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="94.5" y="-1026.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="94.5" y="-1015.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="94.5" y="-1004.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="94.5" y="-993.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="94.5" y="-982.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="94.5" y="-971.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 15 more...</text>
<text text-anchor="start" x="94.5" y="-960.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mT</text>
<text text-anchor="start" x="94.5" y="-949.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mConstantVector</text>
<text text-anchor="start" x="94.5" y="-938.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSlaveIds</text>
<text text-anchor="start" x="94.5" y="-927.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMasterIds</text>
<text text-anchor="start" x="94.5" y="-916.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInactiveSlaveDofs</text>
<text text-anchor="start" x="94.5" y="-905.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mScaleFactor</text>
<text text-anchor="start" x="94.5" y="-894.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mScalingDiagonal</text>
<text text-anchor="start" x="94.5" y="-883.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="94.5" y="-872.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="94.5" y="-861.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="94.5" y="-850.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="94.5" y="-839.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="94.5" y="-828.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="94.5" y="-817.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="94.5" y="-806.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="94.5" y="-795.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="94.5" y="-784.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Build()</text>
<text text-anchor="start" x="94.5" y="-773.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildLHS()</text>
<text text-anchor="start" x="94.5" y="-762.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildLHS_CompleteOnFreeRows()</text>
<text text-anchor="start" x="94.5" y="-751.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemSolve()</text>
<text text-anchor="start" x="94.5" y="-740.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemSolveWithPhysics()</text>
<text text-anchor="start" x="94.5" y="-729.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InternalSystemSolveWithPhysics()</text>
<text text-anchor="start" x="94.5" y="-718.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndSolve()</text>
<text text-anchor="start" x="94.5" y="-707.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndSolveLinearizedOn</text>
<text text-anchor="start" x="94.5" y="-696.5" font-family="Helvetica,sans-Serif" font-size="10.00">PreviousIteration()</text>
<text text-anchor="start" x="94.5" y="-685.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHSAndSolve()</text>
<text text-anchor="start" x="94.5" y="-674.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHS()</text>
<text text-anchor="start" x="94.5" y="-663.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 11 more...</text>
<text text-anchor="start" x="94.5" y="-652.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConstraintRelationMatrix()</text>
<text text-anchor="start" x="94.5" y="-641.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConstraintConstantVector()</text>
<text text-anchor="start" x="94.5" y="-630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetScaleFactor()</text>
<text text-anchor="start" x="94.5" y="-619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScaleFactor()</text>
<text text-anchor="start" x="94.5" y="-608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="94.5" y="-597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="94.5" y="-586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="94.5" y="-575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHSNoDirichlet()</text>
<text text-anchor="start" x="94.5" y="-564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstructMasterSlaveConstraints</text>
<text text-anchor="start" x="94.5" y="-553.5" font-family="Helvetica,sans-Serif" font-size="10.00">Structure()</text>
<text text-anchor="start" x="94.5" y="-542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildMasterSlaveConstraints()</text>
<text text-anchor="start" x="94.5" y="-531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstructMatrixStructure()</text>
<text text-anchor="start" x="94.5" y="-520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Assemble()</text>
<text text-anchor="start" x="94.5" y="-509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleLHS()</text>
<text text-anchor="start" x="94.5" y="-498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleRHS()</text>
<text text-anchor="start" x="94.5" y="-487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleRowContribution()</text>
<text text-anchor="start" x="94.5" y="-476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="94.5" y="-465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddUnique()</text>
<text text-anchor="start" x="94.5" y="-454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CreatePartition()</text>
<text text-anchor="start" x="94.5" y="-443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ForwardFind()</text>
<text text-anchor="start" x="94.5" y="-432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BackwardFind()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M183,-415.17C183,-405.84 183,-396.67 183,-387.68"/>
<polygon fill="none" stroke="midnightblue" points="179.5,-415.35 183,-425.35 186.5,-415.35 179.5,-415.35"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d2/d88/class_kratos_1_1_builder_and_solver.html" target="_top" xlink:title="Current class provides an implementation for the base builder and solving operations.">
<polygon fill="none" stroke="black" points="0,-1608.5 0,-2369.5 182,-2369.5 182,-1608.5 0,-1608.5"/>
<text text-anchor="start" x="8" y="-2357.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::BuilderAndSolver</text>
<text text-anchor="start" x="8" y="-2346.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="91" y="-2335.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="0,-2328.5 182,-2328.5 "/>
<text text-anchor="start" x="8" y="-2316.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpLinearSystemSolver</text>
<text text-anchor="start" x="8" y="-2305.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mReshapeMatrixFlag</text>
<text text-anchor="start" x="8" y="-2294.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mDofSetIsInitialized</text>
<text text-anchor="start" x="8" y="-2283.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCalculateReactionsFlag</text>
<text text-anchor="start" x="8" y="-2272.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEquationSystemSize</text>
<text text-anchor="start" x="8" y="-2261.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<text text-anchor="start" x="8" y="-2250.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpReactionsVector</text>
<polyline fill="none" stroke="black" points="0,-2243.5 182,-2243.5 "/>
<text text-anchor="start" x="8" y="-2231.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-2220.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-2209.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-2198.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-2187.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="8" y="-2176.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="8" y="-2165.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetEchoLevel()</text>
<text text-anchor="start" x="8" y="-2154.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConstraintRelationMatrix()</text>
<text text-anchor="start" x="8" y="-2143.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConstraintConstantVector()</text>
<text text-anchor="start" x="8" y="-2132.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-2121.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-2110.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-2099.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ValidateAndAssignParameters()</text>
<text text-anchor="start" x="8" y="-2088.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="8" y="-2077.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="8" y="-2066.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="8" y="-2055.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="8" y="-2044.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="8" y="-2033.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="8" y="-2022.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="8" y="-2011.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="8" y="-2000.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="8" y="-1989.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="8" y="-1978.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="8" y="-1967.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="8" y="-1956.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpLinearSystemSolver</text>
<text text-anchor="start" x="8" y="-1945.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReshapeMatrixFlag</text>
<text text-anchor="start" x="8" y="-1934.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mDofSetIsInitialized</text>
<text text-anchor="start" x="8" y="-1923.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="8" y="-1912.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEquationSystemSize</text>
<text text-anchor="start" x="8" y="-1901.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="8" y="-1890.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpReactionsVector</text>
<text text-anchor="start" x="8" y="-1879.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1868.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1857.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1846.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1835.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="8" y="-1824.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetCalculateReactionsFlag()</text>
<text text-anchor="start" x="8" y="-1813.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="8" y="-1802.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDofSetIsInitializedFlag()</text>
<text text-anchor="start" x="8" y="-1791.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDofSetIsInitializedFlag()</text>
<text text-anchor="start" x="8" y="-1780.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetReshapeMatrixFlag()</text>
<text text-anchor="start" x="8" y="-1769.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetReshapeMatrixFlag()</text>
<text text-anchor="start" x="8" y="-1758.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetEquationSystemSize()</text>
<text text-anchor="start" x="8" y="-1747.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetLinearSystemSolver()</text>
<text text-anchor="start" x="8" y="-1736.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetLinearSystemSolver()</text>
<text text-anchor="start" x="8" y="-1725.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildLHS()</text>
<text text-anchor="start" x="8" y="-1714.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 25 more...</text>
<text text-anchor="start" x="8" y="-1703.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="8" y="-1692.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetEchoLevel()</text>
<text text-anchor="start" x="8" y="-1681.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConstraintRelationMatrix()</text>
<text text-anchor="start" x="8" y="-1670.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConstraintConstantVector()</text>
<text text-anchor="start" x="8" y="-1659.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-1648.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-1637.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-1626.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ValidateAndAssignParameters()</text>
<text text-anchor="start" x="8" y="-1615.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M126.12,-1598.09C128.85,-1567.73 131.64,-1536.78 134.44,-1505.68"/>
<polygon fill="none" stroke="midnightblue" points="122.6,-1598.08 125.19,-1608.36 129.58,-1598.71 122.6,-1598.08"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../db/dc6/class_kratos_1_1_pointer_vector_set.html" target="_top" xlink:title="A sorted associative container similar to an STL set, but uses a vector to store pointers to its data...">
<polygon fill="none" stroke="black" points="3.5,-2472.5 3.5,-3574.5 178.5,-3574.5 178.5,-2472.5 3.5,-2472.5"/>
<text text-anchor="start" x="11.5" y="-3562.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::PointerVectorSet</text>
<text text-anchor="start" x="11.5" y="-3551.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TDataType, TGetKeyType,</text>
<text text-anchor="start" x="11.5" y="-3540.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TCompareType, TEqualType,</text>
<text text-anchor="middle" x="91" y="-3529.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TPointerType, TContainerType &gt;</text>
<polyline fill="none" stroke="black" points="3.5,-3522.5 178.5,-3522.5 "/>
<text text-anchor="middle" x="91" y="-3510.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="3.5,-3503.5 178.5,-3503.5 "/>
<text text-anchor="start" x="11.5" y="-3491.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="11.5" y="-3480.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="11.5" y="-3469.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="11.5" y="-3458.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="11.5" y="-3447.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~PointerVectorSet()</text>
<text text-anchor="start" x="11.5" y="-3436.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="11.5" y="-3425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="11.5" y="-3414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="11.5" y="-3403.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator==()</text>
<text text-anchor="start" x="11.5" y="-3392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator&lt;()</text>
<text text-anchor="start" x="11.5" y="-3381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ begin()</text>
<text text-anchor="start" x="11.5" y="-3370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ begin()</text>
<text text-anchor="start" x="11.5" y="-3359.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cbegin()</text>
<text text-anchor="start" x="11.5" y="-3348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cbegin()</text>
<text text-anchor="start" x="11.5" y="-3337.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ end()</text>
<text text-anchor="start" x="11.5" y="-3326.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ end()</text>
<text text-anchor="start" x="11.5" y="-3315.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cend()</text>
<text text-anchor="start" x="11.5" y="-3304.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cend()</text>
<text text-anchor="start" x="11.5" y="-3293.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ rbegin()</text>
<text text-anchor="start" x="11.5" y="-3282.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ rbegin()</text>
<text text-anchor="start" x="11.5" y="-3271.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 33 more...</text>
<text text-anchor="start" x="11.5" y="-3260.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetContainer()</text>
<text text-anchor="start" x="11.5" y="-3249.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetContainer()</text>
<text text-anchor="start" x="11.5" y="-3238.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMaxBufferSize()</text>
<text text-anchor="start" x="11.5" y="-3227.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetMaxBufferSize()</text>
<text text-anchor="start" x="11.5" y="-3216.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSortedPartSize()</text>
<text text-anchor="start" x="11.5" y="-3205.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetSortedPartSize()</text>
<text text-anchor="start" x="11.5" y="-3194.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ empty()</text>
<text text-anchor="start" x="11.5" y="-3183.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsSorted()</text>
<text text-anchor="start" x="11.5" y="-3172.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="11.5" y="-3161.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="11.5" y="-3150.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="11.5" y="-3139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* key_type</text>
<text text-anchor="start" x="11.5" y="-3128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* data_type</text>
<text text-anchor="start" x="11.5" y="-3117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* value_type</text>
<text text-anchor="start" x="11.5" y="-3106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* key_compare</text>
<text text-anchor="start" x="11.5" y="-3095.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pointer</text>
<text text-anchor="start" x="11.5" y="-3084.5" font-family="Helvetica,sans-Serif" font-size="10.00">* reference</text>
<text text-anchor="start" x="11.5" y="-3073.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reference</text>
<text text-anchor="start" x="11.5" y="-3062.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ContainerType</text>
<text text-anchor="start" x="11.5" y="-3051.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="11.5" y="-3040.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="11.5" y="-3029.5" font-family="Helvetica,sans-Serif" font-size="10.00">* iterator</text>
<text text-anchor="start" x="11.5" y="-3018.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_iterator</text>
<text text-anchor="start" x="11.5" y="-3007.5" font-family="Helvetica,sans-Serif" font-size="10.00">* reverse_iterator</text>
<text text-anchor="start" x="11.5" y="-2996.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reverse_iterator</text>
<text text-anchor="start" x="11.5" y="-2985.5" font-family="Helvetica,sans-Serif" font-size="10.00">* size_type</text>
<text text-anchor="start" x="11.5" y="-2974.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_iterator</text>
<text text-anchor="start" x="11.5" y="-2963.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_const_iterator</text>
<text text-anchor="start" x="11.5" y="-2952.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_reverse_iterator</text>
<text text-anchor="start" x="11.5" y="-2941.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_const_reverse_iterator</text>
<text text-anchor="start" x="11.5" y="-2930.5" font-family="Helvetica,sans-Serif" font-size="10.00">* difference_type</text>
<text text-anchor="start" x="11.5" y="-2919.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mData</text>
<text text-anchor="start" x="11.5" y="-2908.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSortedPartSize</text>
<text text-anchor="start" x="11.5" y="-2897.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxBufferSize</text>
<text text-anchor="start" x="11.5" y="-2886.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="11.5" y="-2875.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="11.5" y="-2864.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="11.5" y="-2853.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="11.5" y="-2842.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="11.5" y="-2831.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="11.5" y="-2820.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="11.5" y="-2809.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~PointerVectorSet()</text>
<text text-anchor="start" x="11.5" y="-2798.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="11.5" y="-2787.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="11.5" y="-2776.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="11.5" y="-2765.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==()</text>
<text text-anchor="start" x="11.5" y="-2754.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&lt;()</text>
<text text-anchor="start" x="11.5" y="-2743.5" font-family="Helvetica,sans-Serif" font-size="10.00">* begin()</text>
<text text-anchor="start" x="11.5" y="-2732.5" font-family="Helvetica,sans-Serif" font-size="10.00">* begin()</text>
<text text-anchor="start" x="11.5" y="-2721.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cbegin()</text>
<text text-anchor="start" x="11.5" y="-2710.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cbegin()</text>
<text text-anchor="start" x="11.5" y="-2699.5" font-family="Helvetica,sans-Serif" font-size="10.00">* end()</text>
<text text-anchor="start" x="11.5" y="-2688.5" font-family="Helvetica,sans-Serif" font-size="10.00">* end()</text>
<text text-anchor="start" x="11.5" y="-2677.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cend()</text>
<text text-anchor="start" x="11.5" y="-2666.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cend()</text>
<text text-anchor="start" x="11.5" y="-2655.5" font-family="Helvetica,sans-Serif" font-size="10.00">* rbegin()</text>
<text text-anchor="start" x="11.5" y="-2644.5" font-family="Helvetica,sans-Serif" font-size="10.00">* rbegin()</text>
<text text-anchor="start" x="11.5" y="-2633.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 33 more...</text>
<text text-anchor="start" x="11.5" y="-2622.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetContainer()</text>
<text text-anchor="start" x="11.5" y="-2611.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetContainer()</text>
<text text-anchor="start" x="11.5" y="-2600.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMaxBufferSize()</text>
<text text-anchor="start" x="11.5" y="-2589.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetMaxBufferSize()</text>
<text text-anchor="start" x="11.5" y="-2578.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSortedPartSize()</text>
<text text-anchor="start" x="11.5" y="-2567.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSortedPartSize()</text>
<text text-anchor="start" x="11.5" y="-2556.5" font-family="Helvetica,sans-Serif" font-size="10.00">* empty()</text>
<text text-anchor="start" x="11.5" y="-2545.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsSorted()</text>
<text text-anchor="start" x="11.5" y="-2534.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="11.5" y="-2523.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="11.5" y="-2512.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="11.5" y="-2501.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyOf()</text>
<text text-anchor="start" x="11.5" y="-2490.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyOf()</text>
<text text-anchor="start" x="11.5" y="-2479.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyOf()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="#404040" d="M91,-2472.24C91,-2441.8 91,-2411.52 91,-2381.82"/>
<polygon fill="none" stroke="#404040" points="91,-2381.57 87,-2375.57 91,-2369.57 95,-2375.57 91,-2381.57"/>
<text text-anchor="middle" x="118.5" y="-2446" font-family="Helvetica,sans-Serif" font-size="10.00"> #mDofSet</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="200.5,-1553.5 200.5,-2424.5 349.5,-2424.5 349.5,-1553.5 200.5,-1553.5"/>
<text text-anchor="middle" x="275" y="-2412.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="200.5,-2405.5 349.5,-2405.5 "/>
<text text-anchor="middle" x="275" y="-2393.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="200.5,-2386.5 349.5,-2386.5 "/>
<text text-anchor="start" x="208.5" y="-2374.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="208.5" y="-2363.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="208.5" y="-2352.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="208.5" y="-2341.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="208.5" y="-2330.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="208.5" y="-2319.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="208.5" y="-2308.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="208.5" y="-2297.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="208.5" y="-2286.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="208.5" y="-2275.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="208.5" y="-2264.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="208.5" y="-2253.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="208.5" y="-2242.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="208.5" y="-2231.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="208.5" y="-2220.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="208.5" y="-2209.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="208.5" y="-2198.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="208.5" y="-2187.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="208.5" y="-2176.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="208.5" y="-2165.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="208.5" y="-2154.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="208.5" y="-2143.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="208.5" y="-2132.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="208.5" y="-2121.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="208.5" y="-2110.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="208.5" y="-2099.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="208.5" y="-2088.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="208.5" y="-2077.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="208.5" y="-2066.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="208.5" y="-2055.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="208.5" y="-2044.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="208.5" y="-2033.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="208.5" y="-2022.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="208.5" y="-2011.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="208.5" y="-2000.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="208.5" y="-1989.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="208.5" y="-1978.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="208.5" y="-1967.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="208.5" y="-1956.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="208.5" y="-1945.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="208.5" y="-1934.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="208.5" y="-1923.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="208.5" y="-1912.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="208.5" y="-1901.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="208.5" y="-1890.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="208.5" y="-1879.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="208.5" y="-1868.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="208.5" y="-1857.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="208.5" y="-1846.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="208.5" y="-1835.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="208.5" y="-1824.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="208.5" y="-1813.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="208.5" y="-1802.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="208.5" y="-1791.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="208.5" y="-1780.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="208.5" y="-1769.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="208.5" y="-1758.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="208.5" y="-1747.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="208.5" y="-1736.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="208.5" y="-1725.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="208.5" y="-1714.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="208.5" y="-1703.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="208.5" y="-1692.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="208.5" y="-1681.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="208.5" y="-1670.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="208.5" y="-1659.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="208.5" y="-1648.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="208.5" y="-1637.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="208.5" y="-1626.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="208.5" y="-1615.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="208.5" y="-1604.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="208.5" y="-1593.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="208.5" y="-1582.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="208.5" y="-1571.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="208.5" y="-1560.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M235.85,-1553.31C234.8,-1541.62 233.74,-1529.88 232.68,-1518.11"/>
<polygon fill="none" stroke="#404040" points="232.65,-1517.79 228.13,-1512.17 231.57,-1505.83 236.1,-1511.45 232.65,-1517.79"/>
<text text-anchor="middle" x="263.5" y="-1527" font-family="Helvetica,sans-Serif" font-size="10.00"> #mOptions</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_residual_based_block_builder_and_solver_with_constraints_for_chimera__coll__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
