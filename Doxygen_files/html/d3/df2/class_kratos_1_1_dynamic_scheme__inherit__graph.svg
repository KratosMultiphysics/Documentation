<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::DynamicScheme&lt; TSparseSpace, TDenseSpace &gt; Pages: 1 -->
<!--zoomable 3197 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 196;
var viewHeight = 3197;
var sectionId = 'dynsection-0';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::DynamicScheme&lt; TSparseSpace, TDenseSpace &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Dynamic integration scheme.">
<polygon fill="#bfbfbf" stroke="black" points="2.5,-0.5 2.5,-783.5 185.5,-783.5 185.5,-0.5 2.5,-0.5"/>
<text text-anchor="start" x="10.5" y="-771.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::DynamicScheme</text>
<text text-anchor="middle" x="94" y="-760.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace &gt;</text>
<polyline fill="none" stroke="black" points="2.5,-753.5 185.5,-753.5 "/>
<text text-anchor="start" x="10.5" y="-741.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMatrix</text>
<text text-anchor="start" x="10.5" y="-730.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mVector</text>
<polyline fill="none" stroke="black" points="2.5,-723.5 185.5,-723.5 "/>
<text text-anchor="start" x="10.5" y="-711.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ DynamicScheme()</text>
<text text-anchor="start" x="10.5" y="-700.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ DynamicScheme()</text>
<text text-anchor="start" x="10.5" y="-689.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ DynamicScheme()</text>
<text text-anchor="start" x="10.5" y="-678.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ DynamicScheme()</text>
<text text-anchor="start" x="10.5" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ DynamicScheme()</text>
<text text-anchor="start" x="10.5" y="-656.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ DynamicScheme()</text>
<text text-anchor="start" x="10.5" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ DynamicScheme()</text>
<text text-anchor="start" x="10.5" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ DynamicScheme()</text>
<text text-anchor="start" x="10.5" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="10.5" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~DynamicScheme()</text>
<text text-anchor="start" x="10.5" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="10.5" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateSystemContributions()</text>
<text text-anchor="start" x="10.5" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Calculate_RHS_Contribution()</text>
<text text-anchor="start" x="10.5" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Condition_CalculateSystem</text>
<text text-anchor="start" x="10.5" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">Contributions()</text>
<text text-anchor="start" x="10.5" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Condition_Calculate</text>
<text text-anchor="start" x="10.5" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">_RHS_Contribution()</text>
<text text-anchor="start" x="10.5" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="10.5" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="10.5" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="10.5" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="10.5" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AddDynamicsToLHS()</text>
<text text-anchor="start" x="10.5" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AddDynamicTangentsToLHS()</text>
<text text-anchor="start" x="10.5" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AddDynamicsToRHS()</text>
<text text-anchor="start" x="10.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AddDynamicsToRHS()</text>
<text text-anchor="start" x="10.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AddDynamicForcesToRHS()</text>
<text text-anchor="start" x="10.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="10.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BasePointerType</text>
<text text-anchor="start" x="10.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="10.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DerivedType</text>
<text text-anchor="start" x="10.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="10.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="10.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixType</text>
<text text-anchor="start" x="10.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="10.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="10.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="10.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="10.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMatrix</text>
<text text-anchor="start" x="10.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mVector</text>
<text text-anchor="start" x="10.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DynamicScheme()</text>
<text text-anchor="start" x="10.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DynamicScheme()</text>
<text text-anchor="start" x="10.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DynamicScheme()</text>
<text text-anchor="start" x="10.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DynamicScheme()</text>
<text text-anchor="start" x="10.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DynamicScheme()</text>
<text text-anchor="start" x="10.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DynamicScheme()</text>
<text text-anchor="start" x="10.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DynamicScheme()</text>
<text text-anchor="start" x="10.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DynamicScheme()</text>
<text text-anchor="start" x="10.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="10.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~DynamicScheme()</text>
<text text-anchor="start" x="10.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="10.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateSystemContributions()</text>
<text text-anchor="start" x="10.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Calculate_RHS_Contribution()</text>
<text text-anchor="start" x="10.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Condition_CalculateSystem</text>
<text text-anchor="start" x="10.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">Contributions()</text>
<text text-anchor="start" x="10.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Condition_Calculate</text>
<text text-anchor="start" x="10.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">_RHS_Contribution()</text>
<text text-anchor="start" x="10.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="10.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="10.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="10.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="10.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddDynamicsToLHS()</text>
<text text-anchor="start" x="10.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddDynamicTangentsToLHS()</text>
<text text-anchor="start" x="10.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddDynamicsToRHS()</text>
<text text-anchor="start" x="10.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddDynamicsToRHS()</text>
<text text-anchor="start" x="10.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddDynamicForcesToRHS()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../db/d73/class_kratos_1_1_static_scheme.html" target="_top" xlink:title="Static integration scheme (for static problems)">
<polygon fill="none" stroke="black" points="4.5,-820.5 4.5,-1405.5 183.5,-1405.5 183.5,-820.5 4.5,-820.5"/>
<text text-anchor="start" x="12.5" y="-1393.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::StaticScheme</text>
<text text-anchor="middle" x="94" y="-1382.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace &gt;</text>
<polyline fill="none" stroke="black" points="4.5,-1375.5 183.5,-1375.5 "/>
<text text-anchor="middle" x="94" y="-1363.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="4.5,-1356.5 183.5,-1356.5 "/>
<text text-anchor="start" x="12.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ StaticScheme()</text>
<text text-anchor="start" x="12.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ StaticScheme()</text>
<text text-anchor="start" x="12.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ StaticScheme()</text>
<text text-anchor="start" x="12.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ StaticScheme()</text>
<text text-anchor="start" x="12.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ StaticScheme()</text>
<text text-anchor="start" x="12.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ StaticScheme()</text>
<text text-anchor="start" x="12.5" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ StaticScheme()</text>
<text text-anchor="start" x="12.5" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="12.5" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~StaticScheme()</text>
<text text-anchor="start" x="12.5" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="12.5" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Update()</text>
<text text-anchor="start" x="12.5" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Predict()</text>
<text text-anchor="start" x="12.5" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="12.5" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="12.5" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="12.5" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="12.5" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="12.5" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BasePointerType</text>
<text text-anchor="start" x="12.5" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="12.5" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="12.5" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsVectorType</text>
<text text-anchor="start" x="12.5" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixType</text>
<text text-anchor="start" x="12.5" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="12.5" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="12.5" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="12.5" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodesContainerType</text>
<text text-anchor="start" x="12.5" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementsContainerType</text>
<text text-anchor="start" x="12.5" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConditionsContainerType</text>
<text text-anchor="start" x="12.5" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IntegrationMethodsVectorType</text>
<text text-anchor="start" x="12.5" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IntegrationMethodsScalarType</text>
<text text-anchor="start" x="12.5" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="12.5" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="12.5" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StaticScheme()</text>
<text text-anchor="start" x="12.5" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StaticScheme()</text>
<text text-anchor="start" x="12.5" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StaticScheme()</text>
<text text-anchor="start" x="12.5" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StaticScheme()</text>
<text text-anchor="start" x="12.5" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StaticScheme()</text>
<text text-anchor="start" x="12.5" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StaticScheme()</text>
<text text-anchor="start" x="12.5" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StaticScheme()</text>
<text text-anchor="start" x="12.5" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="12.5" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~StaticScheme()</text>
<text text-anchor="start" x="12.5" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="12.5" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="12.5" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Predict()</text>
<text text-anchor="start" x="12.5" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="12.5" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="12.5" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="12.5" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M94,-810.05C94,-801.27 94,-792.44 94,-783.59"/>
<polygon fill="none" stroke="midnightblue" points="90.5,-810.33 94,-820.33 97.5,-810.33 90.5,-810.33"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d9/d92/class_kratos_1_1_solution_scheme.html" target="_top" xlink:title="Solution scheme base class.">
<polygon fill="none" stroke="black" points="0,-1442.5 0,-2280.5 188,-2280.5 188,-1442.5 0,-1442.5"/>
<text text-anchor="start" x="8" y="-2268.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::SolutionScheme</text>
<text text-anchor="middle" x="94" y="-2257.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace &gt;</text>
<polyline fill="none" stroke="black" points="0,-2250.5 188,-2250.5 "/>
<text text-anchor="start" x="8" y="-2238.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mOptions</text>
<text text-anchor="start" x="8" y="-2227.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mTimeVectorIntegrationMethods</text>
<text text-anchor="start" x="8" y="-2216.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mTimeScalarIntegrationMethods</text>
<text text-anchor="start" x="8" y="-2205.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mProcesses</text>
<polyline fill="none" stroke="black" points="0,-2198.5 188,-2198.5 "/>
<text text-anchor="start" x="8" y="-2186.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionScheme()</text>
<text text-anchor="start" x="8" y="-2175.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionScheme()</text>
<text text-anchor="start" x="8" y="-2164.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionScheme()</text>
<text text-anchor="start" x="8" y="-2153.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionScheme()</text>
<text text-anchor="start" x="8" y="-2142.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionScheme()</text>
<text text-anchor="start" x="8" y="-2131.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionScheme()</text>
<text text-anchor="start" x="8" y="-2120.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionScheme()</text>
<text text-anchor="start" x="8" y="-2109.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionScheme()</text>
<text text-anchor="start" x="8" y="-2098.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionScheme()</text>
<text text-anchor="start" x="8" y="-2087.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="8" y="-2076.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SolutionScheme()</text>
<text text-anchor="start" x="8" y="-2065.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetOptions()</text>
<text text-anchor="start" x="8" y="-2054.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetOptions()</text>
<text text-anchor="start" x="8" y="-2043.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetProcess()</text>
<text text-anchor="start" x="8" y="-2032.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetProcessVector()</text>
<text text-anchor="start" x="8" y="-2021.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeElements()</text>
<text text-anchor="start" x="8" y="-2010.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeConditions()</text>
<text text-anchor="start" x="8" y="-1999.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeNonLinearIteration()</text>
<text text-anchor="start" x="8" y="-1988.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeNonLinearIteration()</text>
<text text-anchor="start" x="8" y="-1977.5" font-family="Helvetica,sans-Serif" font-size="10.00"># IntegrationMethodUpdate()</text>
<text text-anchor="start" x="8" y="-1966.5" font-family="Helvetica,sans-Serif" font-size="10.00"># IntegrationMethodPredict()</text>
<text text-anchor="start" x="8" y="-1955.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionSchemeType</text>
<text text-anchor="start" x="8" y="-1944.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionSchemePointerType</text>
<text text-anchor="start" x="8" y="-1933.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="8" y="-1922.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="8" y="-1911.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixType</text>
<text text-anchor="start" x="8" y="-1900.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="8" y="-1889.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="8" y="-1878.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="8" y="-1867.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodesContainerType</text>
<text text-anchor="start" x="8" y="-1856.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementsContainerType</text>
<text text-anchor="start" x="8" y="-1845.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 14 more...</text>
<text text-anchor="start" x="8" y="-1834.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mOptions</text>
<text text-anchor="start" x="8" y="-1823.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mTimeVectorIntegrationMethods</text>
<text text-anchor="start" x="8" y="-1812.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mTimeScalarIntegrationMethods</text>
<text text-anchor="start" x="8" y="-1801.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mProcesses</text>
<text text-anchor="start" x="8" y="-1790.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionScheme()</text>
<text text-anchor="start" x="8" y="-1779.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionScheme()</text>
<text text-anchor="start" x="8" y="-1768.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionScheme()</text>
<text text-anchor="start" x="8" y="-1757.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionScheme()</text>
<text text-anchor="start" x="8" y="-1746.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionScheme()</text>
<text text-anchor="start" x="8" y="-1735.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionScheme()</text>
<text text-anchor="start" x="8" y="-1724.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionScheme()</text>
<text text-anchor="start" x="8" y="-1713.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionScheme()</text>
<text text-anchor="start" x="8" y="-1702.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionScheme()</text>
<text text-anchor="start" x="8" y="-1691.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="8" y="-1680.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~SolutionScheme()</text>
<text text-anchor="start" x="8" y="-1669.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefaultFlags()</text>
<text text-anchor="start" x="8" y="-1658.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="8" y="-1647.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1636.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1625.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeNonLinearIteration()</text>
<text text-anchor="start" x="8" y="-1614.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeNonLinearIteration()</text>
<text text-anchor="start" x="8" y="-1603.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Predict()</text>
<text text-anchor="start" x="8" y="-1592.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="8" y="-1581.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateDofs()</text>
<text text-anchor="start" x="8" y="-1570.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateVariables()</text>
<text text-anchor="start" x="8" y="-1559.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 18 more...</text>
<text text-anchor="start" x="8" y="-1548.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetOptions()</text>
<text text-anchor="start" x="8" y="-1537.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetOptions()</text>
<text text-anchor="start" x="8" y="-1526.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetProcess()</text>
<text text-anchor="start" x="8" y="-1515.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetProcessVector()</text>
<text text-anchor="start" x="8" y="-1504.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeElements()</text>
<text text-anchor="start" x="8" y="-1493.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeConditions()</text>
<text text-anchor="start" x="8" y="-1482.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeNonLinearIteration()</text>
<text text-anchor="start" x="8" y="-1471.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeNonLinearIteration()</text>
<text text-anchor="start" x="8" y="-1460.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IntegrationMethodUpdate()</text>
<text text-anchor="start" x="8" y="-1449.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IntegrationMethodPredict()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M94,-1432.15C94,-1423.23 94,-1414.35 94,-1405.54"/>
<polygon fill="none" stroke="midnightblue" points="90.5,-1432.24 94,-1442.24 97.5,-1432.24 90.5,-1432.24"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="19.5,-2317.5 19.5,-3188.5 168.5,-3188.5 168.5,-2317.5 19.5,-2317.5"/>
<text text-anchor="middle" x="94" y="-3176.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="19.5,-3169.5 168.5,-3169.5 "/>
<text text-anchor="middle" x="94" y="-3157.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="19.5,-3150.5 168.5,-3150.5 "/>
<text text-anchor="start" x="27.5" y="-3138.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="27.5" y="-3127.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="27.5" y="-3116.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="27.5" y="-3105.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="27.5" y="-3094.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="27.5" y="-3083.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="27.5" y="-3072.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="27.5" y="-3061.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="27.5" y="-3050.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="27.5" y="-3039.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="27.5" y="-3028.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="27.5" y="-3017.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="27.5" y="-3006.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="27.5" y="-2995.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="27.5" y="-2984.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="27.5" y="-2973.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="27.5" y="-2962.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="27.5" y="-2951.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="27.5" y="-2940.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="27.5" y="-2929.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="27.5" y="-2918.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="27.5" y="-2907.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="27.5" y="-2896.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="27.5" y="-2885.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="27.5" y="-2874.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="27.5" y="-2863.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="27.5" y="-2852.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="27.5" y="-2841.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="27.5" y="-2830.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="27.5" y="-2819.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="27.5" y="-2808.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="27.5" y="-2797.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="27.5" y="-2786.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="27.5" y="-2775.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="27.5" y="-2764.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="27.5" y="-2753.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="27.5" y="-2742.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="27.5" y="-2731.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="27.5" y="-2720.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="27.5" y="-2709.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="27.5" y="-2698.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="27.5" y="-2687.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="27.5" y="-2676.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="27.5" y="-2665.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="27.5" y="-2654.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="27.5" y="-2643.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="27.5" y="-2632.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="27.5" y="-2621.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="27.5" y="-2610.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="27.5" y="-2599.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="27.5" y="-2588.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="27.5" y="-2577.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="27.5" y="-2566.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="27.5" y="-2555.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="27.5" y="-2544.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="27.5" y="-2533.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="27.5" y="-2522.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="27.5" y="-2511.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="27.5" y="-2500.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="27.5" y="-2489.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="27.5" y="-2478.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="27.5" y="-2467.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="27.5" y="-2456.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="27.5" y="-2445.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="27.5" y="-2434.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="27.5" y="-2423.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="27.5" y="-2412.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="27.5" y="-2401.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="27.5" y="-2390.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="27.5" y="-2379.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="27.5" y="-2368.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="27.5" y="-2357.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="27.5" y="-2346.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="27.5" y="-2335.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="27.5" y="-2324.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M94,-2307.31C94,-2298.42 94,-2289.53 94,-2280.66"/>
<polygon fill="none" stroke="midnightblue" points="90.5,-2307.35 94,-2317.35 97.5,-2307.35 90.5,-2307.35"/>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_dynamic_scheme__inherit__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
