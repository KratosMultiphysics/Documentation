<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::NonlocalCamClayModel Pages: 1 -->
<!--zoomable 4786 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 324;
var viewHeight = 4786;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::NonlocalCamClayModel</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Short class definition.">
<polygon fill="#bfbfbf" stroke="black" points="66.5,-0.5 66.5,-563.5 248.5,-563.5 248.5,-0.5 66.5,-0.5"/>
<text text-anchor="middle" x="157.5" y="-551.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NonlocalCamClayModel</text>
<polyline fill="none" stroke="black" points="66.5,-544.5 248.5,-544.5 "/>
<text text-anchor="middle" x="157.5" y="-532.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="66.5,-525.5 248.5,-525.5 "/>
<text text-anchor="start" x="74.5" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NonlocalCamClayModel()</text>
<text text-anchor="start" x="74.5" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NonlocalCamClayModel()</text>
<text text-anchor="start" x="74.5" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="74.5" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="74.5" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NonlocalCamClayModel()</text>
<text text-anchor="start" x="74.5" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressAndConstitutive</text>
<text text-anchor="start" x="74.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="74.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="74.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Has()</text>
<text text-anchor="start" x="74.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="74.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="74.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="74.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="74.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="74.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElasticityModelType</text>
<text text-anchor="start" x="74.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElasticityModelPointer</text>
<text text-anchor="start" x="74.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HardeningRuleType</text>
<text text-anchor="start" x="74.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* YieldSurfaceType</text>
<text text-anchor="start" x="74.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* YieldSurfacePointer</text>
<text text-anchor="start" x="74.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="74.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseTypePointer</text>
<text text-anchor="start" x="74.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="74.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VoigtIndexType</text>
<text text-anchor="start" x="74.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MatrixType</text>
<text text-anchor="start" x="74.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ModelDataType</text>
<text text-anchor="start" x="74.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaterialDataType</text>
<text text-anchor="start" x="74.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticDataType</text>
<text text-anchor="start" x="74.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InternalVariablesType</text>
<text text-anchor="start" x="74.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="74.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="74.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="74.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="74.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="74.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NonlocalCamClayModel()</text>
<text text-anchor="start" x="74.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NonlocalCamClayModel()</text>
<text text-anchor="start" x="74.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="74.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="74.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~NonlocalCamClayModel()</text>
<text text-anchor="start" x="74.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressAndConstitutive</text>
<text text-anchor="start" x="74.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="74.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="74.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Has()</text>
<text text-anchor="start" x="74.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="74.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="74.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="74.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="74.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d8/db3/class_kratos_1_1_non_associative_plasticity_model.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="44,-601.5 44,-1659.5 271,-1659.5 271,-601.5 44,-601.5"/>
<text text-anchor="start" x="52" y="-1647.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NonAssociativePlasticity</text>
<text text-anchor="start" x="52" y="-1636.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model&lt; BorjaModel, ModifiedCamClay</text>
<text text-anchor="middle" x="157.5" y="-1625.5" font-family="Helvetica,sans-Serif" font-size="10.00">YieldSurface&lt; CamClayHardeningRule &gt; &gt;</text>
<polyline fill="none" stroke="black" points="44,-1618.5 271,-1618.5 "/>
<text text-anchor="start" x="52" y="-1606.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInternal</text>
<text text-anchor="start" x="52" y="-1595.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mPreviousInternal</text>
<text text-anchor="start" x="52" y="-1584.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mStressMatrix</text>
<polyline fill="none" stroke="black" points="44,-1577.5 271,-1577.5 "/>
<text text-anchor="start" x="52" y="-1565.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NonAssociativePlasticity</text>
<text text-anchor="start" x="52" y="-1554.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="52" y="-1543.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NonAssociativePlasticity</text>
<text text-anchor="start" x="52" y="-1532.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="52" y="-1521.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="52" y="-1510.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="52" y="-1499.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NonAssociativePlasticity</text>
<text text-anchor="start" x="52" y="-1488.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="52" y="-1477.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="52" y="-1466.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="52" y="-1455.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressTensor()</text>
<text text-anchor="start" x="52" y="-1444.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="52" y="-1433.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressAndConstitutive</text>
<text text-anchor="start" x="52" y="-1422.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="52" y="-1411.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="52" y="-1400.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="52" y="-1389.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="52" y="-1378.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AuxiliarCompressTensor()</text>
<text text-anchor="start" x="52" y="-1367.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetConstitutiveMatrixToThe</text>
<text text-anchor="start" x="52" y="-1356.5" font-family="Helvetica,sans-Serif" font-size="10.00">ApropiateSize()</text>
<text text-anchor="start" x="52" y="-1345.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ReturnStressToYieldSurface()</text>
<text text-anchor="start" x="52" y="-1334.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeElastoPlasticTangent</text>
<text text-anchor="start" x="52" y="-1323.5" font-family="Helvetica,sans-Serif" font-size="10.00">Matrix()</text>
<text text-anchor="start" x="52" y="-1312.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeSolutionWithChange()</text>
<text text-anchor="start" x="52" y="-1301.5" font-family="Helvetica,sans-Serif" font-size="10.00"># EvaluateUnloadingCondition()</text>
<text text-anchor="start" x="52" y="-1290.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeSubsteppingElasto</text>
<text text-anchor="start" x="52" y="-1279.5" font-family="Helvetica,sans-Serif" font-size="10.00">PlasticProblem()</text>
<text text-anchor="start" x="52" y="-1268.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeElastoPlasticProblem()</text>
<text text-anchor="start" x="52" y="-1257.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeOneStepElastoPlastic</text>
<text text-anchor="start" x="52" y="-1246.5" font-family="Helvetica,sans-Serif" font-size="10.00">Problem()</text>
<text text-anchor="start" x="52" y="-1235.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ConvertHenckyVectorToCauchy</text>
<text text-anchor="start" x="52" y="-1224.5" font-family="Helvetica,sans-Serif" font-size="10.00">GreenTensor()</text>
<text text-anchor="start" x="52" y="-1213.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 9 more...</text>
<text text-anchor="start" x="52" y="-1202.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElasticityModelType</text>
<text text-anchor="start" x="52" y="-1191.5" font-family="Helvetica,sans-Serif" font-size="10.00">* YieldSurfaceType</text>
<text text-anchor="start" x="52" y="-1180.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="52" y="-1169.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseTypePointer</text>
<text text-anchor="start" x="52" y="-1158.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="52" y="-1147.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VoigtIndexType</text>
<text text-anchor="start" x="52" y="-1136.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MatrixType</text>
<text text-anchor="start" x="52" y="-1125.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="52" y="-1114.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ModelDataType</text>
<text text-anchor="start" x="52" y="-1103.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaterialDataType</text>
<text text-anchor="start" x="52" y="-1092.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticDataType</text>
<text text-anchor="start" x="52" y="-1081.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InternalVariablesType</text>
<text text-anchor="start" x="52" y="-1070.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StrainMeasureType</text>
<text text-anchor="start" x="52" y="-1059.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StressMeasureType</text>
<text text-anchor="start" x="52" y="-1048.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="52" y="-1037.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="52" y="-1026.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInternal</text>
<text text-anchor="start" x="52" y="-1015.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPreviousInternal</text>
<text text-anchor="start" x="52" y="-1004.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mStressMatrix</text>
<text text-anchor="start" x="52" y="-993.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="52" y="-982.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="52" y="-971.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="52" y="-960.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NonAssociativePlasticity</text>
<text text-anchor="start" x="52" y="-949.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="52" y="-938.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NonAssociativePlasticity</text>
<text text-anchor="start" x="52" y="-927.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="52" y="-916.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="52" y="-905.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="52" y="-894.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~NonAssociativePlasticity</text>
<text text-anchor="start" x="52" y="-883.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="52" y="-872.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="52" y="-861.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="52" y="-850.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressTensor()</text>
<text text-anchor="start" x="52" y="-839.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="52" y="-828.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressAndConstitutive</text>
<text text-anchor="start" x="52" y="-817.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="52" y="-806.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="52" y="-795.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="52" y="-784.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="52" y="-773.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AuxiliarCompressTensor()</text>
<text text-anchor="start" x="52" y="-762.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetConstitutiveMatrixToThe</text>
<text text-anchor="start" x="52" y="-751.5" font-family="Helvetica,sans-Serif" font-size="10.00">ApropiateSize()</text>
<text text-anchor="start" x="52" y="-740.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReturnStressToYieldSurface()</text>
<text text-anchor="start" x="52" y="-729.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeElastoPlasticTangent</text>
<text text-anchor="start" x="52" y="-718.5" font-family="Helvetica,sans-Serif" font-size="10.00">Matrix()</text>
<text text-anchor="start" x="52" y="-707.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeSolutionWithChange()</text>
<text text-anchor="start" x="52" y="-696.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EvaluateUnloadingCondition()</text>
<text text-anchor="start" x="52" y="-685.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeSubsteppingElasto</text>
<text text-anchor="start" x="52" y="-674.5" font-family="Helvetica,sans-Serif" font-size="10.00">PlasticProblem()</text>
<text text-anchor="start" x="52" y="-663.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeElastoPlasticProblem()</text>
<text text-anchor="start" x="52" y="-652.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeOneStepElastoPlastic</text>
<text text-anchor="start" x="52" y="-641.5" font-family="Helvetica,sans-Serif" font-size="10.00">Problem()</text>
<text text-anchor="start" x="52" y="-630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConvertHenckyVectorToCauchy</text>
<text text-anchor="start" x="52" y="-619.5" font-family="Helvetica,sans-Serif" font-size="10.00">GreenTensor()</text>
<text text-anchor="start" x="52" y="-608.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 9 more...</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M157.5,-591.11C157.5,-581.83 157.5,-572.62 157.5,-563.52"/>
<polygon fill="none" stroke="midnightblue" points="154,-591.22 157.5,-601.22 161,-591.22 154,-591.22"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d6/d39/class_kratos_1_1_plasticity_model.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="61,-1697.5 61,-2689.5 254,-2689.5 254,-1697.5 61,-1697.5"/>
<text text-anchor="start" x="69" y="-2677.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::PlasticityModel</text>
<text text-anchor="middle" x="157.5" y="-2666.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TElasticityModel, TYieldSurface &gt;</text>
<polyline fill="none" stroke="black" points="61,-2659.5 254,-2659.5 "/>
<text text-anchor="start" x="69" y="-2647.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mElasticityModel</text>
<text text-anchor="start" x="69" y="-2636.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mYieldSurface</text>
<polyline fill="none" stroke="black" points="61,-2629.5 254,-2629.5 "/>
<text text-anchor="start" x="69" y="-2617.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PlasticityModel()</text>
<text text-anchor="start" x="69" y="-2606.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PlasticityModel()</text>
<text text-anchor="start" x="69" y="-2595.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="69" y="-2584.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="69" y="-2573.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~PlasticityModel()</text>
<text text-anchor="start" x="69" y="-2562.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeMaterial()</text>
<text text-anchor="start" x="69" y="-2551.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeModel()</text>
<text text-anchor="start" x="69" y="-2540.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeModel()</text>
<text text-anchor="start" x="69" y="-2529.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressTensor()</text>
<text text-anchor="start" x="69" y="-2518.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricStress</text>
<text text-anchor="start" x="69" y="-2507.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-2496.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricStress</text>
<text text-anchor="start" x="69" y="-2485.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-2474.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="69" y="-2463.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricConstitutive</text>
<text text-anchor="start" x="69" y="-2452.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-2441.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricConstitutive</text>
<text text-anchor="start" x="69" y="-2430.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-2419.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressAndConstitutive</text>
<text text-anchor="start" x="69" y="-2408.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="69" y="-2397.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricStress</text>
<text text-anchor="start" x="69" y="-2386.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="69" y="-2375.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricStress</text>
<text text-anchor="start" x="69" y="-2364.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="69" y="-2353.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="69" y="-2342.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDomainVariablesList()</text>
<text text-anchor="start" x="69" y="-2331.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Has()</text>
<text text-anchor="start" x="69" y="-2320.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="69" y="-2309.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="69" y="-2298.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetElasticityModel()</text>
<text text-anchor="start" x="69" y="-2287.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="69" y="-2276.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="69" y="-2265.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="69" y="-2254.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetInternalVariables()</text>
<text text-anchor="start" x="69" y="-2243.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElasticityModelType</text>
<text text-anchor="start" x="69" y="-2232.5" font-family="Helvetica,sans-Serif" font-size="10.00">* YieldSurfaceType</text>
<text text-anchor="start" x="69" y="-2221.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="69" y="-2210.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VoigtIndexType</text>
<text text-anchor="start" x="69" y="-2199.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MatrixType</text>
<text text-anchor="start" x="69" y="-2188.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="69" y="-2177.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ModelDataType</text>
<text text-anchor="start" x="69" y="-2166.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticDataType</text>
<text text-anchor="start" x="69" y="-2155.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InternalVariablesType</text>
<text text-anchor="start" x="69" y="-2144.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="69" y="-2133.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="69" y="-2122.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mElasticityModel</text>
<text text-anchor="start" x="69" y="-2111.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mYieldSurface</text>
<text text-anchor="start" x="69" y="-2100.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="69" y="-2089.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="69" y="-2078.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="69" y="-2067.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticityModel()</text>
<text text-anchor="start" x="69" y="-2056.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticityModel()</text>
<text text-anchor="start" x="69" y="-2045.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="69" y="-2034.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="69" y="-2023.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~PlasticityModel()</text>
<text text-anchor="start" x="69" y="-2012.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeMaterial()</text>
<text text-anchor="start" x="69" y="-2001.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeModel()</text>
<text text-anchor="start" x="69" y="-1990.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeModel()</text>
<text text-anchor="start" x="69" y="-1979.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressTensor()</text>
<text text-anchor="start" x="69" y="-1968.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricStress</text>
<text text-anchor="start" x="69" y="-1957.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-1946.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricStress</text>
<text text-anchor="start" x="69" y="-1935.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-1924.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="69" y="-1913.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricConstitutive</text>
<text text-anchor="start" x="69" y="-1902.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-1891.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricConstitutive</text>
<text text-anchor="start" x="69" y="-1880.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-1869.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressAndConstitutive</text>
<text text-anchor="start" x="69" y="-1858.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="69" y="-1847.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricStress</text>
<text text-anchor="start" x="69" y="-1836.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="69" y="-1825.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricStress</text>
<text text-anchor="start" x="69" y="-1814.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="69" y="-1803.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="69" y="-1792.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDomainVariablesList()</text>
<text text-anchor="start" x="69" y="-1781.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Has()</text>
<text text-anchor="start" x="69" y="-1770.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="69" y="-1759.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="69" y="-1748.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetElasticityModel()</text>
<text text-anchor="start" x="69" y="-1737.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="69" y="-1726.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="69" y="-1715.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="69" y="-1704.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetInternalVariables()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M157.5,-1687.32C157.5,-1678.1 157.5,-1668.86 157.5,-1659.62"/>
<polygon fill="none" stroke="midnightblue" points="154,-1687.33 157.5,-1697.33 161,-1687.33 154,-1687.33"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../d0/dbd/class_kratos_1_1_constitutive_model.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="65,-2727.5 65,-3741.5 250,-3741.5 250,-2727.5 65,-2727.5"/>
<text text-anchor="middle" x="157.5" y="-3729.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ConstitutiveModel</text>
<polyline fill="none" stroke="black" points="65,-3722.5 250,-3722.5 "/>
<text text-anchor="middle" x="157.5" y="-3710.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="65,-3703.5 250,-3703.5 "/>
<text text-anchor="start" x="73" y="-3691.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="73" y="-3680.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="73" y="-3669.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="73" y="-3658.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="73" y="-3647.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="73" y="-3636.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="73" y="-3625.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-3614.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-3603.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="73" y="-3592.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="73" y="-3581.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-3570.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeMaterial()</text>
<text text-anchor="start" x="73" y="-3559.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeModel()</text>
<text text-anchor="start" x="73" y="-3548.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeModel()</text>
<text text-anchor="start" x="73" y="-3537.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStrainEnergy()</text>
<text text-anchor="start" x="73" y="-3526.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressTensor()</text>
<text text-anchor="start" x="73" y="-3515.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricStress</text>
<text text-anchor="start" x="73" y="-3504.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-3493.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricStress</text>
<text text-anchor="start" x="73" y="-3482.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-3471.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="73" y="-3460.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricConstitutive</text>
<text text-anchor="start" x="73" y="-3449.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-3438.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricConstitutive</text>
<text text-anchor="start" x="73" y="-3427.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-3416.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressAndConstitutive</text>
<text text-anchor="start" x="73" y="-3405.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="73" y="-3394.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricStress</text>
<text text-anchor="start" x="73" y="-3383.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="73" y="-3372.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricStress</text>
<text text-anchor="start" x="73" y="-3361.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="73" y="-3350.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="73" y="-3339.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Has()</text>
<text text-anchor="start" x="73" y="-3328.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="73" y="-3317.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="73" y="-3306.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="73" y="-3295.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="73" y="-3284.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDomainVariablesList()</text>
<text text-anchor="start" x="73" y="-3273.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="73" y="-3262.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="73" y="-3251.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="73" y="-3240.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="73" y="-3229.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="73" y="-3218.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MatrixType</text>
<text text-anchor="start" x="73" y="-3207.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ModelDataType</text>
<text text-anchor="start" x="73" y="-3196.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaterialDataType</text>
<text text-anchor="start" x="73" y="-3185.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StrainMeasureType</text>
<text text-anchor="start" x="73" y="-3174.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StressMeasureType</text>
<text text-anchor="start" x="73" y="-3163.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="73" y="-3152.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="73" y="-3141.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="73" y="-3130.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="73" y="-3119.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="73" y="-3108.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-3097.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-3086.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="73" y="-3075.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="73" y="-3064.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-3053.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeMaterial()</text>
<text text-anchor="start" x="73" y="-3042.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeModel()</text>
<text text-anchor="start" x="73" y="-3031.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeModel()</text>
<text text-anchor="start" x="73" y="-3020.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStrainEnergy()</text>
<text text-anchor="start" x="73" y="-3009.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressTensor()</text>
<text text-anchor="start" x="73" y="-2998.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricStress</text>
<text text-anchor="start" x="73" y="-2987.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-2976.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricStress</text>
<text text-anchor="start" x="73" y="-2965.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-2954.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="73" y="-2943.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricConstitutive</text>
<text text-anchor="start" x="73" y="-2932.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-2921.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricConstitutive</text>
<text text-anchor="start" x="73" y="-2910.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-2899.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressAndConstitutive</text>
<text text-anchor="start" x="73" y="-2888.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="73" y="-2877.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricStress</text>
<text text-anchor="start" x="73" y="-2866.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="73" y="-2855.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricStress</text>
<text text-anchor="start" x="73" y="-2844.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="73" y="-2833.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="73" y="-2822.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Has()</text>
<text text-anchor="start" x="73" y="-2811.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="73" y="-2800.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="73" y="-2789.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="73" y="-2778.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="73" y="-2767.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDomainVariablesList()</text>
<text text-anchor="start" x="73" y="-2756.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="73" y="-2745.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="73" y="-2734.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M157.5,-2717.05C157.5,-2707.96 157.5,-2698.87 157.5,-2689.79"/>
<polygon fill="none" stroke="midnightblue" points="154,-2717.32 157.5,-2727.32 161,-2717.32 154,-2717.32"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../d4/ddc/class_kratos_1_1array__1d.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="0,-3817 0,-4633 149,-4633 149,-3817 0,-3817"/>
<text text-anchor="middle" x="74.5" y="-4621" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::array_1d&lt; T, N &gt;</text>
<polyline fill="none" stroke="black" points="0,-4614 149,-4614 "/>
<text text-anchor="middle" x="74.5" y="-4602" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-4595 149,-4595 "/>
<text text-anchor="start" x="8" y="-4583" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-4572" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-4561" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-4550" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-4539" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-4528" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-4517" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-4506" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="8" y="-4495" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="8" y="-4484" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="8" y="-4473" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="8" y="-4462" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-4451" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-4440" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator+=()</text>
<text text-anchor="start" x="8" y="-4429" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator&#45;=()</text>
<text text-anchor="start" x="8" y="-4418" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator/=()</text>
<text text-anchor="start" x="8" y="-4407" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator==()</text>
<text text-anchor="start" x="8" y="-4396" font-family="Helvetica,sans-Serif" font-size="10.00">* size_type</text>
<text text-anchor="start" x="8" y="-4385" font-family="Helvetica,sans-Serif" font-size="10.00">* difference_type</text>
<text text-anchor="start" x="8" y="-4374" font-family="Helvetica,sans-Serif" font-size="10.00">* value_type</text>
<text text-anchor="start" x="8" y="-4363" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reference</text>
<text text-anchor="start" x="8" y="-4352" font-family="Helvetica,sans-Serif" font-size="10.00">* reference</text>
<text text-anchor="start" x="8" y="-4341" font-family="Helvetica,sans-Serif" font-size="10.00">* array_type</text>
<text text-anchor="start" x="8" y="-4330" font-family="Helvetica,sans-Serif" font-size="10.00">* pointer</text>
<text text-anchor="start" x="8" y="-4319" font-family="Helvetica,sans-Serif" font-size="10.00">* self_type</text>
<text text-anchor="start" x="8" y="-4308" font-family="Helvetica,sans-Serif" font-size="10.00">* const_closure_type</text>
<text text-anchor="start" x="8" y="-4297" font-family="Helvetica,sans-Serif" font-size="10.00">* closure_type</text>
<text text-anchor="start" x="8" y="-4286" font-family="Helvetica,sans-Serif" font-size="10.00">* vector_temporary_type</text>
<text text-anchor="start" x="8" y="-4275" font-family="Helvetica,sans-Serif" font-size="10.00">* storage_category</text>
<text text-anchor="start" x="8" y="-4264" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-4253" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-4242" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reverse_iterator</text>
<text text-anchor="start" x="8" y="-4231" font-family="Helvetica,sans-Serif" font-size="10.00">* reverse_iterator</text>
<text text-anchor="start" x="8" y="-4220" font-family="Helvetica,sans-Serif" font-size="10.00">* const_iterator_type</text>
<text text-anchor="start" x="8" y="-4209" font-family="Helvetica,sans-Serif" font-size="10.00">* iterator_type</text>
<text text-anchor="start" x="8" y="-4198" font-family="Helvetica,sans-Serif" font-size="10.00">* find()</text>
<text text-anchor="start" x="8" y="-4187" font-family="Helvetica,sans-Serif" font-size="10.00">* find()</text>
<text text-anchor="start" x="8" y="-4176" font-family="Helvetica,sans-Serif" font-size="10.00">* size()</text>
<text text-anchor="start" x="8" y="-4165" font-family="Helvetica,sans-Serif" font-size="10.00">* minus_assign()</text>
<text text-anchor="start" x="8" y="-4154" font-family="Helvetica,sans-Serif" font-size="10.00">* data()</text>
<text text-anchor="start" x="8" y="-4143" font-family="Helvetica,sans-Serif" font-size="10.00">* data()</text>
<text text-anchor="start" x="8" y="-4132" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="8" y="-4121" font-family="Helvetica,sans-Serif" font-size="10.00">* data_</text>
<text text-anchor="start" x="8" y="-4110" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4099" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4088" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4077" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4066" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4055" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4044" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4033" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="8" y="-4022" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="8" y="-4011" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="8" y="-4000" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="8" y="-3989" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-3978" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-3967" font-family="Helvetica,sans-Serif" font-size="10.00">* operator+=()</text>
<text text-anchor="start" x="8" y="-3956" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&#45;=()</text>
<text text-anchor="start" x="8" y="-3945" font-family="Helvetica,sans-Serif" font-size="10.00">* operator/=()</text>
<text text-anchor="start" x="8" y="-3934" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==()</text>
<text text-anchor="start" x="8" y="-3923" font-family="Helvetica,sans-Serif" font-size="10.00">* resize()</text>
<text text-anchor="start" x="8" y="-3912" font-family="Helvetica,sans-Serif" font-size="10.00">* assign_temporary()</text>
<text text-anchor="start" x="8" y="-3901" font-family="Helvetica,sans-Serif" font-size="10.00">* operator*=()</text>
<text text-anchor="start" x="8" y="-3890" font-family="Helvetica,sans-Serif" font-size="10.00">* plus_assign()</text>
<text text-anchor="start" x="8" y="-3879" font-family="Helvetica,sans-Serif" font-size="10.00">* assign()</text>
<text text-anchor="start" x="8" y="-3868" font-family="Helvetica,sans-Serif" font-size="10.00">* swap()</text>
<text text-anchor="start" x="8" y="-3857" font-family="Helvetica,sans-Serif" font-size="10.00">* insert_element()</text>
<text text-anchor="start" x="8" y="-3846" font-family="Helvetica,sans-Serif" font-size="10.00">* erase_element()</text>
<text text-anchor="start" x="8" y="-3835" font-family="Helvetica,sans-Serif" font-size="10.00">* clear()</text>
<text text-anchor="start" x="8" y="-3824" font-family="Helvetica,sans-Serif" font-size="10.00">* swap</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M108.68,-3816.95C110.43,-3796.05 112.21,-3774.94 113.98,-3753.78"/>
<polygon fill="none" stroke="#404040" points="114,-3753.62 110.51,-3747.3 115,-3741.66 118.48,-3747.97 114,-3753.62"/>
<text text-anchor="middle" x="157.5" y="-3763" font-family="Helvetica,sans-Serif" font-size="10.00"> #mHistoryVector</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:title=" ">
<polygon fill="none" stroke="#bfbfbf" points="13.5,-4698.5 13.5,-4777.5 135.5,-4777.5 135.5,-4698.5 13.5,-4698.5"/>
<text text-anchor="start" x="21.5" y="-4765.5" font-family="Helvetica,sans-Serif" font-size="10.00">boost::numeric::ublas</text>
<text text-anchor="start" x="21.5" y="-4754.5" font-family="Helvetica,sans-Serif" font-size="10.00">::vector_expression&lt;</text>
<text text-anchor="middle" x="74.5" y="-4743.5" font-family="Helvetica,sans-Serif" font-size="10.00"> array_1d&lt; T, N &gt; &gt;</text>
<polyline fill="none" stroke="#bfbfbf" points="13.5,-4736.5 135.5,-4736.5 "/>
<text text-anchor="middle" x="74.5" y="-4724.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#bfbfbf" points="13.5,-4717.5 135.5,-4717.5 "/>
<text text-anchor="middle" x="74.5" y="-4705.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M74.5,-4687.9C74.5,-4672.35 74.5,-4653.75 74.5,-4633.08"/>
<polygon fill="none" stroke="midnightblue" points="71,-4688.17 74.5,-4698.17 78,-4688.17 71,-4688.17"/>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="167,-3789.5 167,-4660.5 316,-4660.5 316,-3789.5 167,-3789.5"/>
<text text-anchor="middle" x="241.5" y="-4648.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="167,-4641.5 316,-4641.5 "/>
<text text-anchor="middle" x="241.5" y="-4629.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="167,-4622.5 316,-4622.5 "/>
<text text-anchor="start" x="175" y="-4610.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="175" y="-4599.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="175" y="-4588.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="175" y="-4577.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="175" y="-4566.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="175" y="-4555.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="175" y="-4544.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="175" y="-4533.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="175" y="-4522.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="175" y="-4511.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="175" y="-4500.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="175" y="-4489.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="175" y="-4478.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="175" y="-4467.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="175" y="-4456.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="175" y="-4445.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="175" y="-4434.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="175" y="-4423.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="175" y="-4412.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="175" y="-4401.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="175" y="-4390.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="175" y="-4379.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="175" y="-4368.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="175" y="-4357.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="175" y="-4346.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="175" y="-4335.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="175" y="-4324.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="175" y="-4313.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="175" y="-4302.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="175" y="-4291.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="175" y="-4280.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="175" y="-4269.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="175" y="-4258.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="175" y="-4247.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="175" y="-4236.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="175" y="-4225.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="175" y="-4214.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="175" y="-4203.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="175" y="-4192.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="175" y="-4181.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="175" y="-4170.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="175" y="-4159.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="175" y="-4148.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="175" y="-4137.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="175" y="-4126.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="175" y="-4115.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="175" y="-4104.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="175" y="-4093.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="175" y="-4082.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="175" y="-4071.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="175" y="-4060.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="175" y="-4049.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="175" y="-4038.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="175" y="-4027.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="175" y="-4016.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="175" y="-4005.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="175" y="-3994.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="175" y="-3983.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="175" y="-3972.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="175" y="-3961.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="175" y="-3950.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="175" y="-3939.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="175" y="-3928.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="175" y="-3917.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="175" y="-3906.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="175" y="-3895.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="175" y="-3884.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="175" y="-3873.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="175" y="-3862.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="175" y="-3851.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="175" y="-3840.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="175" y="-3829.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="175" y="-3818.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="175" y="-3807.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="175" y="-3796.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node4 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M207.96,-3789.29C207.14,-3779.44 206.32,-3769.66 205.5,-3760 205.32,-3757.93 205.15,-3755.85 204.97,-3753.76"/>
<polygon fill="none" stroke="#404040" points="204.97,-3753.74 200.48,-3748.1 203.95,-3741.78 208.45,-3747.42 204.97,-3753.74"/>
<text text-anchor="middle" x="235" y="-3763" font-family="Helvetica,sans-Serif" font-size="10.00"> #mOptions</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_nonlocal_cam_clay_model__coll__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
