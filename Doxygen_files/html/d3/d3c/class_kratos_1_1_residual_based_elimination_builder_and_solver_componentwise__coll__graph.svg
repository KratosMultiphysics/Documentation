<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::ResidualBasedEliminationBuilderAndSolverComponentwise&lt; TSparseSpace, TDenseSpace, TLinearSolver, TVariableType &gt; Pages: 1 -->
<!--zoomable 3375 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 197;
var viewHeight = 3375;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::ResidualBasedEliminationBuilderAndSolverComponentwise&lt; TSparseSpace, TDenseSpace, TLinearSolver, TVariableType &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#bfbfbf" stroke="black" points="1,-0.5 1,-552.5 188,-552.5 188,-0.5 1,-0.5"/>
<text text-anchor="start" x="9" y="-540.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedElimination</text>
<text text-anchor="start" x="9" y="-529.5" font-family="Helvetica,sans-Serif" font-size="10.00">BuilderAndSolverComponentwise</text>
<text text-anchor="start" x="9" y="-518.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="94.5" y="-507.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver, TVariableType &gt;</text>
<polyline fill="none" stroke="black" points="1,-500.5 188,-500.5 "/>
<text text-anchor="middle" x="94.5" y="-488.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="1,-481.5 188,-481.5 "/>
<text text-anchor="start" x="9" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedElimination</text>
<text text-anchor="start" x="9" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">BuilderAndSolverComponentwise()</text>
<text text-anchor="start" x="9" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedElimination</text>
<text text-anchor="start" x="9" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">BuilderAndSolverComponentwise()</text>
<text text-anchor="start" x="9" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ResidualBasedElimination</text>
<text text-anchor="start" x="9" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">BuilderAndSolverComponentwise()</text>
<text text-anchor="start" x="9" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Build()</text>
<text text-anchor="start" x="9" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetUpDofSet()</text>
<text text-anchor="start" x="9" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResizeAndInitializeVectors()</text>
<text text-anchor="start" x="9" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="9" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="9" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="9" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="9" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ConstructGraph()</text>
<text text-anchor="start" x="9" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="9" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedElimination</text>
<text text-anchor="start" x="9" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">BuilderAndSolverType</text>
<text text-anchor="start" x="9" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="9" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="9" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="9" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="9" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="9" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="9" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="9" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="9" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="9" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* rVar</text>
<text text-anchor="start" x="9" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mActiveNodes</text>
<text text-anchor="start" x="9" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedElimination</text>
<text text-anchor="start" x="9" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">BuilderAndSolverComponentwise()</text>
<text text-anchor="start" x="9" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedElimination</text>
<text text-anchor="start" x="9" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">BuilderAndSolverComponentwise()</text>
<text text-anchor="start" x="9" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ResidualBasedElimination</text>
<text text-anchor="start" x="9" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">BuilderAndSolverComponentwise()</text>
<text text-anchor="start" x="9" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Build()</text>
<text text-anchor="start" x="9" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpDofSet()</text>
<text text-anchor="start" x="9" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResizeAndInitializeVectors()</text>
<text text-anchor="start" x="9" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="9" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="9" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="9" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="9" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstructGraph()</text>
<text text-anchor="start" x="9" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CreatePartition()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../dd/d76/class_kratos_1_1_residual_based_elimination_builder_and_solver.html" target="_top" xlink:title="Current class provides an implementation for standard elimination builder and solving operations.">
<polygon fill="none" stroke="black" points="0,-590.5 0,-1417.5 189,-1417.5 189,-590.5 0,-590.5"/>
<text text-anchor="start" x="8" y="-1405.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedElimination</text>
<text text-anchor="start" x="8" y="-1394.5" font-family="Helvetica,sans-Serif" font-size="10.00">BuilderAndSolver&lt; TSparseSpace,</text>
<text text-anchor="middle" x="94.5" y="-1383.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="0,-1376.5 189,-1376.5 "/>
<text text-anchor="start" x="8" y="-1364.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mScaleFactor</text>
<text text-anchor="start" x="8" y="-1353.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mScalingDiagonal</text>
<polyline fill="none" stroke="black" points="0,-1346.5 189,-1346.5 "/>
<text text-anchor="start" x="8" y="-1334.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedElimination</text>
<text text-anchor="start" x="8" y="-1323.5" font-family="Helvetica,sans-Serif" font-size="10.00">BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1312.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedElimination</text>
<text text-anchor="start" x="8" y="-1301.5" font-family="Helvetica,sans-Serif" font-size="10.00">BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1290.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedElimination</text>
<text text-anchor="start" x="8" y="-1279.5" font-family="Helvetica,sans-Serif" font-size="10.00">BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1268.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ResidualBasedElimination</text>
<text text-anchor="start" x="8" y="-1257.5" font-family="Helvetica,sans-Serif" font-size="10.00">BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1246.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="8" y="-1235.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-1224.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-1213.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-1202.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Assemble()</text>
<text text-anchor="start" x="8" y="-1191.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ConstructMatrixStructure()</text>
<text text-anchor="start" x="8" y="-1180.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssembleLHS()</text>
<text text-anchor="start" x="8" y="-1169.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssembleRowContributionFree</text>
<text text-anchor="start" x="8" y="-1158.5" font-family="Helvetica,sans-Serif" font-size="10.00">Dofs()</text>
<text text-anchor="start" x="8" y="-1147.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ForwardFind()</text>
<text text-anchor="start" x="8" y="-1136.5" font-family="Helvetica,sans-Serif" font-size="10.00"># BackwardFind()</text>
<text text-anchor="start" x="8" y="-1125.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="8" y="-1114.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="8" y="-1103.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="8" y="-1092.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="8" y="-1081.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="8" y="-1070.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="8" y="-1059.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="8" y="-1048.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="8" y="-1037.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="8" y="-1026.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="8" y="-1015.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="8" y="-1004.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 11 more...</text>
<text text-anchor="start" x="8" y="-993.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mScaleFactor</text>
<text text-anchor="start" x="8" y="-982.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mScalingDiagonal</text>
<text text-anchor="start" x="8" y="-971.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedElimination</text>
<text text-anchor="start" x="8" y="-960.5" font-family="Helvetica,sans-Serif" font-size="10.00">BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-949.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedElimination</text>
<text text-anchor="start" x="8" y="-938.5" font-family="Helvetica,sans-Serif" font-size="10.00">BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-927.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedElimination</text>
<text text-anchor="start" x="8" y="-916.5" font-family="Helvetica,sans-Serif" font-size="10.00">BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-905.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ResidualBasedElimination</text>
<text text-anchor="start" x="8" y="-894.5" font-family="Helvetica,sans-Serif" font-size="10.00">BuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-883.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="8" y="-872.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Build()</text>
<text text-anchor="start" x="8" y="-861.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildLHS()</text>
<text text-anchor="start" x="8" y="-850.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildLHS_CompleteOnFreeRows()</text>
<text text-anchor="start" x="8" y="-839.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemSolve()</text>
<text text-anchor="start" x="8" y="-828.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemSolveWithPhysics()</text>
<text text-anchor="start" x="8" y="-817.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndSolve()</text>
<text text-anchor="start" x="8" y="-806.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHSAndSolve()</text>
<text text-anchor="start" x="8" y="-795.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHS()</text>
<text text-anchor="start" x="8" y="-784.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpDofSet()</text>
<text text-anchor="start" x="8" y="-773.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpSystem()</text>
<text text-anchor="start" x="8" y="-762.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="8" y="-751.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-740.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-729.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-718.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Assemble()</text>
<text text-anchor="start" x="8" y="-707.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstructMatrixStructure()</text>
<text text-anchor="start" x="8" y="-696.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleLHS()</text>
<text text-anchor="start" x="8" y="-685.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleRowContributionFree</text>
<text text-anchor="start" x="8" y="-674.5" font-family="Helvetica,sans-Serif" font-size="10.00">Dofs()</text>
<text text-anchor="start" x="8" y="-663.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ForwardFind()</text>
<text text-anchor="start" x="8" y="-652.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BackwardFind()</text>
<text text-anchor="start" x="8" y="-641.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="8" y="-630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddUnique()</text>
<text text-anchor="start" x="8" y="-619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleRHS()</text>
<text text-anchor="start" x="8" y="-608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleLHSCompleteOnFree</text>
<text text-anchor="start" x="8" y="-597.5" font-family="Helvetica,sans-Serif" font-size="10.00">Rows()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M94.5,-580.42C94.5,-571.2 94.5,-562.03 94.5,-552.95"/>
<polygon fill="none" stroke="midnightblue" points="91,-580.44 94.5,-590.44 98,-580.44 91,-580.44"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d2/d88/class_kratos_1_1_builder_and_solver.html" target="_top" xlink:title="Current class provides an implementation for the base builder and solving operations.">
<polygon fill="none" stroke="black" points="3.5,-1455.5 3.5,-2216.5 185.5,-2216.5 185.5,-1455.5 3.5,-1455.5"/>
<text text-anchor="start" x="11.5" y="-2204.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::BuilderAndSolver</text>
<text text-anchor="start" x="11.5" y="-2193.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="94.5" y="-2182.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="3.5,-2175.5 185.5,-2175.5 "/>
<text text-anchor="start" x="11.5" y="-2163.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpLinearSystemSolver</text>
<text text-anchor="start" x="11.5" y="-2152.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mReshapeMatrixFlag</text>
<text text-anchor="start" x="11.5" y="-2141.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mDofSetIsInitialized</text>
<text text-anchor="start" x="11.5" y="-2130.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCalculateReactionsFlag</text>
<text text-anchor="start" x="11.5" y="-2119.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEquationSystemSize</text>
<text text-anchor="start" x="11.5" y="-2108.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<text text-anchor="start" x="11.5" y="-2097.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpReactionsVector</text>
<polyline fill="none" stroke="black" points="3.5,-2090.5 185.5,-2090.5 "/>
<text text-anchor="start" x="11.5" y="-2078.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuilderAndSolver()</text>
<text text-anchor="start" x="11.5" y="-2067.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuilderAndSolver()</text>
<text text-anchor="start" x="11.5" y="-2056.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuilderAndSolver()</text>
<text text-anchor="start" x="11.5" y="-2045.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~BuilderAndSolver()</text>
<text text-anchor="start" x="11.5" y="-2034.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="11.5" y="-2023.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="11.5" y="-2012.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetEchoLevel()</text>
<text text-anchor="start" x="11.5" y="-2001.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConstraintRelationMatrix()</text>
<text text-anchor="start" x="11.5" y="-1990.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConstraintConstantVector()</text>
<text text-anchor="start" x="11.5" y="-1979.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="11.5" y="-1968.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="11.5" y="-1957.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="11.5" y="-1946.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ValidateAndAssignParameters()</text>
<text text-anchor="start" x="11.5" y="-1935.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="11.5" y="-1924.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="11.5" y="-1913.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="11.5" y="-1902.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="11.5" y="-1891.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="11.5" y="-1880.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="11.5" y="-1869.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="11.5" y="-1858.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="11.5" y="-1847.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="11.5" y="-1836.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="11.5" y="-1825.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="11.5" y="-1814.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="11.5" y="-1803.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpLinearSystemSolver</text>
<text text-anchor="start" x="11.5" y="-1792.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReshapeMatrixFlag</text>
<text text-anchor="start" x="11.5" y="-1781.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mDofSetIsInitialized</text>
<text text-anchor="start" x="11.5" y="-1770.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="11.5" y="-1759.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEquationSystemSize</text>
<text text-anchor="start" x="11.5" y="-1748.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="11.5" y="-1737.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpReactionsVector</text>
<text text-anchor="start" x="11.5" y="-1726.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolver()</text>
<text text-anchor="start" x="11.5" y="-1715.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolver()</text>
<text text-anchor="start" x="11.5" y="-1704.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolver()</text>
<text text-anchor="start" x="11.5" y="-1693.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~BuilderAndSolver()</text>
<text text-anchor="start" x="11.5" y="-1682.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="11.5" y="-1671.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetCalculateReactionsFlag()</text>
<text text-anchor="start" x="11.5" y="-1660.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="11.5" y="-1649.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDofSetIsInitializedFlag()</text>
<text text-anchor="start" x="11.5" y="-1638.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDofSetIsInitializedFlag()</text>
<text text-anchor="start" x="11.5" y="-1627.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetReshapeMatrixFlag()</text>
<text text-anchor="start" x="11.5" y="-1616.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetReshapeMatrixFlag()</text>
<text text-anchor="start" x="11.5" y="-1605.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetEquationSystemSize()</text>
<text text-anchor="start" x="11.5" y="-1594.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetLinearSystemSolver()</text>
<text text-anchor="start" x="11.5" y="-1583.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetLinearSystemSolver()</text>
<text text-anchor="start" x="11.5" y="-1572.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildLHS()</text>
<text text-anchor="start" x="11.5" y="-1561.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 25 more...</text>
<text text-anchor="start" x="11.5" y="-1550.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="11.5" y="-1539.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetEchoLevel()</text>
<text text-anchor="start" x="11.5" y="-1528.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConstraintRelationMatrix()</text>
<text text-anchor="start" x="11.5" y="-1517.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConstraintConstantVector()</text>
<text text-anchor="start" x="11.5" y="-1506.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="11.5" y="-1495.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="11.5" y="-1484.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="11.5" y="-1473.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ValidateAndAssignParameters()</text>
<text text-anchor="start" x="11.5" y="-1462.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M94.5,-1444.97C94.5,-1435.88 94.5,-1426.78 94.5,-1417.68"/>
<polygon fill="none" stroke="midnightblue" points="91,-1445.22 94.5,-1455.22 98,-1445.22 91,-1445.22"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../db/dc6/class_kratos_1_1_pointer_vector_set.html" target="_top" xlink:title="A sorted associative container similar to an STL set, but uses a vector to store pointers to its data...">
<polygon fill="none" stroke="black" points="7,-2264.5 7,-3366.5 182,-3366.5 182,-2264.5 7,-2264.5"/>
<text text-anchor="start" x="15" y="-3354.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::PointerVectorSet</text>
<text text-anchor="start" x="15" y="-3343.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TDataType, TGetKeyType,</text>
<text text-anchor="start" x="15" y="-3332.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TCompareType, TEqualType,</text>
<text text-anchor="middle" x="94.5" y="-3321.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TPointerType, TContainerType &gt;</text>
<polyline fill="none" stroke="black" points="7,-3314.5 182,-3314.5 "/>
<text text-anchor="middle" x="94.5" y="-3302.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="7,-3295.5 182,-3295.5 "/>
<text text-anchor="start" x="15" y="-3283.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="15" y="-3272.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="15" y="-3261.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="15" y="-3250.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="15" y="-3239.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~PointerVectorSet()</text>
<text text-anchor="start" x="15" y="-3228.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="15" y="-3217.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="15" y="-3206.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="15" y="-3195.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator==()</text>
<text text-anchor="start" x="15" y="-3184.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator&lt;()</text>
<text text-anchor="start" x="15" y="-3173.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ begin()</text>
<text text-anchor="start" x="15" y="-3162.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ begin()</text>
<text text-anchor="start" x="15" y="-3151.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cbegin()</text>
<text text-anchor="start" x="15" y="-3140.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cbegin()</text>
<text text-anchor="start" x="15" y="-3129.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ end()</text>
<text text-anchor="start" x="15" y="-3118.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ end()</text>
<text text-anchor="start" x="15" y="-3107.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cend()</text>
<text text-anchor="start" x="15" y="-3096.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cend()</text>
<text text-anchor="start" x="15" y="-3085.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ rbegin()</text>
<text text-anchor="start" x="15" y="-3074.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ rbegin()</text>
<text text-anchor="start" x="15" y="-3063.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 33 more...</text>
<text text-anchor="start" x="15" y="-3052.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetContainer()</text>
<text text-anchor="start" x="15" y="-3041.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetContainer()</text>
<text text-anchor="start" x="15" y="-3030.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMaxBufferSize()</text>
<text text-anchor="start" x="15" y="-3019.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetMaxBufferSize()</text>
<text text-anchor="start" x="15" y="-3008.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSortedPartSize()</text>
<text text-anchor="start" x="15" y="-2997.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetSortedPartSize()</text>
<text text-anchor="start" x="15" y="-2986.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ empty()</text>
<text text-anchor="start" x="15" y="-2975.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsSorted()</text>
<text text-anchor="start" x="15" y="-2964.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="15" y="-2953.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="15" y="-2942.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="15" y="-2931.5" font-family="Helvetica,sans-Serif" font-size="10.00">* key_type</text>
<text text-anchor="start" x="15" y="-2920.5" font-family="Helvetica,sans-Serif" font-size="10.00">* data_type</text>
<text text-anchor="start" x="15" y="-2909.5" font-family="Helvetica,sans-Serif" font-size="10.00">* value_type</text>
<text text-anchor="start" x="15" y="-2898.5" font-family="Helvetica,sans-Serif" font-size="10.00">* key_compare</text>
<text text-anchor="start" x="15" y="-2887.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pointer</text>
<text text-anchor="start" x="15" y="-2876.5" font-family="Helvetica,sans-Serif" font-size="10.00">* reference</text>
<text text-anchor="start" x="15" y="-2865.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reference</text>
<text text-anchor="start" x="15" y="-2854.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ContainerType</text>
<text text-anchor="start" x="15" y="-2843.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="15" y="-2832.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="15" y="-2821.5" font-family="Helvetica,sans-Serif" font-size="10.00">* iterator</text>
<text text-anchor="start" x="15" y="-2810.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_iterator</text>
<text text-anchor="start" x="15" y="-2799.5" font-family="Helvetica,sans-Serif" font-size="10.00">* reverse_iterator</text>
<text text-anchor="start" x="15" y="-2788.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reverse_iterator</text>
<text text-anchor="start" x="15" y="-2777.5" font-family="Helvetica,sans-Serif" font-size="10.00">* size_type</text>
<text text-anchor="start" x="15" y="-2766.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_iterator</text>
<text text-anchor="start" x="15" y="-2755.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_const_iterator</text>
<text text-anchor="start" x="15" y="-2744.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_reverse_iterator</text>
<text text-anchor="start" x="15" y="-2733.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_const_reverse_iterator</text>
<text text-anchor="start" x="15" y="-2722.5" font-family="Helvetica,sans-Serif" font-size="10.00">* difference_type</text>
<text text-anchor="start" x="15" y="-2711.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mData</text>
<text text-anchor="start" x="15" y="-2700.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSortedPartSize</text>
<text text-anchor="start" x="15" y="-2689.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxBufferSize</text>
<text text-anchor="start" x="15" y="-2678.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="15" y="-2667.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="15" y="-2656.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="15" y="-2645.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="15" y="-2634.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="15" y="-2623.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="15" y="-2612.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="15" y="-2601.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~PointerVectorSet()</text>
<text text-anchor="start" x="15" y="-2590.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="15" y="-2579.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="15" y="-2568.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="15" y="-2557.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==()</text>
<text text-anchor="start" x="15" y="-2546.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&lt;()</text>
<text text-anchor="start" x="15" y="-2535.5" font-family="Helvetica,sans-Serif" font-size="10.00">* begin()</text>
<text text-anchor="start" x="15" y="-2524.5" font-family="Helvetica,sans-Serif" font-size="10.00">* begin()</text>
<text text-anchor="start" x="15" y="-2513.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cbegin()</text>
<text text-anchor="start" x="15" y="-2502.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cbegin()</text>
<text text-anchor="start" x="15" y="-2491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* end()</text>
<text text-anchor="start" x="15" y="-2480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* end()</text>
<text text-anchor="start" x="15" y="-2469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cend()</text>
<text text-anchor="start" x="15" y="-2458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cend()</text>
<text text-anchor="start" x="15" y="-2447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* rbegin()</text>
<text text-anchor="start" x="15" y="-2436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* rbegin()</text>
<text text-anchor="start" x="15" y="-2425.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 33 more...</text>
<text text-anchor="start" x="15" y="-2414.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetContainer()</text>
<text text-anchor="start" x="15" y="-2403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetContainer()</text>
<text text-anchor="start" x="15" y="-2392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMaxBufferSize()</text>
<text text-anchor="start" x="15" y="-2381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetMaxBufferSize()</text>
<text text-anchor="start" x="15" y="-2370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSortedPartSize()</text>
<text text-anchor="start" x="15" y="-2359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSortedPartSize()</text>
<text text-anchor="start" x="15" y="-2348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* empty()</text>
<text text-anchor="start" x="15" y="-2337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsSorted()</text>
<text text-anchor="start" x="15" y="-2326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="15" y="-2315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="15" y="-2304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="15" y="-2293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyOf()</text>
<text text-anchor="start" x="15" y="-2282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyOf()</text>
<text text-anchor="start" x="15" y="-2271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyOf()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="#404040" d="M94.5,-2264.32C94.5,-2252.48 94.5,-2240.69 94.5,-2228.98"/>
<polygon fill="none" stroke="#404040" points="94.5,-2228.8 90.5,-2222.8 94.5,-2216.8 98.5,-2222.8 94.5,-2228.8"/>
<text text-anchor="middle" x="122" y="-2238" font-family="Helvetica,sans-Serif" font-size="10.00"> #mDofSet</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_residual_based_elimination_builder_and_solver_componentwise__coll__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
