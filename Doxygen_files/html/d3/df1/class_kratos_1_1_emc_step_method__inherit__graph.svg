<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::EmcStepMethod&lt; TVariableType, TValueType &gt; Pages: 1 -->
<!--zoomable 3989 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 187;
var viewHeight = 3989;
var sectionId = 'dynsection-0';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::EmcStepMethod&lt; TVariableType, TValueType &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Short class definition.">
<polygon fill="#bfbfbf" stroke="black" points="0,-479.5 0,-1306.5 179,-1306.5 179,-479.5 0,-479.5"/>
<text text-anchor="start" x="8" y="-1294.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::EmcStepMethod</text>
<text text-anchor="middle" x="89.5" y="-1283.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TVariableType, TValueType &gt;</text>
<polyline fill="none" stroke="black" points="0,-1276.5 179,-1276.5 "/>
<text text-anchor="start" x="8" y="-1264.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEmc</text>
<text text-anchor="start" x="8" y="-1253.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpStepVariable</text>
<polyline fill="none" stroke="black" points="0,-1246.5 179,-1246.5 "/>
<text text-anchor="start" x="8" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EmcStepMethod()</text>
<text text-anchor="start" x="8" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EmcStepMethod()</text>
<text text-anchor="start" x="8" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EmcStepMethod()</text>
<text text-anchor="start" x="8" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EmcStepMethod()</text>
<text text-anchor="start" x="8" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EmcStepMethod()</text>
<text text-anchor="start" x="8" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="8" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~EmcStepMethod()</text>
<text text-anchor="start" x="8" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateParameters()</text>
<text text-anchor="start" x="8" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetParameters()</text>
<text text-anchor="start" x="8" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetProcessInfoParameters()</text>
<text text-anchor="start" x="8" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ HasStepVariable()</text>
<text text-anchor="start" x="8" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetStepVariable()</text>
<text text-anchor="start" x="8" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="8" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromVariable()</text>
<text text-anchor="start" x="8" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromFirstDerivative()</text>
<text text-anchor="start" x="8" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromSecondDerivative()</text>
<text text-anchor="start" x="8" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictFromVariable()</text>
<text text-anchor="start" x="8" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictStepVariable()</text>
<text text-anchor="start" x="8" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictVariable()</text>
<text text-anchor="start" x="8" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictFirstDerivative()</text>
<text text-anchor="start" x="8" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictSecondDerivative()</text>
<text text-anchor="start" x="8" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateFromVariable()</text>
<text text-anchor="start" x="8" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateStepVariable()</text>
<text text-anchor="start" x="8" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateVariable()</text>
<text text-anchor="start" x="8" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateFirstDerivative()</text>
<text text-anchor="start" x="8" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateSecondDerivative()</text>
<text text-anchor="start" x="8" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="8" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BasePointerType</text>
<text text-anchor="start" x="8" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="8" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VariablePointer</text>
<text text-anchor="start" x="8" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEmc</text>
<text text-anchor="start" x="8" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpStepVariable</text>
<text text-anchor="start" x="8" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="8" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="8" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="8" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EmcStepMethod()</text>
<text text-anchor="start" x="8" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EmcStepMethod()</text>
<text text-anchor="start" x="8" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EmcStepMethod()</text>
<text text-anchor="start" x="8" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EmcStepMethod()</text>
<text text-anchor="start" x="8" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EmcStepMethod()</text>
<text text-anchor="start" x="8" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="8" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~EmcStepMethod()</text>
<text text-anchor="start" x="8" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateParameters()</text>
<text text-anchor="start" x="8" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetParameters()</text>
<text text-anchor="start" x="8" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetProcessInfoParameters()</text>
<text text-anchor="start" x="8" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HasStepVariable()</text>
<text text-anchor="start" x="8" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetStepVariable()</text>
<text text-anchor="start" x="8" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="8" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromVariable()</text>
<text text-anchor="start" x="8" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromFirstDerivative()</text>
<text text-anchor="start" x="8" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromSecondDerivative()</text>
<text text-anchor="start" x="8" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictFromVariable()</text>
<text text-anchor="start" x="8" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictStepVariable()</text>
<text text-anchor="start" x="8" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictVariable()</text>
<text text-anchor="start" x="8" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictFirstDerivative()</text>
<text text-anchor="start" x="8" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictSecondDerivative()</text>
<text text-anchor="start" x="8" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateFromVariable()</text>
<text text-anchor="start" x="8" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateStepVariable()</text>
<text text-anchor="start" x="8" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateVariable()</text>
<text text-anchor="start" x="8" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateFirstDerivative()</text>
<text text-anchor="start" x="8" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateSecondDerivative()</text>
</a>
</g>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../d5/d42/class_kratos_1_1_emc_step_rotation_method.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="2,-0.5 2,-442.5 177,-442.5 177,-0.5 2,-0.5"/>
<text text-anchor="start" x="10" y="-430.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::EmcStepRotationMethod</text>
<text text-anchor="middle" x="89.5" y="-419.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TVariableType, TValueType &gt;</text>
<polyline fill="none" stroke="black" points="2,-412.5 177,-412.5 "/>
<text text-anchor="middle" x="89.5" y="-400.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="2,-393.5 177,-393.5 "/>
<text text-anchor="start" x="10" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Update()</text>
<text text-anchor="start" x="10" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EmcStepRotationMethod()</text>
<text text-anchor="start" x="10" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EmcStepRotationMethod()</text>
<text text-anchor="start" x="10" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EmcStepRotationMethod()</text>
<text text-anchor="start" x="10" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EmcStepRotationMethod()</text>
<text text-anchor="start" x="10" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EmcStepRotationMethod()</text>
<text text-anchor="start" x="10" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="10" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~EmcStepRotationMethod()</text>
<text text-anchor="start" x="10" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Update()</text>
<text text-anchor="start" x="10" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="10" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="10" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="10" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Update()</text>
<text text-anchor="start" x="10" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="10" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BasePointerType</text>
<text text-anchor="start" x="10" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="10" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VariablePointer</text>
<text text-anchor="start" x="10" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DerivedType</text>
<text text-anchor="start" x="10" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="10" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="10" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="10" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="10" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="10" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EmcStepRotationMethod()</text>
<text text-anchor="start" x="10" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EmcStepRotationMethod()</text>
<text text-anchor="start" x="10" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EmcStepRotationMethod()</text>
<text text-anchor="start" x="10" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EmcStepRotationMethod()</text>
<text text-anchor="start" x="10" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EmcStepRotationMethod()</text>
<text text-anchor="start" x="10" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="10" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~EmcStepRotationMethod()</text>
<text text-anchor="start" x="10" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="10" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="10" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="10" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="10" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node4 -->
<g id="edge3" class="edge">
<title>Node1&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M89.5,-469.31C89.5,-460.38 89.5,-451.54 89.5,-442.82"/>
<polygon fill="none" stroke="midnightblue" points="86,-469.43 89.5,-479.43 93,-469.43 86,-469.43"/>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d0/dd4/class_kratos_1_1_time_integration_method.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="0,-1343.5 0,-3072.5 179,-3072.5 179,-1343.5 0,-1343.5"/>
<text text-anchor="start" x="8" y="-3060.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::TimeIntegrationMethod</text>
<text text-anchor="middle" x="89.5" y="-3049.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TVariableType, TValueType &gt;</text>
<polyline fill="none" stroke="black" points="0,-3042.5 179,-3042.5 "/>
<text text-anchor="start" x="8" y="-3030.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpVariable</text>
<text text-anchor="start" x="8" y="-3019.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpFirstDerivative</text>
<text text-anchor="start" x="8" y="-3008.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpSecondDerivative</text>
<text text-anchor="start" x="8" y="-2997.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpPrimaryVariable</text>
<text text-anchor="start" x="8" y="-2986.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpInputVariable</text>
<text text-anchor="start" x="8" y="-2975.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpAssign</text>
<text text-anchor="start" x="8" y="-2964.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpPredict</text>
<text text-anchor="start" x="8" y="-2953.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpUpdate</text>
<text text-anchor="start" x="8" y="-2942.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpFirstDerivativeKinetic</text>
<text text-anchor="start" x="8" y="-2931.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="8" y="-2920.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpSecondDerivativeKinetic</text>
<text text-anchor="start" x="8" y="-2909.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="8" y="-2898.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpFirstDerivativeInertial</text>
<text text-anchor="start" x="8" y="-2887.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="8" y="-2876.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpSecondDerivativeInertial</text>
<text text-anchor="start" x="8" y="-2865.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<polyline fill="none" stroke="black" points="0,-2858.5 179,-2858.5 "/>
<text text-anchor="start" x="8" y="-2846.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ TimeIntegrationMethod()</text>
<text text-anchor="start" x="8" y="-2835.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ TimeIntegrationMethod()</text>
<text text-anchor="start" x="8" y="-2824.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ TimeIntegrationMethod()</text>
<text text-anchor="start" x="8" y="-2813.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ TimeIntegrationMethod()</text>
<text text-anchor="start" x="8" y="-2802.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ TimeIntegrationMethod()</text>
<text text-anchor="start" x="8" y="-2791.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="8" y="-2780.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~TimeIntegrationMethod()</text>
<text text-anchor="start" x="8" y="-2769.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateParameters()</text>
<text text-anchor="start" x="8" y="-2758.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetParameters()</text>
<text text-anchor="start" x="8" y="-2747.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetProcessInfoParameters()</text>
<text text-anchor="start" x="8" y="-2736.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetInputVariable()</text>
<text text-anchor="start" x="8" y="-2725.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPrimaryVariableName()</text>
<text text-anchor="start" x="8" y="-2714.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetVariableName()</text>
<text text-anchor="start" x="8" y="-2703.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ HasVariableName()</text>
<text text-anchor="start" x="8" y="-2692.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ HasStepVariable()</text>
<text text-anchor="start" x="8" y="-2681.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetStepVariable()</text>
<text text-anchor="start" x="8" y="-2670.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Assign()</text>
<text text-anchor="start" x="8" y="-2659.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Predict()</text>
<text text-anchor="start" x="8" y="-2648.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Update()</text>
<text text-anchor="start" x="8" y="-2637.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="8" y="-2626.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetFirstDerivativeKinetic</text>
<text text-anchor="start" x="8" y="-2615.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="8" y="-2604.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSecondDerivativeKinetic</text>
<text text-anchor="start" x="8" y="-2593.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="8" y="-2582.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetFirstDerivativeInertial</text>
<text text-anchor="start" x="8" y="-2571.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="8" y="-2560.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSecondDerivativeInertial</text>
<text text-anchor="start" x="8" y="-2549.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="8" y="-2538.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetFlags()</text>
<text text-anchor="start" x="8" y="-2527.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetFlags()</text>
<text text-anchor="start" x="8" y="-2516.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetFlags()</text>
<text text-anchor="start" x="8" y="-2505.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-2494.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-2483.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-2472.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetPointerMethods()</text>
<text text-anchor="start" x="8" y="-2461.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetPointerAssignMethod()</text>
<text text-anchor="start" x="8" y="-2450.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromVariable()</text>
<text text-anchor="start" x="8" y="-2439.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromFirstDerivative()</text>
<text text-anchor="start" x="8" y="-2428.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromSecondDerivative()</text>
<text text-anchor="start" x="8" y="-2417.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignVariable()</text>
<text text-anchor="start" x="8" y="-2406.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFirstDerivative()</text>
<text text-anchor="start" x="8" y="-2395.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSecondDerivative()</text>
<text text-anchor="start" x="8" y="-2384.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictFromVariable()</text>
<text text-anchor="start" x="8" y="-2373.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictFromFirstDerivative()</text>
<text text-anchor="start" x="8" y="-2362.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 10 more...</text>
<text text-anchor="start" x="8" y="-2351.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetKineticParameter()</text>
<text text-anchor="start" x="8" y="-2340.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetFirstDerivativeKinetic</text>
<text text-anchor="start" x="8" y="-2329.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="8" y="-2318.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetSecondDerivativeKinetic</text>
<text text-anchor="start" x="8" y="-2307.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="8" y="-2296.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetInertialParameter()</text>
<text text-anchor="start" x="8" y="-2285.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetFirstDerivativeInertial</text>
<text text-anchor="start" x="8" y="-2274.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="8" y="-2263.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetSecondDerivativeInertial</text>
<text text-anchor="start" x="8" y="-2252.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="8" y="-2241.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="8" y="-2230.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VariablePointer</text>
<text text-anchor="start" x="8" y="-2219.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ValuePointer</text>
<text text-anchor="start" x="8" y="-2208.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MethodPointer</text>
<text text-anchor="start" x="8" y="-2197.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MethodFactorPointer</text>
<text text-anchor="start" x="8" y="-2186.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethodPointer</text>
<text text-anchor="start" x="8" y="-2175.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-2164.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-2153.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpVariable</text>
<text text-anchor="start" x="8" y="-2142.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpFirstDerivative</text>
<text text-anchor="start" x="8" y="-2131.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpSecondDerivative</text>
<text text-anchor="start" x="8" y="-2120.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpPrimaryVariable</text>
<text text-anchor="start" x="8" y="-2109.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpInputVariable</text>
<text text-anchor="start" x="8" y="-2098.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpAssign</text>
<text text-anchor="start" x="8" y="-2087.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpPredict</text>
<text text-anchor="start" x="8" y="-2076.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpUpdate</text>
<text text-anchor="start" x="8" y="-2065.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpFirstDerivativeKinetic</text>
<text text-anchor="start" x="8" y="-2054.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="8" y="-2043.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpSecondDerivativeKinetic</text>
<text text-anchor="start" x="8" y="-2032.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="8" y="-2021.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpFirstDerivativeInertial</text>
<text text-anchor="start" x="8" y="-2010.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="8" y="-1999.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpSecondDerivativeInertial</text>
<text text-anchor="start" x="8" y="-1988.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="8" y="-1977.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="8" y="-1966.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="8" y="-1955.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="8" y="-1944.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethod()</text>
<text text-anchor="start" x="8" y="-1933.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethod()</text>
<text text-anchor="start" x="8" y="-1922.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethod()</text>
<text text-anchor="start" x="8" y="-1911.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethod()</text>
<text text-anchor="start" x="8" y="-1900.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethod()</text>
<text text-anchor="start" x="8" y="-1889.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="8" y="-1878.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~TimeIntegrationMethod()</text>
<text text-anchor="start" x="8" y="-1867.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateParameters()</text>
<text text-anchor="start" x="8" y="-1856.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetParameters()</text>
<text text-anchor="start" x="8" y="-1845.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetProcessInfoParameters()</text>
<text text-anchor="start" x="8" y="-1834.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetInputVariable()</text>
<text text-anchor="start" x="8" y="-1823.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPrimaryVariableName()</text>
<text text-anchor="start" x="8" y="-1812.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetVariableName()</text>
<text text-anchor="start" x="8" y="-1801.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HasVariableName()</text>
<text text-anchor="start" x="8" y="-1790.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HasStepVariable()</text>
<text text-anchor="start" x="8" y="-1779.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetStepVariable()</text>
<text text-anchor="start" x="8" y="-1768.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Assign()</text>
<text text-anchor="start" x="8" y="-1757.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Predict()</text>
<text text-anchor="start" x="8" y="-1746.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="8" y="-1735.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="8" y="-1724.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFirstDerivativeKinetic</text>
<text text-anchor="start" x="8" y="-1713.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="8" y="-1702.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSecondDerivativeKinetic</text>
<text text-anchor="start" x="8" y="-1691.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="8" y="-1680.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFirstDerivativeInertial</text>
<text text-anchor="start" x="8" y="-1669.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="8" y="-1658.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSecondDerivativeInertial</text>
<text text-anchor="start" x="8" y="-1647.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="8" y="-1636.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="8" y="-1625.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="8" y="-1614.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="8" y="-1603.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-1592.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-1581.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-1570.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPointerMethods()</text>
<text text-anchor="start" x="8" y="-1559.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPointerAssignMethod()</text>
<text text-anchor="start" x="8" y="-1548.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromVariable()</text>
<text text-anchor="start" x="8" y="-1537.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromFirstDerivative()</text>
<text text-anchor="start" x="8" y="-1526.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromSecondDerivative()</text>
<text text-anchor="start" x="8" y="-1515.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignVariable()</text>
<text text-anchor="start" x="8" y="-1504.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFirstDerivative()</text>
<text text-anchor="start" x="8" y="-1493.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSecondDerivative()</text>
<text text-anchor="start" x="8" y="-1482.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictFromVariable()</text>
<text text-anchor="start" x="8" y="-1471.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictFromFirstDerivative()</text>
<text text-anchor="start" x="8" y="-1460.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 10 more...</text>
<text text-anchor="start" x="8" y="-1449.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetKineticParameter()</text>
<text text-anchor="start" x="8" y="-1438.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFirstDerivativeKinetic</text>
<text text-anchor="start" x="8" y="-1427.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="8" y="-1416.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSecondDerivativeKinetic</text>
<text text-anchor="start" x="8" y="-1405.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="8" y="-1394.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetInertialParameter()</text>
<text text-anchor="start" x="8" y="-1383.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFirstDerivativeInertial</text>
<text text-anchor="start" x="8" y="-1372.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="8" y="-1361.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSecondDerivativeInertial</text>
<text text-anchor="start" x="8" y="-1350.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M89.5,-1333.07C89.5,-1324.2 89.5,-1315.4 89.5,-1306.66"/>
<polygon fill="none" stroke="midnightblue" points="86,-1333.11 89.5,-1343.11 93,-1333.11 86,-1333.11"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="15,-3109.5 15,-3980.5 164,-3980.5 164,-3109.5 15,-3109.5"/>
<text text-anchor="middle" x="89.5" y="-3968.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="15,-3961.5 164,-3961.5 "/>
<text text-anchor="middle" x="89.5" y="-3949.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="15,-3942.5 164,-3942.5 "/>
<text text-anchor="start" x="23" y="-3930.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="23" y="-3919.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="23" y="-3908.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="23" y="-3897.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="23" y="-3886.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="23" y="-3875.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="23" y="-3864.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="23" y="-3853.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="23" y="-3842.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="23" y="-3831.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="23" y="-3820.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="23" y="-3809.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="23" y="-3798.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="23" y="-3787.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="23" y="-3776.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="23" y="-3765.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="23" y="-3754.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="23" y="-3743.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="23" y="-3732.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="23" y="-3721.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="23" y="-3710.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="23" y="-3699.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="23" y="-3688.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="23" y="-3677.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="23" y="-3666.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="23" y="-3655.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="23" y="-3644.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="23" y="-3633.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="23" y="-3622.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="23" y="-3611.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="23" y="-3600.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="23" y="-3589.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="23" y="-3578.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="23" y="-3567.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="23" y="-3556.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="23" y="-3545.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="23" y="-3534.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="23" y="-3523.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="23" y="-3512.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="23" y="-3501.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="23" y="-3490.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="23" y="-3479.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="23" y="-3468.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="23" y="-3457.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="23" y="-3446.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="23" y="-3435.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="23" y="-3424.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="23" y="-3413.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="23" y="-3402.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="23" y="-3391.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="23" y="-3380.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="23" y="-3369.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="23" y="-3358.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="23" y="-3347.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="23" y="-3336.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="23" y="-3325.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="23" y="-3314.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="23" y="-3303.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="23" y="-3292.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="23" y="-3281.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="23" y="-3270.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="23" y="-3259.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="23" y="-3248.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="23" y="-3237.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="23" y="-3226.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="23" y="-3215.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="23" y="-3204.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="23" y="-3193.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="23" y="-3182.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="23" y="-3171.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="23" y="-3160.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="23" y="-3149.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="23" y="-3138.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="23" y="-3127.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="23" y="-3116.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M89.5,-3098.96C89.5,-3090.23 89.5,-3081.44 89.5,-3072.61"/>
<polygon fill="none" stroke="midnightblue" points="86,-3099.18 89.5,-3109.18 93,-3099.18 86,-3099.18"/>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_emc_step_method__inherit__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
