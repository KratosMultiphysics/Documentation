<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::GeometricallyExactRodElement Pages: 1 -->
<svg width="468pt" height="6509pt"
 viewBox="0.00 0.00 468.00 6509.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 6505)">
<title>Kratos::GeometricallyExactRodElement</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Beam Element for 3D space dimension Romero Displacement&#45;Rotation Geometrically Exact Rod element (bas...">
<polygon fill="#bfbfbf" stroke="black" points="160,-0.5 160,-893.5 359,-893.5 359,-0.5 160,-0.5"/>
<text text-anchor="start" x="168" y="-881.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::GeometricallyExact</text>
<text text-anchor="middle" x="259.5" y="-870.5" font-family="Helvetica,sans-Serif" font-size="10.00">RodElement</text>
<polyline fill="none" stroke="black" points="160,-863.5 359,-863.5 "/>
<text text-anchor="start" x="168" y="-851.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInitialLocalDirectors</text>
<text text-anchor="start" x="168" y="-840.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCurrentLocalDirectors</text>
<text text-anchor="start" x="168" y="-829.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mPreviousLocalDirectors</text>
<text text-anchor="start" x="168" y="-818.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInitialLocalDirectorsVelocities</text>
<text text-anchor="start" x="168" y="-807.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCurrentLocalDirectorsVelocities</text>
<text text-anchor="start" x="168" y="-796.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mPreviousLocalDirectorsVelocities</text>
<polyline fill="none" stroke="black" points="160,-789.5 359,-789.5 "/>
<text text-anchor="start" x="168" y="-777.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GeometricallyExactRodElement()</text>
<text text-anchor="start" x="168" y="-766.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GeometricallyExactRodElement()</text>
<text text-anchor="start" x="168" y="-755.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GeometricallyExactRodElement()</text>
<text text-anchor="start" x="168" y="-744.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~GeometricallyExactRodElement()</text>
<text text-anchor="start" x="168" y="-733.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="168" y="-722.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="168" y="-711.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="168" y="-700.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="168" y="-689.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="168" y="-678.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="168" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="168" y="-656.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GeometricallyExactRodElement()</text>
<text text-anchor="start" x="168" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateElementalSystem()</text>
<text text-anchor="start" x="168" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateDynamicSystem()</text>
<text text-anchor="start" x="168" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeElementData()</text>
<text text-anchor="start" x="168" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateKinematics()</text>
<text text-anchor="start" x="168" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateConstitutiveMatrix()</text>
<text text-anchor="start" x="168" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateFrameMapping()</text>
<text text-anchor="start" x="168" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateRotationVariables()</text>
<text text-anchor="start" x="168" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateDirectorsMapping</text>
<text text-anchor="start" x="168" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="168" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateCurrentStrainResultants</text>
<text text-anchor="start" x="168" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">Vector()</text>
<text text-anchor="start" x="168" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateCurrentCurvature</text>
<text text-anchor="start" x="168" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">Vector()</text>
<text text-anchor="start" x="168" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 20 more...</text>
<text text-anchor="start" x="168" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstitutiveLawType</text>
<text text-anchor="start" x="168" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstitutiveLawPointerType</text>
<text text-anchor="start" x="168" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StressMeasureType</text>
<text text-anchor="start" x="168" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IntegrationMethod</text>
<text text-anchor="start" x="168" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BeamMathUtilsType</text>
<text text-anchor="start" x="168" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* QuaternionType</text>
<text text-anchor="start" x="168" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="168" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementDataType</text>
<text text-anchor="start" x="168" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_INTRUSIVE</text>
<text text-anchor="start" x="168" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">_POINTER_DEFINITION()</text>
<text text-anchor="start" x="168" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitialLocalDirectors</text>
<text text-anchor="start" x="168" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCurrentLocalDirectors</text>
<text text-anchor="start" x="168" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPreviousLocalDirectors</text>
<text text-anchor="start" x="168" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitialLocalDirectorsVelocities</text>
<text text-anchor="start" x="168" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCurrentLocalDirectorsVelocities</text>
<text text-anchor="start" x="168" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPreviousLocalDirectorsVelocities</text>
<text text-anchor="start" x="168" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="168" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="168" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="168" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GeometricallyExactRodElement()</text>
<text text-anchor="start" x="168" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GeometricallyExactRodElement()</text>
<text text-anchor="start" x="168" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GeometricallyExactRodElement()</text>
<text text-anchor="start" x="168" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~GeometricallyExactRodElement()</text>
<text text-anchor="start" x="168" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="168" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="168" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="168" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="168" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="168" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="168" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="168" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GeometricallyExactRodElement()</text>
<text text-anchor="start" x="168" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateElementalSystem()</text>
<text text-anchor="start" x="168" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateDynamicSystem()</text>
<text text-anchor="start" x="168" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeElementData()</text>
<text text-anchor="start" x="168" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateKinematics()</text>
<text text-anchor="start" x="168" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateConstitutiveMatrix()</text>
<text text-anchor="start" x="168" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateFrameMapping()</text>
<text text-anchor="start" x="168" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateRotationVariables()</text>
<text text-anchor="start" x="168" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateDirectorsMapping</text>
<text text-anchor="start" x="168" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="168" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateCurrentStrainResultants</text>
<text text-anchor="start" x="168" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">Vector()</text>
<text text-anchor="start" x="168" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateCurrentCurvature</text>
<text text-anchor="start" x="168" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">Vector()</text>
<text text-anchor="start" x="168" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 20 more...</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d4/daa/class_kratos_1_1_large_displacement_beam_e_m_c_element.html" target="_top" xlink:title="Beam Element for 3D space dimension.">
<polygon fill="none" stroke="black" points="145,-931.5 145,-1758.5 374,-1758.5 374,-931.5 145,-931.5"/>
<text text-anchor="start" x="153" y="-1746.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::LargeDisplacement</text>
<text text-anchor="middle" x="259.5" y="-1735.5" font-family="Helvetica,sans-Serif" font-size="10.00">BeamEMCElement</text>
<polyline fill="none" stroke="black" points="145,-1728.5 374,-1728.5 "/>
<text text-anchor="start" x="153" y="-1716.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCurrentStrainResultants</text>
<text text-anchor="start" x="153" y="-1705.5" font-family="Helvetica,sans-Serif" font-size="10.00">Vector</text>
<text text-anchor="start" x="153" y="-1694.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mPreviousStrainResultants</text>
<text text-anchor="start" x="153" y="-1683.5" font-family="Helvetica,sans-Serif" font-size="10.00">Vector</text>
<polyline fill="none" stroke="black" points="145,-1676.5 374,-1676.5 "/>
<text text-anchor="start" x="153" y="-1664.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LargeDisplacementBeamEMCElement()</text>
<text text-anchor="start" x="153" y="-1653.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LargeDisplacementBeamEMCElement()</text>
<text text-anchor="start" x="153" y="-1642.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LargeDisplacementBeamEMCElement()</text>
<text text-anchor="start" x="153" y="-1631.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~LargeDisplacementBeamEMCElement()</text>
<text text-anchor="start" x="153" y="-1620.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="153" y="-1609.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="153" y="-1598.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="153" y="-1587.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="153" y="-1576.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="153" y="-1565.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="153" y="-1554.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="153" y="-1543.5" font-family="Helvetica,sans-Serif" font-size="10.00"># LargeDisplacementBeamEMCElement()</text>
<text text-anchor="start" x="153" y="-1532.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeElementData()</text>
<text text-anchor="start" x="153" y="-1521.5" font-family="Helvetica,sans-Serif" font-size="10.00"># MapToSpatialFrame()</text>
<text text-anchor="start" x="153" y="-1510.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateKinematics()</text>
<text text-anchor="start" x="153" y="-1499.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculatePreviousDeltaPosition()</text>
<text text-anchor="start" x="153" y="-1488.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateFrameMapping()</text>
<text text-anchor="start" x="153" y="-1477.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateStrainVariables()</text>
<text text-anchor="start" x="153" y="-1466.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateAlphaRotationMatrix()</text>
<text text-anchor="start" x="153" y="-1455.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateCurrentStrainResultants</text>
<text text-anchor="start" x="153" y="-1444.5" font-family="Helvetica,sans-Serif" font-size="10.00">Vector()</text>
<text text-anchor="start" x="153" y="-1433.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateCurrentCurvature</text>
<text text-anchor="start" x="153" y="-1422.5" font-family="Helvetica,sans-Serif" font-size="10.00">Vector()</text>
<text text-anchor="start" x="153" y="-1411.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateConstitutiveMatrix()</text>
<text text-anchor="start" x="153" y="-1400.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 11 more...</text>
<text text-anchor="start" x="153" y="-1389.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstitutiveLawType</text>
<text text-anchor="start" x="153" y="-1378.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstitutiveLawPointerType</text>
<text text-anchor="start" x="153" y="-1367.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StressMeasureType</text>
<text text-anchor="start" x="153" y="-1356.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IntegrationMethod</text>
<text text-anchor="start" x="153" y="-1345.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BeamMathUtilsType</text>
<text text-anchor="start" x="153" y="-1334.5" font-family="Helvetica,sans-Serif" font-size="10.00">* QuaternionType</text>
<text text-anchor="start" x="153" y="-1323.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="153" y="-1312.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementDataType</text>
<text text-anchor="start" x="153" y="-1301.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_INTRUSIVE</text>
<text text-anchor="start" x="153" y="-1290.5" font-family="Helvetica,sans-Serif" font-size="10.00">_POINTER_DEFINITION()</text>
<text text-anchor="start" x="153" y="-1279.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCurrentStrainResultants</text>
<text text-anchor="start" x="153" y="-1268.5" font-family="Helvetica,sans-Serif" font-size="10.00">Vector</text>
<text text-anchor="start" x="153" y="-1257.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPreviousStrainResultants</text>
<text text-anchor="start" x="153" y="-1246.5" font-family="Helvetica,sans-Serif" font-size="10.00">Vector</text>
<text text-anchor="start" x="153" y="-1235.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="153" y="-1224.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="153" y="-1213.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="153" y="-1202.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LargeDisplacementBeamEMCElement()</text>
<text text-anchor="start" x="153" y="-1191.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LargeDisplacementBeamEMCElement()</text>
<text text-anchor="start" x="153" y="-1180.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LargeDisplacementBeamEMCElement()</text>
<text text-anchor="start" x="153" y="-1169.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~LargeDisplacementBeamEMCElement()</text>
<text text-anchor="start" x="153" y="-1158.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="153" y="-1147.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="153" y="-1136.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="153" y="-1125.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="153" y="-1114.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="153" y="-1103.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="153" y="-1092.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="153" y="-1081.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LargeDisplacementBeamEMCElement()</text>
<text text-anchor="start" x="153" y="-1070.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeElementData()</text>
<text text-anchor="start" x="153" y="-1059.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MapToSpatialFrame()</text>
<text text-anchor="start" x="153" y="-1048.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateKinematics()</text>
<text text-anchor="start" x="153" y="-1037.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculatePreviousDeltaPosition()</text>
<text text-anchor="start" x="153" y="-1026.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateFrameMapping()</text>
<text text-anchor="start" x="153" y="-1015.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateStrainVariables()</text>
<text text-anchor="start" x="153" y="-1004.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateAlphaRotationMatrix()</text>
<text text-anchor="start" x="153" y="-993.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateCurrentStrainResultants</text>
<text text-anchor="start" x="153" y="-982.5" font-family="Helvetica,sans-Serif" font-size="10.00">Vector()</text>
<text text-anchor="start" x="153" y="-971.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateCurrentCurvature</text>
<text text-anchor="start" x="153" y="-960.5" font-family="Helvetica,sans-Serif" font-size="10.00">Vector()</text>
<text text-anchor="start" x="153" y="-949.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateConstitutiveMatrix()</text>
<text text-anchor="start" x="153" y="-938.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 11 more...</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M259.5,-921.13C259.5,-912.02 259.5,-902.9 259.5,-893.79"/>
<polygon fill="none" stroke="midnightblue" points="256,-921.4 259.5,-931.4 263,-921.4 256,-921.4"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d2/dbb/class_kratos_1_1_large_displacement_beam_element.html" target="_top" xlink:title="Beam Element for 3D space dimension Simo Displacement&#45;Rotation Geometrically Exact Rod element.">
<polygon fill="none" stroke="black" points="156,-1796.5 156,-2799.5 363,-2799.5 363,-1796.5 156,-1796.5"/>
<text text-anchor="start" x="164" y="-2787.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::LargeDisplacement</text>
<text text-anchor="middle" x="259.5" y="-2776.5" font-family="Helvetica,sans-Serif" font-size="10.00">BeamElement</text>
<polyline fill="none" stroke="black" points="156,-2769.5 363,-2769.5 "/>
<text text-anchor="start" x="164" y="-2757.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mReducedIntegrationMethod</text>
<text text-anchor="start" x="164" y="-2746.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mFullIntegrationMethod</text>
<text text-anchor="start" x="164" y="-2735.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mIterationCounter</text>
<text text-anchor="start" x="164" y="-2724.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInvJ0</text>
<text text-anchor="start" x="164" y="-2713.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCurrentCurvatureVectors</text>
<text text-anchor="start" x="164" y="-2702.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mPreviousCurvatureVectors</text>
<text text-anchor="start" x="164" y="-2691.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mFrameQuaternionsReduced</text>
<text text-anchor="start" x="164" y="-2680.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mFrameQuaternionsFull</text>
<polyline fill="none" stroke="black" points="156,-2673.5 363,-2673.5 "/>
<text text-anchor="start" x="164" y="-2661.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LargeDisplacementBeamElement()</text>
<text text-anchor="start" x="164" y="-2650.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LargeDisplacementBeamElement()</text>
<text text-anchor="start" x="164" y="-2639.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LargeDisplacementBeamElement()</text>
<text text-anchor="start" x="164" y="-2628.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~LargeDisplacementBeamElement()</text>
<text text-anchor="start" x="164" y="-2617.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="164" y="-2606.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="164" y="-2595.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="164" y="-2584.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeNonLinearIteration()</text>
<text text-anchor="start" x="164" y="-2573.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeNonLinearIteration()</text>
<text text-anchor="start" x="164" y="-2562.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="164" y="-2551.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateMassMatrix()</text>
<text text-anchor="start" x="164" y="-2540.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateOnIntegrationPoints()</text>
<text text-anchor="start" x="164" y="-2529.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateOnIntegrationPoints()</text>
<text text-anchor="start" x="164" y="-2518.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="164" y="-2507.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="164" y="-2496.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="164" y="-2485.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="164" y="-2474.5" font-family="Helvetica,sans-Serif" font-size="10.00"># LargeDisplacementBeamElement()</text>
<text text-anchor="start" x="164" y="-2463.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetReducedIntegrationMethod()</text>
<text text-anchor="start" x="164" y="-2452.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetFullIntegrationMethod()</text>
<text text-anchor="start" x="164" y="-2441.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateDynamicSystem()</text>
<text text-anchor="start" x="164" y="-2430.5" font-family="Helvetica,sans-Serif" font-size="10.00"># MapToSpatialFrame()</text>
<text text-anchor="start" x="164" y="-2419.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateCurrentCurvature()</text>
<text text-anchor="start" x="164" y="-2408.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateKinematics()</text>
<text text-anchor="start" x="164" y="-2397.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateFrameMapping()</text>
<text text-anchor="start" x="164" y="-2386.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateStrainVariables()</text>
<text text-anchor="start" x="164" y="-2375.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateConstitutiveMatrix()</text>
<text text-anchor="start" x="164" y="-2364.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateStressResultants()</text>
<text text-anchor="start" x="164" y="-2353.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 24 more...</text>
<text text-anchor="start" x="164" y="-2342.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstitutiveLawType</text>
<text text-anchor="start" x="164" y="-2331.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstitutiveLawPointerType</text>
<text text-anchor="start" x="164" y="-2320.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StressMeasureType</text>
<text text-anchor="start" x="164" y="-2309.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IntegrationMethod</text>
<text text-anchor="start" x="164" y="-2298.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BeamMathUtilsType</text>
<text text-anchor="start" x="164" y="-2287.5" font-family="Helvetica,sans-Serif" font-size="10.00">* QuaternionType</text>
<text text-anchor="start" x="164" y="-2276.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="164" y="-2265.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementDataType</text>
<text text-anchor="start" x="164" y="-2254.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_INTRUSIVE</text>
<text text-anchor="start" x="164" y="-2243.5" font-family="Helvetica,sans-Serif" font-size="10.00">_POINTER_DEFINITION()</text>
<text text-anchor="start" x="164" y="-2232.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReducedIntegrationMethod</text>
<text text-anchor="start" x="164" y="-2221.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFullIntegrationMethod</text>
<text text-anchor="start" x="164" y="-2210.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIterationCounter</text>
<text text-anchor="start" x="164" y="-2199.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInvJ0</text>
<text text-anchor="start" x="164" y="-2188.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCurrentCurvatureVectors</text>
<text text-anchor="start" x="164" y="-2177.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPreviousCurvatureVectors</text>
<text text-anchor="start" x="164" y="-2166.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFrameQuaternionsReduced</text>
<text text-anchor="start" x="164" y="-2155.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFrameQuaternionsFull</text>
<text text-anchor="start" x="164" y="-2144.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="164" y="-2133.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="164" y="-2122.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="164" y="-2111.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LargeDisplacementBeamElement()</text>
<text text-anchor="start" x="164" y="-2100.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LargeDisplacementBeamElement()</text>
<text text-anchor="start" x="164" y="-2089.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LargeDisplacementBeamElement()</text>
<text text-anchor="start" x="164" y="-2078.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~LargeDisplacementBeamElement()</text>
<text text-anchor="start" x="164" y="-2067.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="164" y="-2056.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="164" y="-2045.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="164" y="-2034.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeNonLinearIteration()</text>
<text text-anchor="start" x="164" y="-2023.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeNonLinearIteration()</text>
<text text-anchor="start" x="164" y="-2012.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="164" y="-2001.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateMassMatrix()</text>
<text text-anchor="start" x="164" y="-1990.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateOnIntegrationPoints()</text>
<text text-anchor="start" x="164" y="-1979.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateOnIntegrationPoints()</text>
<text text-anchor="start" x="164" y="-1968.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="164" y="-1957.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="164" y="-1946.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="164" y="-1935.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="164" y="-1924.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LargeDisplacementBeamElement()</text>
<text text-anchor="start" x="164" y="-1913.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetReducedIntegrationMethod()</text>
<text text-anchor="start" x="164" y="-1902.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFullIntegrationMethod()</text>
<text text-anchor="start" x="164" y="-1891.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateDynamicSystem()</text>
<text text-anchor="start" x="164" y="-1880.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MapToSpatialFrame()</text>
<text text-anchor="start" x="164" y="-1869.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateCurrentCurvature()</text>
<text text-anchor="start" x="164" y="-1858.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateKinematics()</text>
<text text-anchor="start" x="164" y="-1847.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateFrameMapping()</text>
<text text-anchor="start" x="164" y="-1836.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateStrainVariables()</text>
<text text-anchor="start" x="164" y="-1825.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateConstitutiveMatrix()</text>
<text text-anchor="start" x="164" y="-1814.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressResultants()</text>
<text text-anchor="start" x="164" y="-1803.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 24 more...</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M259.5,-1786.37C259.5,-1777.1 259.5,-1767.84 259.5,-1758.62"/>
<polygon fill="none" stroke="midnightblue" points="256,-1786.44 259.5,-1796.44 263,-1786.44 256,-1786.44"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../d8/d56/class_kratos_1_1_beam_element.html" target="_top" xlink:title="Beam Element for 2D and 3D space dimensions.">
<polygon fill="none" stroke="black" points="172,-2837.5 172,-3752.5 347,-3752.5 347,-2837.5 172,-2837.5"/>
<text text-anchor="middle" x="259.5" y="-3740.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::BeamElement</text>
<polyline fill="none" stroke="black" points="172,-3733.5 347,-3733.5 "/>
<text text-anchor="start" x="180" y="-3721.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mThisIntegrationMethod</text>
<polyline fill="none" stroke="black" points="172,-3714.5 347,-3714.5 "/>
<text text-anchor="start" x="180" y="-3702.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BeamElement()</text>
<text text-anchor="start" x="180" y="-3691.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BeamElement()</text>
<text text-anchor="start" x="180" y="-3680.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BeamElement()</text>
<text text-anchor="start" x="180" y="-3669.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~BeamElement()</text>
<text text-anchor="start" x="180" y="-3658.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="180" y="-3647.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetIntegrationMethod()</text>
<text text-anchor="start" x="180" y="-3636.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDofList()</text>
<text text-anchor="start" x="180" y="-3625.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EquationIdVector()</text>
<text text-anchor="start" x="180" y="-3614.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValuesVector()</text>
<text text-anchor="start" x="180" y="-3603.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetFirstDerivativesVector()</text>
<text text-anchor="start" x="180" y="-3592.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSecondDerivativesVector()</text>
<text text-anchor="start" x="180" y="-3581.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="180" y="-3570.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="180" y="-3559.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeNonLinearIteration()</text>
<text text-anchor="start" x="180" y="-3548.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 13 more...</text>
<text text-anchor="start" x="180" y="-3537.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="180" y="-3526.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="180" y="-3515.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="180" y="-3504.5" font-family="Helvetica,sans-Serif" font-size="10.00"># KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="180" y="-3493.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="180" y="-3482.5" font-family="Helvetica,sans-Serif" font-size="10.00"># KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="180" y="-3471.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="180" y="-3460.5" font-family="Helvetica,sans-Serif" font-size="10.00"># KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="180" y="-3449.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="180" y="-3438.5" font-family="Helvetica,sans-Serif" font-size="10.00"># BeamElement()</text>
<text text-anchor="start" x="180" y="-3427.5" font-family="Helvetica,sans-Serif" font-size="10.00"># IncreaseIntegrationMethod()</text>
<text text-anchor="start" x="180" y="-3416.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateElementalSystem()</text>
<text text-anchor="start" x="180" y="-3405.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateDynamicSystem()</text>
<text text-anchor="start" x="180" y="-3394.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetDofsSize()</text>
<text text-anchor="start" x="180" y="-3383.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeSystemMatrices()</text>
<text text-anchor="start" x="180" y="-3372.5" font-family="Helvetica,sans-Serif" font-size="10.00"># MapToInitialLocalFrame()</text>
<text text-anchor="start" x="180" y="-3361.5" font-family="Helvetica,sans-Serif" font-size="10.00"># MapLocalToGlobal()</text>
<text text-anchor="start" x="180" y="-3350.5" font-family="Helvetica,sans-Serif" font-size="10.00"># MapLocalToGlobal()</text>
<text text-anchor="start" x="180" y="-3339.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetLocalCurrentValue()</text>
<text text-anchor="start" x="180" y="-3328.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetLocalPreviousValue()</text>
<text text-anchor="start" x="180" y="-3317.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 21 more...</text>
<text text-anchor="start" x="180" y="-3306.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstitutiveLawType</text>
<text text-anchor="start" x="180" y="-3295.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstitutiveLawPointerType</text>
<text text-anchor="start" x="180" y="-3284.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StressMeasureType</text>
<text text-anchor="start" x="180" y="-3273.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IntegrationMethod</text>
<text text-anchor="start" x="180" y="-3262.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BeamMathUtilsType</text>
<text text-anchor="start" x="180" y="-3251.5" font-family="Helvetica,sans-Serif" font-size="10.00">* QuaternionType</text>
<text text-anchor="start" x="180" y="-3240.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="180" y="-3229.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_INTRUSIVE</text>
<text text-anchor="start" x="180" y="-3218.5" font-family="Helvetica,sans-Serif" font-size="10.00">_POINTER_DEFINITION()</text>
<text text-anchor="start" x="180" y="-3207.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mThisIntegrationMethod</text>
<text text-anchor="start" x="180" y="-3196.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="180" y="-3185.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="180" y="-3174.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="180" y="-3163.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BeamElement()</text>
<text text-anchor="start" x="180" y="-3152.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BeamElement()</text>
<text text-anchor="start" x="180" y="-3141.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BeamElement()</text>
<text text-anchor="start" x="180" y="-3130.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~BeamElement()</text>
<text text-anchor="start" x="180" y="-3119.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="180" y="-3108.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetIntegrationMethod()</text>
<text text-anchor="start" x="180" y="-3097.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDofList()</text>
<text text-anchor="start" x="180" y="-3086.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EquationIdVector()</text>
<text text-anchor="start" x="180" y="-3075.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValuesVector()</text>
<text text-anchor="start" x="180" y="-3064.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFirstDerivativesVector()</text>
<text text-anchor="start" x="180" y="-3053.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSecondDerivativesVector()</text>
<text text-anchor="start" x="180" y="-3042.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="180" y="-3031.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="180" y="-3020.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeNonLinearIteration()</text>
<text text-anchor="start" x="180" y="-3009.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 13 more...</text>
<text text-anchor="start" x="180" y="-2998.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="180" y="-2987.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="180" y="-2976.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="180" y="-2965.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BeamElement()</text>
<text text-anchor="start" x="180" y="-2954.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IncreaseIntegrationMethod()</text>
<text text-anchor="start" x="180" y="-2943.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateElementalSystem()</text>
<text text-anchor="start" x="180" y="-2932.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateDynamicSystem()</text>
<text text-anchor="start" x="180" y="-2921.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDofsSize()</text>
<text text-anchor="start" x="180" y="-2910.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSystemMatrices()</text>
<text text-anchor="start" x="180" y="-2899.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MapToInitialLocalFrame()</text>
<text text-anchor="start" x="180" y="-2888.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MapLocalToGlobal()</text>
<text text-anchor="start" x="180" y="-2877.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MapLocalToGlobal()</text>
<text text-anchor="start" x="180" y="-2866.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetLocalCurrentValue()</text>
<text text-anchor="start" x="180" y="-2855.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetLocalPreviousValue()</text>
<text text-anchor="start" x="180" y="-2844.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 21 more...</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M259.5,-2827C259.5,-2817.89 259.5,-2808.77 259.5,-2799.65"/>
<polygon fill="none" stroke="midnightblue" points="256,-2827.27 259.5,-2837.27 263,-2827.27 256,-2827.27"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../d5/dd4/class_kratos_1_1_element.html" target="_top" xlink:title="Base class for all Elements.">
<polygon fill="none" stroke="black" points="70,-3855.5 70,-4682.5 245,-4682.5 245,-3855.5 70,-3855.5"/>
<text text-anchor="middle" x="157.5" y="-4670.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Element</text>
<polyline fill="none" stroke="black" points="70,-4663.5 245,-4663.5 "/>
<text text-anchor="middle" x="157.5" y="-4651.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="70,-4644.5 245,-4644.5 "/>
<text text-anchor="start" x="78" y="-4632.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Element()</text>
<text text-anchor="start" x="78" y="-4621.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Element()</text>
<text text-anchor="start" x="78" y="-4610.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Element()</text>
<text text-anchor="start" x="78" y="-4599.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Element()</text>
<text text-anchor="start" x="78" y="-4588.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Element()</text>
<text text-anchor="start" x="78" y="-4577.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~Element()</text>
<text text-anchor="start" x="78" y="-4566.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="78" y="-4555.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="78" y="-4544.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="78" y="-4533.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="78" y="-4522.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EquationIdVector()</text>
<text text-anchor="start" x="78" y="-4511.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDofList()</text>
<text text-anchor="start" x="78" y="-4500.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetIntegrationMethod()</text>
<text text-anchor="start" x="78" y="-4489.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValuesVector()</text>
<text text-anchor="start" x="78" y="-4478.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetFirstDerivativesVector()</text>
<text text-anchor="start" x="78" y="-4467.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSecondDerivativesVector()</text>
<text text-anchor="start" x="78" y="-4456.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="78" y="-4445.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 53 more...</text>
<text text-anchor="start" x="78" y="-4434.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetProperties()</text>
<text text-anchor="start" x="78" y="-4423.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetProperties()</text>
<text text-anchor="start" x="78" y="-4412.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetProperties()</text>
<text text-anchor="start" x="78" y="-4401.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetProperties()</text>
<text text-anchor="start" x="78" y="-4390.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetProperties()</text>
<text text-anchor="start" x="78" y="-4379.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ HasProperties()</text>
<text text-anchor="start" x="78" y="-4368.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSpecifications()</text>
<text text-anchor="start" x="78" y="-4357.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="78" y="-4346.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="78" y="-4335.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="78" y="-4324.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementType</text>
<text text-anchor="start" x="78" y="-4313.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="78" y="-4302.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="78" y="-4291.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PropertiesType</text>
<text text-anchor="start" x="78" y="-4280.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GeometryType</text>
<text text-anchor="start" x="78" y="-4269.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodesArrayType</text>
<text text-anchor="start" x="78" y="-4258.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="78" y="-4247.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MatrixType</text>
<text text-anchor="start" x="78" y="-4236.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="78" y="-4225.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="78" y="-4214.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="78" y="-4203.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpProperties</text>
<text text-anchor="start" x="78" y="-4192.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="78" y="-4181.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="78" y="-4170.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="78" y="-4159.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Element()</text>
<text text-anchor="start" x="78" y="-4148.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Element()</text>
<text text-anchor="start" x="78" y="-4137.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Element()</text>
<text text-anchor="start" x="78" y="-4126.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Element()</text>
<text text-anchor="start" x="78" y="-4115.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Element()</text>
<text text-anchor="start" x="78" y="-4104.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Element()</text>
<text text-anchor="start" x="78" y="-4093.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="78" y="-4082.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="78" y="-4071.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="78" y="-4060.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="78" y="-4049.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EquationIdVector()</text>
<text text-anchor="start" x="78" y="-4038.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDofList()</text>
<text text-anchor="start" x="78" y="-4027.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetIntegrationMethod()</text>
<text text-anchor="start" x="78" y="-4016.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValuesVector()</text>
<text text-anchor="start" x="78" y="-4005.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFirstDerivativesVector()</text>
<text text-anchor="start" x="78" y="-3994.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSecondDerivativesVector()</text>
<text text-anchor="start" x="78" y="-3983.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="78" y="-3972.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 53 more...</text>
<text text-anchor="start" x="78" y="-3961.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetProperties()</text>
<text text-anchor="start" x="78" y="-3950.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetProperties()</text>
<text text-anchor="start" x="78" y="-3939.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetProperties()</text>
<text text-anchor="start" x="78" y="-3928.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetProperties()</text>
<text text-anchor="start" x="78" y="-3917.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetProperties()</text>
<text text-anchor="start" x="78" y="-3906.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HasProperties()</text>
<text text-anchor="start" x="78" y="-3895.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSpecifications()</text>
<text text-anchor="start" x="78" y="-3884.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="78" y="-3873.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="78" y="-3862.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M201.84,-3845.46C205.07,-3814.69 208.33,-3783.57 211.58,-3752.62"/>
<polygon fill="none" stroke="midnightblue" points="198.36,-3845.12 200.79,-3855.43 205.32,-3845.85 198.36,-3845.12"/>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="../../d3/d62/class_kratos_1_1_geometrical_object.html" target="_top" xlink:title="This defines the geometrical object, base definition of the element and condition entities.">
<polygon fill="none" stroke="black" points="78.5,-4775.5 78.5,-5591.5 236.5,-5591.5 236.5,-4775.5 78.5,-4775.5"/>
<text text-anchor="middle" x="157.5" y="-5579.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::GeometricalObject</text>
<polyline fill="none" stroke="black" points="78.5,-5572.5 236.5,-5572.5 "/>
<text text-anchor="middle" x="157.5" y="-5560.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="78.5,-5553.5 236.5,-5553.5 "/>
<text text-anchor="start" x="86.5" y="-5541.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GeometricalObject()</text>
<text text-anchor="start" x="86.5" y="-5530.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GeometricalObject()</text>
<text text-anchor="start" x="86.5" y="-5519.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~GeometricalObject()</text>
<text text-anchor="start" x="86.5" y="-5508.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GeometricalObject()</text>
<text text-anchor="start" x="86.5" y="-5497.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="86.5" y="-5486.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetGeometry()</text>
<text text-anchor="start" x="86.5" y="-5475.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetGeometry()</text>
<text text-anchor="start" x="86.5" y="-5464.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetGeometry()</text>
<text text-anchor="start" x="86.5" y="-5453.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetGeometry()</text>
<text text-anchor="start" x="86.5" y="-5442.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetGeometry()</text>
<text text-anchor="start" x="86.5" y="-5431.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetFlags()</text>
<text text-anchor="start" x="86.5" y="-5420.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetFlags()</text>
<text text-anchor="start" x="86.5" y="-5409.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetFlags()</text>
<text text-anchor="start" x="86.5" y="-5398.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Data()</text>
<text text-anchor="start" x="86.5" y="-5387.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetData()</text>
<text text-anchor="start" x="86.5" y="-5376.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetData()</text>
<text text-anchor="start" x="86.5" y="-5365.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetData()</text>
<text text-anchor="start" x="86.5" y="-5354.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Has()</text>
<text text-anchor="start" x="86.5" y="-5343.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="86.5" y="-5332.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="86.5" y="-5321.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="86.5" y="-5310.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="86.5" y="-5299.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="86.5" y="-5288.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="86.5" y="-5277.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ use_count()</text>
<text text-anchor="start" x="86.5" y="-5266.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="86.5" y="-5255.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GeometryType</text>
<text text-anchor="start" x="86.5" y="-5244.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="86.5" y="-5233.5" font-family="Helvetica,sans-Serif" font-size="10.00">* result_type</text>
<text text-anchor="start" x="86.5" y="-5222.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_INTRUSIVE</text>
<text text-anchor="start" x="86.5" y="-5211.5" font-family="Helvetica,sans-Serif" font-size="10.00">_POINTER_DEFINITION()</text>
<text text-anchor="start" x="86.5" y="-5200.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpGeometry</text>
<text text-anchor="start" x="86.5" y="-5189.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReferenceCounter</text>
<text text-anchor="start" x="86.5" y="-5178.5" font-family="Helvetica,sans-Serif" font-size="10.00">* intrusive_ptr_add_ref</text>
<text text-anchor="start" x="86.5" y="-5167.5" font-family="Helvetica,sans-Serif" font-size="10.00">* intrusive_ptr_release</text>
<text text-anchor="start" x="86.5" y="-5156.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="86.5" y="-5145.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="86.5" y="-5134.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="86.5" y="-5123.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GeometricalObject()</text>
<text text-anchor="start" x="86.5" y="-5112.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GeometricalObject()</text>
<text text-anchor="start" x="86.5" y="-5101.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~GeometricalObject()</text>
<text text-anchor="start" x="86.5" y="-5090.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GeometricalObject()</text>
<text text-anchor="start" x="86.5" y="-5079.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="86.5" y="-5068.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetGeometry()</text>
<text text-anchor="start" x="86.5" y="-5057.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetGeometry()</text>
<text text-anchor="start" x="86.5" y="-5046.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetGeometry()</text>
<text text-anchor="start" x="86.5" y="-5035.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetGeometry()</text>
<text text-anchor="start" x="86.5" y="-5024.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetGeometry()</text>
<text text-anchor="start" x="86.5" y="-5013.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="86.5" y="-5002.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="86.5" y="-4991.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="86.5" y="-4980.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Data()</text>
<text text-anchor="start" x="86.5" y="-4969.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetData()</text>
<text text-anchor="start" x="86.5" y="-4958.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetData()</text>
<text text-anchor="start" x="86.5" y="-4947.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetData()</text>
<text text-anchor="start" x="86.5" y="-4936.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Has()</text>
<text text-anchor="start" x="86.5" y="-4925.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="86.5" y="-4914.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="86.5" y="-4903.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="86.5" y="-4892.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsActive()</text>
<text text-anchor="start" x="86.5" y="-4881.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HasSameType()</text>
<text text-anchor="start" x="86.5" y="-4870.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HasSameType()</text>
<text text-anchor="start" x="86.5" y="-4859.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HasSameGeometryType()</text>
<text text-anchor="start" x="86.5" y="-4848.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HasSameGeometryType()</text>
<text text-anchor="start" x="86.5" y="-4837.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsSame()</text>
<text text-anchor="start" x="86.5" y="-4826.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsSame()</text>
<text text-anchor="start" x="86.5" y="-4815.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="86.5" y="-4804.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="86.5" y="-4793.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="86.5" y="-4782.5" font-family="Helvetica,sans-Serif" font-size="10.00">* use_count()</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M157.5,-4765.18C157.5,-4737.74 157.5,-4710.1 157.5,-4682.67"/>
<polygon fill="none" stroke="midnightblue" points="154,-4765.29 157.5,-4775.29 161,-4765.29 154,-4765.29"/>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="../../da/d1e/class_kratos_1_1_indexed_object.html" target="_top" xlink:title="This object defines an indexed object.">
<polygon fill="none" stroke="black" points="0,-5866 0,-6264 149,-6264 149,-5866 0,-5866"/>
<text text-anchor="middle" x="74.5" y="-6252" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::IndexedObject</text>
<polyline fill="none" stroke="black" points="0,-6245 149,-6245 "/>
<text text-anchor="middle" x="74.5" y="-6233" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-6226 149,-6226 "/>
<text text-anchor="start" x="8" y="-6214" font-family="Helvetica,sans-Serif" font-size="10.00">+ IndexedObject()</text>
<text text-anchor="start" x="8" y="-6203" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~IndexedObject()</text>
<text text-anchor="start" x="8" y="-6192" font-family="Helvetica,sans-Serif" font-size="10.00">+ IndexedObject()</text>
<text text-anchor="start" x="8" y="-6181" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-6170" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="8" y="-6159" font-family="Helvetica,sans-Serif" font-size="10.00">+ Id()</text>
<text text-anchor="start" x="8" y="-6148" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetId()</text>
<text text-anchor="start" x="8" y="-6137" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetId()</text>
<text text-anchor="start" x="8" y="-6126" font-family="Helvetica,sans-Serif" font-size="10.00">+ DepricatedIdAccess()</text>
<text text-anchor="start" x="8" y="-6115" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-6104" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-6093" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-6082" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="8" y="-6071" font-family="Helvetica,sans-Serif" font-size="10.00">* result_type</text>
<text text-anchor="start" x="8" y="-6060" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-6049" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-6038" font-family="Helvetica,sans-Serif" font-size="10.00">* mId</text>
<text text-anchor="start" x="8" y="-6027" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="8" y="-6016" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="8" y="-6005" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="8" y="-5994" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexedObject()</text>
<text text-anchor="start" x="8" y="-5983" font-family="Helvetica,sans-Serif" font-size="10.00">* ~IndexedObject()</text>
<text text-anchor="start" x="8" y="-5972" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexedObject()</text>
<text text-anchor="start" x="8" y="-5961" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-5950" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="8" y="-5939" font-family="Helvetica,sans-Serif" font-size="10.00">* Id()</text>
<text text-anchor="start" x="8" y="-5928" font-family="Helvetica,sans-Serif" font-size="10.00">* GetId()</text>
<text text-anchor="start" x="8" y="-5917" font-family="Helvetica,sans-Serif" font-size="10.00">* SetId()</text>
<text text-anchor="start" x="8" y="-5906" font-family="Helvetica,sans-Serif" font-size="10.00">* DepricatedIdAccess()</text>
<text text-anchor="start" x="8" y="-5895" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-5884" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-5873" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node6 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node6</title>
<path fill="none" stroke="midnightblue" d="M94.16,-5855.7C101.64,-5776.37 110.46,-5683 119.09,-5591.52"/>
<polygon fill="none" stroke="midnightblue" points="90.66,-5855.52 93.2,-5865.8 97.63,-5856.17 90.66,-5855.52"/>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="167,-5629.5 167,-6500.5 316,-6500.5 316,-5629.5 167,-5629.5"/>
<text text-anchor="middle" x="241.5" y="-6488.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="167,-6481.5 316,-6481.5 "/>
<text text-anchor="middle" x="241.5" y="-6469.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="167,-6462.5 316,-6462.5 "/>
<text text-anchor="start" x="175" y="-6450.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="175" y="-6439.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="175" y="-6428.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="175" y="-6417.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="175" y="-6406.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="175" y="-6395.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="175" y="-6384.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="175" y="-6373.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="175" y="-6362.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="175" y="-6351.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="175" y="-6340.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="175" y="-6329.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="175" y="-6318.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="175" y="-6307.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="175" y="-6296.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="175" y="-6285.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="175" y="-6274.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="175" y="-6263.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="175" y="-6252.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="175" y="-6241.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="175" y="-6230.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="175" y="-6219.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="175" y="-6208.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="175" y="-6197.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="175" y="-6186.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="175" y="-6175.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="175" y="-6164.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="175" y="-6153.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="175" y="-6142.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="175" y="-6131.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="175" y="-6120.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="175" y="-6109.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="175" y="-6098.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="175" y="-6087.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="175" y="-6076.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="175" y="-6065.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="175" y="-6054.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="175" y="-6043.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="175" y="-6032.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="175" y="-6021.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="175" y="-6010.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="175" y="-5999.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="175" y="-5988.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="175" y="-5977.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="175" y="-5966.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="175" y="-5955.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="175" y="-5944.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="175" y="-5933.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="175" y="-5922.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="175" y="-5911.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="175" y="-5900.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="175" y="-5889.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="175" y="-5878.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="175" y="-5867.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="175" y="-5856.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="175" y="-5845.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="175" y="-5834.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="175" y="-5823.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="175" y="-5812.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="175" y="-5801.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="175" y="-5790.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="175" y="-5779.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="175" y="-5768.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="175" y="-5757.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="175" y="-5746.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="175" y="-5735.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="175" y="-5724.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="175" y="-5713.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="175" y="-5702.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="175" y="-5691.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="175" y="-5680.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="175" y="-5669.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="175" y="-5658.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="175" y="-5647.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="175" y="-5636.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node6 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node6</title>
<path fill="none" stroke="midnightblue" d="M199.04,-5619.4C198.16,-5610.18 197.28,-5600.97 196.4,-5591.78"/>
<polygon fill="none" stroke="midnightblue" points="195.56,-5619.78 199.99,-5629.4 202.53,-5619.12 195.56,-5619.78"/>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="../../da/de5/class_kratos_1_1_quaternion.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="263,-3800.5 263,-4737.5 460,-4737.5 460,-3800.5 263,-3800.5"/>
<text text-anchor="start" x="271" y="-4725.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Quaternion</text>
<text text-anchor="middle" x="361.5" y="-4714.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; double &gt;</text>
<polyline fill="none" stroke="black" points="263,-4707.5 460,-4707.5 "/>
<text text-anchor="middle" x="361.5" y="-4695.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="263,-4688.5 460,-4688.5 "/>
<text text-anchor="start" x="271" y="-4676.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="271" y="-4665.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="271" y="-4654.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~Quaternion()</text>
<text text-anchor="start" x="271" y="-4643.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="271" y="-4632.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="271" y="-4621.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Quaternion()</text>
<text text-anchor="start" x="271" y="-4610.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Quaternion()</text>
<text text-anchor="start" x="271" y="-4599.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Quaternion()</text>
<text text-anchor="start" x="271" y="-4588.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="271" y="-4577.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="271" y="-4566.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="271" y="-4555.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="271" y="-4544.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_DEPRECATED_MESSAGE()</text>
<text text-anchor="start" x="271" y="-4533.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_DEPRECATED_MESSAGE()</text>
<text text-anchor="start" x="271" y="-4522.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_DEPRECATED_MESSAGE()</text>
<text text-anchor="start" x="271" y="-4511.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_DEPRECATED_MESSAGE()</text>
<text text-anchor="start" x="271" y="-4500.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ X()</text>
<text text-anchor="start" x="271" y="-4489.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetX()</text>
<text text-anchor="start" x="271" y="-4478.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Y()</text>
<text text-anchor="start" x="271" y="-4467.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetY()</text>
<text text-anchor="start" x="271" y="-4456.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Z()</text>
<text text-anchor="start" x="271" y="-4445.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetZ()</text>
<text text-anchor="start" x="271" y="-4434.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ W()</text>
<text text-anchor="start" x="271" y="-4423.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetW()</text>
<text text-anchor="start" x="271" y="-4412.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ squaredNorm()</text>
<text text-anchor="start" x="271" y="-4401.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ norm()</text>
<text text-anchor="start" x="271" y="-4390.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ normalize()</text>
<text text-anchor="start" x="271" y="-4379.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ conjugate()</text>
<text text-anchor="start" x="271" y="-4368.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ToRotationMatrix()</text>
<text text-anchor="start" x="271" y="-4357.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ToEulerAngles()</text>
<text text-anchor="start" x="271" y="-4346.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ToRotationVector()</text>
<text text-anchor="start" x="271" y="-4335.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ToRotationVector()</text>
<text text-anchor="start" x="271" y="-4324.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ RotateVector3()</text>
<text text-anchor="start" x="271" y="-4313.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ RotateVector3()</text>
<text text-anchor="start" x="271" y="-4302.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Identity()</text>
<text text-anchor="start" x="271" y="-4291.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FromAxisAngle()</text>
<text text-anchor="start" x="271" y="-4280.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FromRotationVector()</text>
<text text-anchor="start" x="271" y="-4269.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FromRotationVector()</text>
<text text-anchor="start" x="271" y="-4258.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FromRotationMatrix()</text>
<text text-anchor="start" x="271" y="-4247.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FromEulerAngles()</text>
<text text-anchor="start" x="271" y="-4236.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mQuaternionValues</text>
<text text-anchor="start" x="271" y="-4225.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="271" y="-4214.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="271" y="-4203.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="271" y="-4192.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="271" y="-4181.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Quaternion()</text>
<text text-anchor="start" x="271" y="-4170.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Quaternion()</text>
<text text-anchor="start" x="271" y="-4159.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Quaternion()</text>
<text text-anchor="start" x="271" y="-4148.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="271" y="-4137.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="271" y="-4126.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="271" y="-4115.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="271" y="-4104.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_DEPRECATED_MESSAGE()</text>
<text text-anchor="start" x="271" y="-4093.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_DEPRECATED_MESSAGE()</text>
<text text-anchor="start" x="271" y="-4082.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_DEPRECATED_MESSAGE()</text>
<text text-anchor="start" x="271" y="-4071.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_DEPRECATED_MESSAGE()</text>
<text text-anchor="start" x="271" y="-4060.5" font-family="Helvetica,sans-Serif" font-size="10.00">* X()</text>
<text text-anchor="start" x="271" y="-4049.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetX()</text>
<text text-anchor="start" x="271" y="-4038.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Y()</text>
<text text-anchor="start" x="271" y="-4027.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetY()</text>
<text text-anchor="start" x="271" y="-4016.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Z()</text>
<text text-anchor="start" x="271" y="-4005.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetZ()</text>
<text text-anchor="start" x="271" y="-3994.5" font-family="Helvetica,sans-Serif" font-size="10.00">* W()</text>
<text text-anchor="start" x="271" y="-3983.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetW()</text>
<text text-anchor="start" x="271" y="-3972.5" font-family="Helvetica,sans-Serif" font-size="10.00">* squaredNorm()</text>
<text text-anchor="start" x="271" y="-3961.5" font-family="Helvetica,sans-Serif" font-size="10.00">* norm()</text>
<text text-anchor="start" x="271" y="-3950.5" font-family="Helvetica,sans-Serif" font-size="10.00">* normalize()</text>
<text text-anchor="start" x="271" y="-3939.5" font-family="Helvetica,sans-Serif" font-size="10.00">* conjugate()</text>
<text text-anchor="start" x="271" y="-3928.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ToRotationMatrix()</text>
<text text-anchor="start" x="271" y="-3917.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ToEulerAngles()</text>
<text text-anchor="start" x="271" y="-3906.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ToRotationVector()</text>
<text text-anchor="start" x="271" y="-3895.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ToRotationVector()</text>
<text text-anchor="start" x="271" y="-3884.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RotateVector3()</text>
<text text-anchor="start" x="271" y="-3873.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RotateVector3()</text>
<text text-anchor="start" x="271" y="-3862.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Identity()</text>
<text text-anchor="start" x="271" y="-3851.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FromAxisAngle()</text>
<text text-anchor="start" x="271" y="-3840.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FromRotationVector()</text>
<text text-anchor="start" x="271" y="-3829.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FromRotationVector()</text>
<text text-anchor="start" x="271" y="-3818.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FromRotationMatrix()</text>
<text text-anchor="start" x="271" y="-3807.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FromEulerAngles()</text>
</a>
</g>
</g>
<!-- Node9&#45;&gt;Node4 -->
<g id="edge8" class="edge">
<title>Node9&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M312.4,-3800.15C311.17,-3788.42 309.94,-3776.68 308.71,-3764.96"/>
<polygon fill="none" stroke="#404040" points="308.68,-3764.68 304.08,-3759.13 307.43,-3752.74 312.03,-3758.29 308.68,-3764.68"/>
<text text-anchor="middle" x="375" y="-3774" font-family="Helvetica,sans-Serif" font-size="10.00"> #mInitialLocalQuaternion</text>
</g>
</g>
</svg>
