<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::MixedULMLinearSolver&lt; TSparseSpaceType, TDenseSpaceType, TPreconditionerType, TReordererType &gt; Pages: 1 -->
<!--zoomable 2839 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 286;
var viewHeight = 2839;
var sectionId = 'dynsection-0';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::MixedULMLinearSolver&lt; TSparseSpaceType, TDenseSpaceType, TPreconditionerType, TReordererType &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="This solver is designed for the solution of mixed U&#45;LM problems (this solver in particular is optimiz...">
<polygon fill="#bfbfbf" stroke="black" points="31,-0.5 31,-948.5 247,-948.5 247,-0.5 31,-0.5"/>
<text text-anchor="start" x="39" y="-936.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::MixedULMLinearSolver</text>
<text text-anchor="start" x="39" y="-925.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpaceType, TDenseSpaceType,</text>
<text text-anchor="middle" x="139" y="-914.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TPreconditionerType, TReordererType &gt;</text>
<polyline fill="none" stroke="black" points="31,-907.5 247,-907.5 "/>
<text text-anchor="middle" x="139" y="-895.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="31,-888.5 247,-888.5 "/>
<text text-anchor="start" x="39" y="-876.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ MixedULMLinearSolver()</text>
<text text-anchor="start" x="39" y="-865.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ MixedULMLinearSolver()</text>
<text text-anchor="start" x="39" y="-854.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ MixedULMLinearSolver()</text>
<text text-anchor="start" x="39" y="-843.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~MixedULMLinearSolver()</text>
<text text-anchor="start" x="39" y="-832.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="39" y="-821.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="39" y="-810.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="39" y="-799.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PerformSolutionStep()</text>
<text text-anchor="start" x="39" y="-788.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="39" y="-777.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="39" y="-766.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="39" y="-755.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="39" y="-744.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AdditionalPhysicalDataIs</text>
<text text-anchor="start" x="39" y="-733.5" font-family="Helvetica,sans-Serif" font-size="10.00">Needed()</text>
<text text-anchor="start" x="39" y="-722.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ProvideAdditionalData()</text>
<text text-anchor="start" x="39" y="-711.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDisplacementDofs()</text>
<text text-anchor="start" x="39" y="-700.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDisplacementDofs()</text>
<text text-anchor="start" x="39" y="-689.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="39" y="-678.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="39" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="39" y="-656.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FillBlockMatrices()</text>
<text text-anchor="start" x="39" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="39" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="39" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolverType</text>
<text text-anchor="start" x="39" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolverPointerType</text>
<text text-anchor="start" x="39" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixType</text>
<text text-anchor="start" x="39" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="39" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="39" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseVectorType</text>
<text text-anchor="start" x="39" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofType</text>
<text text-anchor="start" x="39" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="39" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConditionsArrayType</text>
<text text-anchor="start" x="39" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 9 more...</text>
<text text-anchor="start" x="39" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpSolverDispBlock</text>
<text text-anchor="start" x="39" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mOptions</text>
<text text-anchor="start" x="39" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mDisplacementDofs</text>
<text text-anchor="start" x="39" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMasterIndices</text>
<text text-anchor="start" x="39" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSlaveInactiveIndices</text>
<text text-anchor="start" x="39" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSlaveActiveIndices</text>
<text text-anchor="start" x="39" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mLMInactiveIndices</text>
<text text-anchor="start" x="39" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mLMActiveIndices</text>
<text text-anchor="start" x="39" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mOtherIndices</text>
<text text-anchor="start" x="39" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mGlobalToLocalIndexing</text>
<text text-anchor="start" x="39" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 18 more...</text>
<text text-anchor="start" x="39" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MixedULMLinearSolver()</text>
<text text-anchor="start" x="39" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MixedULMLinearSolver()</text>
<text text-anchor="start" x="39" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MixedULMLinearSolver()</text>
<text text-anchor="start" x="39" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~MixedULMLinearSolver()</text>
<text text-anchor="start" x="39" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="39" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="39" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="39" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PerformSolutionStep()</text>
<text text-anchor="start" x="39" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="39" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="39" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="39" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="39" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AdditionalPhysicalDataIs</text>
<text text-anchor="start" x="39" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">Needed()</text>
<text text-anchor="start" x="39" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ProvideAdditionalData()</text>
<text text-anchor="start" x="39" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDisplacementDofs()</text>
<text text-anchor="start" x="39" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDisplacementDofs()</text>
<text text-anchor="start" x="39" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="39" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="39" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="39" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FillBlockMatrices()</text>
<text text-anchor="start" x="39" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeNonZeroColumnsDisp</text>
<text text-anchor="start" x="39" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">DoFs()</text>
<text text-anchor="start" x="39" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeNonZeroColumnsPartial</text>
<text text-anchor="start" x="39" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">DispDoFs()</text>
<text text-anchor="start" x="39" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeAuxiliaryValuesDisp</text>
<text text-anchor="start" x="39" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">DoFs()</text>
<text text-anchor="start" x="39" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeAuxiliaryValuesPartial</text>
<text text-anchor="start" x="39" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">DispDoFs()</text>
<text text-anchor="start" x="39" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllocateBlocks()</text>
<text text-anchor="start" x="39" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetUPart()</text>
<text text-anchor="start" x="39" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetLMAPart()</text>
<text text-anchor="start" x="39" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetLMIPart()</text>
<text text-anchor="start" x="39" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUPart()</text>
<text text-anchor="start" x="39" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetLMAPart()</text>
<text text-anchor="start" x="39" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../df/de5/class_kratos_1_1_iterative_solver.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="0,-985.5 0,-1977.5 278,-1977.5 278,-985.5 0,-985.5"/>
<text text-anchor="start" x="8" y="-1965.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::IterativeSolver</text>
<text text-anchor="start" x="8" y="-1954.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpaceType, TDenseSpace</text>
<text text-anchor="start" x="8" y="-1943.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type, Preconditioner&lt; TSparseSpaceType,</text>
<text text-anchor="start" x="8" y="-1932.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpaceType &gt;, Reorderer&lt; TSparseSpaceType,</text>
<text text-anchor="middle" x="139" y="-1921.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpaceType &gt; &gt;</text>
<polyline fill="none" stroke="black" points="0,-1914.5 278,-1914.5 "/>
<text text-anchor="start" x="8" y="-1902.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mResidualNorm</text>
<text text-anchor="start" x="8" y="-1891.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mFirstResidualNorm</text>
<text text-anchor="start" x="8" y="-1880.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mIterationsNumber</text>
<text text-anchor="start" x="8" y="-1869.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mBNorm</text>
<polyline fill="none" stroke="black" points="0,-1862.5 278,-1862.5 "/>
<text text-anchor="start" x="8" y="-1850.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1839.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1828.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1817.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1806.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1795.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1784.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1773.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-1762.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1751.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1740.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="8" y="-1729.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AdditionalPhysicalDataIs</text>
<text text-anchor="start" x="8" y="-1718.5" font-family="Helvetica,sans-Serif" font-size="10.00">Needed()</text>
<text text-anchor="start" x="8" y="-1707.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ProvideAdditionalData()</text>
<text text-anchor="start" x="8" y="-1696.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPreconditioner()</text>
<text text-anchor="start" x="8" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPreconditioner()</text>
<text text-anchor="start" x="8" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPreconditioner()</text>
<text text-anchor="start" x="8" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetMaxIterationsNumber()</text>
<text text-anchor="start" x="8" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMaxIterationsNumber()</text>
<text text-anchor="start" x="8" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetIterationsNumber()</text>
<text text-anchor="start" x="8" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetIterationsNumber()</text>
<text text-anchor="start" x="8" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetTolerance()</text>
<text text-anchor="start" x="8" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetTolerance()</text>
<text text-anchor="start" x="8" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetResidualNorm()</text>
<text text-anchor="start" x="8" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetResidualNorm()</text>
<text text-anchor="start" x="8" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterationNeeded()</text>
<text text-anchor="start" x="8" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsConverged()</text>
<text text-anchor="start" x="8" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PreconditionedMult()</text>
<text text-anchor="start" x="8" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PreconditionedTransposeMult()</text>
<text text-anchor="start" x="8" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="8" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixType</text>
<text text-anchor="start" x="8" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="8" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="8" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PreconditionerType</text>
<text text-anchor="start" x="8" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="8" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mResidualNorm</text>
<text text-anchor="start" x="8" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFirstResidualNorm</text>
<text text-anchor="start" x="8" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIterationsNumber</text>
<text text-anchor="start" x="8" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mBNorm</text>
<text text-anchor="start" x="8" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpPreconditioner</text>
<text text-anchor="start" x="8" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mTolerance</text>
<text text-anchor="start" x="8" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxIterationsNumber</text>
<text text-anchor="start" x="8" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="8" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AdditionalPhysicalDataIs</text>
<text text-anchor="start" x="8" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">Needed()</text>
<text text-anchor="start" x="8" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ProvideAdditionalData()</text>
<text text-anchor="start" x="8" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPreconditioner()</text>
<text text-anchor="start" x="8" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPreconditioner()</text>
<text text-anchor="start" x="8" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPreconditioner()</text>
<text text-anchor="start" x="8" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetMaxIterationsNumber()</text>
<text text-anchor="start" x="8" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMaxIterationsNumber()</text>
<text text-anchor="start" x="8" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetIterationsNumber()</text>
<text text-anchor="start" x="8" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetIterationsNumber()</text>
<text text-anchor="start" x="8" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetTolerance()</text>
<text text-anchor="start" x="8" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetTolerance()</text>
<text text-anchor="start" x="8" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetResidualNorm()</text>
<text text-anchor="start" x="8" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetResidualNorm()</text>
<text text-anchor="start" x="8" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterationNeeded()</text>
<text text-anchor="start" x="8" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsConverged()</text>
<text text-anchor="start" x="8" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PreconditionedMult()</text>
<text text-anchor="start" x="8" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PreconditionedTransposeMult()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M139,-975.3C139,-966.39 139,-957.48 139,-948.58"/>
<polygon fill="none" stroke="midnightblue" points="135.5,-975.36 139,-985.36 142.5,-975.36 135.5,-975.36"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d1/df6/class_kratos_1_1_linear_solver.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="40,-2014.5 40,-2830.5 238,-2830.5 238,-2014.5 40,-2014.5"/>
<text text-anchor="start" x="48" y="-2818.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::LinearSolver</text>
<text text-anchor="start" x="48" y="-2807.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpaceType, TDenseSpace</text>
<text text-anchor="start" x="48" y="-2796.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type, Reorderer&lt; TSparseSpaceType,</text>
<text text-anchor="middle" x="139" y="-2785.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpaceType &gt; &gt;</text>
<polyline fill="none" stroke="black" points="40,-2778.5 238,-2778.5 "/>
<text text-anchor="middle" x="139" y="-2766.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="40,-2759.5 238,-2759.5 "/>
<text text-anchor="start" x="48" y="-2747.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearSolver()</text>
<text text-anchor="start" x="48" y="-2736.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearSolver()</text>
<text text-anchor="start" x="48" y="-2725.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearSolver()</text>
<text text-anchor="start" x="48" y="-2714.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~LinearSolver()</text>
<text text-anchor="start" x="48" y="-2703.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="48" y="-2692.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="48" y="-2681.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="48" y="-2670.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PerformSolutionStep()</text>
<text text-anchor="start" x="48" y="-2659.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="48" y="-2648.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="48" y="-2637.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="48" y="-2626.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="48" y="-2615.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="48" y="-2604.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AdditionalPhysicalDataIs</text>
<text text-anchor="start" x="48" y="-2593.5" font-family="Helvetica,sans-Serif" font-size="10.00">Needed()</text>
<text text-anchor="start" x="48" y="-2582.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ProvideAdditionalData()</text>
<text text-anchor="start" x="48" y="-2571.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetReorderer()</text>
<text text-anchor="start" x="48" y="-2560.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetReorderer()</text>
<text text-anchor="start" x="48" y="-2549.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetTolerance()</text>
<text text-anchor="start" x="48" y="-2538.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetTolerance()</text>
<text text-anchor="start" x="48" y="-2527.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetIterationsNumber()</text>
<text text-anchor="start" x="48" y="-2516.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsConsistent()</text>
<text text-anchor="start" x="48" y="-2505.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsConsistent()</text>
<text text-anchor="start" x="48" y="-2494.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotConsistent()</text>
<text text-anchor="start" x="48" y="-2483.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotConsistent()</text>
<text text-anchor="start" x="48" y="-2472.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="48" y="-2461.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="48" y="-2450.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="48" y="-2439.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixType</text>
<text text-anchor="start" x="48" y="-2428.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixPointerType</text>
<text text-anchor="start" x="48" y="-2417.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="48" y="-2406.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorPointerType</text>
<text text-anchor="start" x="48" y="-2395.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="48" y="-2384.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseVectorType</text>
<text text-anchor="start" x="48" y="-2373.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="48" y="-2362.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="48" y="-2351.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="48" y="-2340.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="48" y="-2329.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpReorderer</text>
<text text-anchor="start" x="48" y="-2318.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolver()</text>
<text text-anchor="start" x="48" y="-2307.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolver()</text>
<text text-anchor="start" x="48" y="-2296.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolver()</text>
<text text-anchor="start" x="48" y="-2285.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~LinearSolver()</text>
<text text-anchor="start" x="48" y="-2274.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="48" y="-2263.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="48" y="-2252.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="48" y="-2241.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PerformSolutionStep()</text>
<text text-anchor="start" x="48" y="-2230.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="48" y="-2219.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="48" y="-2208.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="48" y="-2197.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="48" y="-2186.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="48" y="-2175.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AdditionalPhysicalDataIs</text>
<text text-anchor="start" x="48" y="-2164.5" font-family="Helvetica,sans-Serif" font-size="10.00">Needed()</text>
<text text-anchor="start" x="48" y="-2153.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ProvideAdditionalData()</text>
<text text-anchor="start" x="48" y="-2142.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetReorderer()</text>
<text text-anchor="start" x="48" y="-2131.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetReorderer()</text>
<text text-anchor="start" x="48" y="-2120.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetTolerance()</text>
<text text-anchor="start" x="48" y="-2109.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetTolerance()</text>
<text text-anchor="start" x="48" y="-2098.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetIterationsNumber()</text>
<text text-anchor="start" x="48" y="-2087.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsConsistent()</text>
<text text-anchor="start" x="48" y="-2076.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsConsistent()</text>
<text text-anchor="start" x="48" y="-2065.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotConsistent()</text>
<text text-anchor="start" x="48" y="-2054.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotConsistent()</text>
<text text-anchor="start" x="48" y="-2043.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="48" y="-2032.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="48" y="-2021.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M139,-2004.35C139,-1995.42 139,-1986.47 139,-1977.5"/>
<polygon fill="none" stroke="midnightblue" points="135.5,-2004.42 139,-2014.42 142.5,-2004.42 135.5,-2004.42"/>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_mixed_u_l_m_linear_solver__inherit__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
