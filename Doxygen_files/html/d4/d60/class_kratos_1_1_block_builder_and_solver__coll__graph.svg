<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::BlockBuilderAndSolver&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt; Pages: 1 -->
<!--zoomable 2829 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 350;
var viewHeight = 2829;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::BlockBuilderAndSolver&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Solution Buider and Solver based on block matrix.">
<polygon fill="#bfbfbf" stroke="black" points="22,-0.5 22,-739.5 193,-739.5 193,-0.5 22,-0.5"/>
<text text-anchor="start" x="30" y="-727.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::BlockBuilderAndSolver</text>
<text text-anchor="start" x="30" y="-716.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="107.5" y="-705.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="22,-698.5 193,-698.5 "/>
<text text-anchor="middle" x="107.5" y="-686.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="22,-679.5 193,-679.5 "/>
<text text-anchor="start" x="30" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BlockBuilderAndSolver()</text>
<text text-anchor="start" x="30" y="-656.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~BlockBuilderAndSolver()</text>
<text text-anchor="start" x="30" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuildLHS()</text>
<text text-anchor="start" x="30" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuildRHS()</text>
<text text-anchor="start" x="30" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Build()</text>
<text text-anchor="start" x="30" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SystemSolve()</text>
<text text-anchor="start" x="30" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuildAndSolve()</text>
<text text-anchor="start" x="30" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuildRHSAndSolve()</text>
<text text-anchor="start" x="30" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ApplyDirichletConditions()</text>
<text text-anchor="start" x="30" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetUpDofSet()</text>
<text text-anchor="start" x="30" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetUpSystem()</text>
<text text-anchor="start" x="30" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetUpSystemMatrices()</text>
<text text-anchor="start" x="30" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="30" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="30" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateReactions()</text>
<text text-anchor="start" x="30" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="30" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="30" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SystemSolveWithPhysics()</text>
<text text-anchor="start" x="30" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ConstructMatrixStructure()</text>
<text text-anchor="start" x="30" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssembleLHS()</text>
<text text-anchor="start" x="30" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssembleRHS()</text>
<text text-anchor="start" x="30" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Assemble()</text>
<text text-anchor="start" x="30" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="30" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BasePointerType</text>
<text text-anchor="start" x="30" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="30" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="30" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixType</text>
<text text-anchor="start" x="30" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="30" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixPointerType</text>
<text text-anchor="start" x="30" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorPointerType</text>
<text text-anchor="start" x="30" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="30" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="30" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="30" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockBuilderAndSolver()</text>
<text text-anchor="start" x="30" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~BlockBuilderAndSolver()</text>
<text text-anchor="start" x="30" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildLHS()</text>
<text text-anchor="start" x="30" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHS()</text>
<text text-anchor="start" x="30" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Build()</text>
<text text-anchor="start" x="30" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemSolve()</text>
<text text-anchor="start" x="30" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndSolve()</text>
<text text-anchor="start" x="30" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHSAndSolve()</text>
<text text-anchor="start" x="30" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ApplyDirichletConditions()</text>
<text text-anchor="start" x="30" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpDofSet()</text>
<text text-anchor="start" x="30" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpSystem()</text>
<text text-anchor="start" x="30" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpSystemMatrices()</text>
<text text-anchor="start" x="30" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="30" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="30" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateReactions()</text>
<text text-anchor="start" x="30" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="30" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="30" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemSolveWithPhysics()</text>
<text text-anchor="start" x="30" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstructMatrixStructure()</text>
<text text-anchor="start" x="30" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleLHS()</text>
<text text-anchor="start" x="30" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleRHS()</text>
<text text-anchor="start" x="30" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Assemble()</text>
<text text-anchor="start" x="30" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddUnique()</text>
<text text-anchor="start" x="30" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHSNoDirichlet()</text>
<text text-anchor="start" x="30" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CreatePartition()</text>
<text text-anchor="start" x="30" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleRowContribution()</text>
<text text-anchor="start" x="30" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ForwardFind()</text>
<text text-anchor="start" x="30" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BackwardFind()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d6/d35/class_kratos_1_1_solution_builder_and_solver.html" target="_top" xlink:title="Solution Buider and Solver base class.">
<polygon fill="none" stroke="black" points="6.5,-777.5 6.5,-1637.5 208.5,-1637.5 208.5,-777.5 6.5,-777.5"/>
<text text-anchor="start" x="14.5" y="-1625.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::SolutionBuilderAnd</text>
<text text-anchor="start" x="14.5" y="-1614.5" font-family="Helvetica,sans-Serif" font-size="10.00">Solver&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="107.5" y="-1603.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="6.5,-1596.5 208.5,-1596.5 "/>
<text text-anchor="start" x="14.5" y="-1584.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpLinearSystemSolver</text>
<text text-anchor="start" x="14.5" y="-1573.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEquationSystemSize</text>
<text text-anchor="start" x="14.5" y="-1562.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<text text-anchor="start" x="14.5" y="-1551.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpReactionsVector</text>
<polyline fill="none" stroke="black" points="6.5,-1544.5 208.5,-1544.5 "/>
<text text-anchor="start" x="14.5" y="-1532.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionBuilderAndSolver()</text>
<text text-anchor="start" x="14.5" y="-1521.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionBuilderAndSolver()</text>
<text text-anchor="start" x="14.5" y="-1510.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SolutionBuilderAndSolver()</text>
<text text-anchor="start" x="14.5" y="-1499.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuildLHS()</text>
<text text-anchor="start" x="14.5" y="-1488.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuildRHS()</text>
<text text-anchor="start" x="14.5" y="-1477.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Build()</text>
<text text-anchor="start" x="14.5" y="-1466.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SystemSolve()</text>
<text text-anchor="start" x="14.5" y="-1455.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuildAndSolve()</text>
<text text-anchor="start" x="14.5" y="-1444.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuildRHSAndSolve()</text>
<text text-anchor="start" x="14.5" y="-1433.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ApplyDirichletConditions()</text>
<text text-anchor="start" x="14.5" y="-1422.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetUpDofSet()</text>
<text text-anchor="start" x="14.5" y="-1411.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetUpSystem()</text>
<text text-anchor="start" x="14.5" y="-1400.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetUpSystemMatrices()</text>
<text text-anchor="start" x="14.5" y="-1389.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="14.5" y="-1378.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="14.5" y="-1367.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateReactions()</text>
<text text-anchor="start" x="14.5" y="-1356.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="14.5" y="-1345.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="14.5" y="-1334.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetEquationSystemSize()</text>
<text text-anchor="start" x="14.5" y="-1323.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetLinearSystemSolver()</text>
<text text-anchor="start" x="14.5" y="-1312.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetOptions()</text>
<text text-anchor="start" x="14.5" y="-1301.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetOptions()</text>
<text text-anchor="start" x="14.5" y="-1290.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="14.5" y="-1279.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetEchoLevel()</text>
<text text-anchor="start" x="14.5" y="-1268.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EchoInfo()</text>
<text text-anchor="start" x="14.5" y="-1257.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDofSet()</text>
<text text-anchor="start" x="14.5" y="-1246.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="14.5" y="-1235.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="14.5" y="-1224.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixType</text>
<text text-anchor="start" x="14.5" y="-1213.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="14.5" y="-1202.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixPointerType</text>
<text text-anchor="start" x="14.5" y="-1191.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorPointerType</text>
<text text-anchor="start" x="14.5" y="-1180.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="14.5" y="-1169.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="14.5" y="-1158.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="14.5" y="-1147.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemePointerType</text>
<text text-anchor="start" x="14.5" y="-1136.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolverPointerType</text>
<text text-anchor="start" x="14.5" y="-1125.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="14.5" y="-1114.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="14.5" y="-1103.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpLinearSystemSolver</text>
<text text-anchor="start" x="14.5" y="-1092.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEquationSystemSize</text>
<text text-anchor="start" x="14.5" y="-1081.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="14.5" y="-1070.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpReactionsVector</text>
<text text-anchor="start" x="14.5" y="-1059.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionBuilderAndSolver()</text>
<text text-anchor="start" x="14.5" y="-1048.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionBuilderAndSolver()</text>
<text text-anchor="start" x="14.5" y="-1037.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~SolutionBuilderAndSolver()</text>
<text text-anchor="start" x="14.5" y="-1026.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildLHS()</text>
<text text-anchor="start" x="14.5" y="-1015.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHS()</text>
<text text-anchor="start" x="14.5" y="-1004.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Build()</text>
<text text-anchor="start" x="14.5" y="-993.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemSolve()</text>
<text text-anchor="start" x="14.5" y="-982.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndSolve()</text>
<text text-anchor="start" x="14.5" y="-971.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHSAndSolve()</text>
<text text-anchor="start" x="14.5" y="-960.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ApplyDirichletConditions()</text>
<text text-anchor="start" x="14.5" y="-949.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpDofSet()</text>
<text text-anchor="start" x="14.5" y="-938.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpSystem()</text>
<text text-anchor="start" x="14.5" y="-927.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpSystemMatrices()</text>
<text text-anchor="start" x="14.5" y="-916.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="14.5" y="-905.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="14.5" y="-894.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateReactions()</text>
<text text-anchor="start" x="14.5" y="-883.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="14.5" y="-872.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="14.5" y="-861.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetEquationSystemSize()</text>
<text text-anchor="start" x="14.5" y="-850.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetLinearSystemSolver()</text>
<text text-anchor="start" x="14.5" y="-839.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetOptions()</text>
<text text-anchor="start" x="14.5" y="-828.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetOptions()</text>
<text text-anchor="start" x="14.5" y="-817.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="14.5" y="-806.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetEchoLevel()</text>
<text text-anchor="start" x="14.5" y="-795.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EchoInfo()</text>
<text text-anchor="start" x="14.5" y="-784.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDofSet()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M107.5,-767.38C107.5,-758.13 107.5,-748.88 107.5,-739.67"/>
<polygon fill="none" stroke="midnightblue" points="104,-767.43 107.5,-777.43 111,-767.43 104,-767.43"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title="Forward declaration.">
<polygon fill="none" stroke="black" points="0,-1817.5 0,-2688.5 149,-2688.5 149,-1817.5 0,-1817.5"/>
<text text-anchor="middle" x="74.5" y="-2676.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="0,-2669.5 149,-2669.5 "/>
<text text-anchor="middle" x="74.5" y="-2657.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-2650.5 149,-2650.5 "/>
<text text-anchor="start" x="8" y="-2638.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-2627.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="8" y="-2616.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="8" y="-2605.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="8" y="-2594.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="8" y="-2583.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="8" y="-2572.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="8" y="-2561.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="8" y="-2550.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="8" y="-2539.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="8" y="-2528.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="8" y="-2517.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="8" y="-2506.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="8" y="-2495.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="8" y="-2484.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="8" y="-2473.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="8" y="-2462.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="8" y="-2451.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="8" y="-2440.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="8" y="-2429.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-2418.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-2407.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-2396.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="8" y="-2385.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="8" y="-2374.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="8" y="-2363.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="8" y="-2352.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="8" y="-2341.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="8" y="-2330.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-2319.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-2308.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="8" y="-2297.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="8" y="-2286.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="8" y="-2275.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="8" y="-2264.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="8" y="-2253.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="8" y="-2242.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="8" y="-2231.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="8" y="-2220.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="8" y="-2209.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="8" y="-2198.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="8" y="-2187.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="8" y="-2176.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="8" y="-2165.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="8" y="-2154.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="8" y="-2143.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="8" y="-2132.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="8" y="-2121.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="8" y="-2110.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="8" y="-2099.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="8" y="-2088.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-2077.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="8" y="-2066.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="8" y="-2055.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="8" y="-2044.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="8" y="-2033.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="8" y="-2022.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="8" y="-2011.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="8" y="-2000.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="8" y="-1989.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="8" y="-1978.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="8" y="-1967.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="8" y="-1956.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="8" y="-1945.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="8" y="-1934.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="8" y="-1923.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="8" y="-1912.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="8" y="-1901.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="8" y="-1890.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="8" y="-1879.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-1868.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-1857.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-1846.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="8" y="-1835.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="8" y="-1824.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M84.02,-1807.22C85.39,-1756.22 86.89,-1704.97 88.5,-1656 88.7,-1649.88 88.91,-1643.71 89.12,-1637.51"/>
<polygon fill="none" stroke="midnightblue" points="80.52,-1807.32 83.75,-1817.41 87.52,-1807.51 80.52,-1807.32"/>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge3" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M88.24,-1817.4C90,-1762.02 91.79,-1705.3 93.54,-1649.82"/>
<polygon fill="none" stroke="#404040" points="93.55,-1649.62 89.74,-1643.5 93.93,-1637.63 97.74,-1643.75 93.55,-1649.62"/>
<text text-anchor="middle" x="123" y="-1659" font-family="Helvetica,sans-Serif" font-size="10.00"> #mOptions</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../db/dc6/class_kratos_1_1_pointer_vector_set.html" target="_top" xlink:title="A sorted associative container similar to an STL set, but uses a vector to store pointers to its data...">
<polygon fill="none" stroke="black" points="167,-1685.5 167,-2820.5 342,-2820.5 342,-1685.5 167,-1685.5"/>
<text text-anchor="start" x="175" y="-2808.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::PointerVectorSet</text>
<text text-anchor="start" x="175" y="-2797.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TDataType, TGetKeyType,</text>
<text text-anchor="start" x="175" y="-2786.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TCompareType, TEqualType,</text>
<text text-anchor="middle" x="254.5" y="-2775.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TPointerType, TContainerType &gt;</text>
<polyline fill="none" stroke="black" points="167,-2768.5 342,-2768.5 "/>
<text text-anchor="middle" x="254.5" y="-2756.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="167,-2749.5 342,-2749.5 "/>
<text text-anchor="start" x="175" y="-2737.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="175" y="-2726.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="175" y="-2715.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="175" y="-2704.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="175" y="-2693.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~PointerVectorSet()</text>
<text text-anchor="start" x="175" y="-2682.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="175" y="-2671.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="175" y="-2660.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="175" y="-2649.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator==()</text>
<text text-anchor="start" x="175" y="-2638.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator&lt;()</text>
<text text-anchor="start" x="175" y="-2627.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ begin()</text>
<text text-anchor="start" x="175" y="-2616.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ begin()</text>
<text text-anchor="start" x="175" y="-2605.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cbegin()</text>
<text text-anchor="start" x="175" y="-2594.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cbegin()</text>
<text text-anchor="start" x="175" y="-2583.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ end()</text>
<text text-anchor="start" x="175" y="-2572.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ end()</text>
<text text-anchor="start" x="175" y="-2561.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cend()</text>
<text text-anchor="start" x="175" y="-2550.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cend()</text>
<text text-anchor="start" x="175" y="-2539.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ rbegin()</text>
<text text-anchor="start" x="175" y="-2528.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ rbegin()</text>
<text text-anchor="start" x="175" y="-2517.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 36 more...</text>
<text text-anchor="start" x="175" y="-2506.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetContainer()</text>
<text text-anchor="start" x="175" y="-2495.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetContainer()</text>
<text text-anchor="start" x="175" y="-2484.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMaxBufferSize()</text>
<text text-anchor="start" x="175" y="-2473.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetMaxBufferSize()</text>
<text text-anchor="start" x="175" y="-2462.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSortedPartSize()</text>
<text text-anchor="start" x="175" y="-2451.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetSortedPartSize()</text>
<text text-anchor="start" x="175" y="-2440.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ empty()</text>
<text text-anchor="start" x="175" y="-2429.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsSorted()</text>
<text text-anchor="start" x="175" y="-2418.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="175" y="-2407.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="175" y="-2396.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="175" y="-2385.5" font-family="Helvetica,sans-Serif" font-size="10.00">* key_type</text>
<text text-anchor="start" x="175" y="-2374.5" font-family="Helvetica,sans-Serif" font-size="10.00">* data_type</text>
<text text-anchor="start" x="175" y="-2363.5" font-family="Helvetica,sans-Serif" font-size="10.00">* value_type</text>
<text text-anchor="start" x="175" y="-2352.5" font-family="Helvetica,sans-Serif" font-size="10.00">* key_compare</text>
<text text-anchor="start" x="175" y="-2341.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pointer</text>
<text text-anchor="start" x="175" y="-2330.5" font-family="Helvetica,sans-Serif" font-size="10.00">* reference</text>
<text text-anchor="start" x="175" y="-2319.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reference</text>
<text text-anchor="start" x="175" y="-2308.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ContainerType</text>
<text text-anchor="start" x="175" y="-2297.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="175" y="-2286.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="175" y="-2275.5" font-family="Helvetica,sans-Serif" font-size="10.00">* iterator</text>
<text text-anchor="start" x="175" y="-2264.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_iterator</text>
<text text-anchor="start" x="175" y="-2253.5" font-family="Helvetica,sans-Serif" font-size="10.00">* reverse_iterator</text>
<text text-anchor="start" x="175" y="-2242.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reverse_iterator</text>
<text text-anchor="start" x="175" y="-2231.5" font-family="Helvetica,sans-Serif" font-size="10.00">* size_type</text>
<text text-anchor="start" x="175" y="-2220.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_iterator</text>
<text text-anchor="start" x="175" y="-2209.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_const_iterator</text>
<text text-anchor="start" x="175" y="-2198.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_reverse_iterator</text>
<text text-anchor="start" x="175" y="-2187.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_const_reverse_iterator</text>
<text text-anchor="start" x="175" y="-2176.5" font-family="Helvetica,sans-Serif" font-size="10.00">* difference_type</text>
<text text-anchor="start" x="175" y="-2165.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mData</text>
<text text-anchor="start" x="175" y="-2154.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSortedPartSize</text>
<text text-anchor="start" x="175" y="-2143.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxBufferSize</text>
<text text-anchor="start" x="175" y="-2132.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="175" y="-2121.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="175" y="-2110.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="175" y="-2099.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="175" y="-2088.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="175" y="-2077.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="175" y="-2066.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="175" y="-2055.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~PointerVectorSet()</text>
<text text-anchor="start" x="175" y="-2044.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="175" y="-2033.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="175" y="-2022.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="175" y="-2011.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==()</text>
<text text-anchor="start" x="175" y="-2000.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&lt;()</text>
<text text-anchor="start" x="175" y="-1989.5" font-family="Helvetica,sans-Serif" font-size="10.00">* begin()</text>
<text text-anchor="start" x="175" y="-1978.5" font-family="Helvetica,sans-Serif" font-size="10.00">* begin()</text>
<text text-anchor="start" x="175" y="-1967.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cbegin()</text>
<text text-anchor="start" x="175" y="-1956.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cbegin()</text>
<text text-anchor="start" x="175" y="-1945.5" font-family="Helvetica,sans-Serif" font-size="10.00">* end()</text>
<text text-anchor="start" x="175" y="-1934.5" font-family="Helvetica,sans-Serif" font-size="10.00">* end()</text>
<text text-anchor="start" x="175" y="-1923.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cend()</text>
<text text-anchor="start" x="175" y="-1912.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cend()</text>
<text text-anchor="start" x="175" y="-1901.5" font-family="Helvetica,sans-Serif" font-size="10.00">* rbegin()</text>
<text text-anchor="start" x="175" y="-1890.5" font-family="Helvetica,sans-Serif" font-size="10.00">* rbegin()</text>
<text text-anchor="start" x="175" y="-1879.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 36 more...</text>
<text text-anchor="start" x="175" y="-1868.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetContainer()</text>
<text text-anchor="start" x="175" y="-1857.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetContainer()</text>
<text text-anchor="start" x="175" y="-1846.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMaxBufferSize()</text>
<text text-anchor="start" x="175" y="-1835.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetMaxBufferSize()</text>
<text text-anchor="start" x="175" y="-1824.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSortedPartSize()</text>
<text text-anchor="start" x="175" y="-1813.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSortedPartSize()</text>
<text text-anchor="start" x="175" y="-1802.5" font-family="Helvetica,sans-Serif" font-size="10.00">* empty()</text>
<text text-anchor="start" x="175" y="-1791.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsSorted()</text>
<text text-anchor="start" x="175" y="-1780.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="175" y="-1769.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="175" y="-1758.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="175" y="-1747.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SortedInsert()</text>
<text text-anchor="start" x="175" y="-1736.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyOf()</text>
<text text-anchor="start" x="175" y="-1725.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyOf()</text>
<text text-anchor="start" x="175" y="-1714.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyOf()</text>
<text text-anchor="start" x="175" y="-1703.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetReference()</text>
<text text-anchor="start" x="175" y="-1692.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPointer()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node2 -->
<g id="edge4" class="edge">
<title>Node4&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M174.65,-1685.21C172.99,-1673.4 171.33,-1661.62 169.68,-1649.89"/>
<polygon fill="none" stroke="#404040" points="169.64,-1649.58 164.84,-1644.2 167.96,-1637.7 172.76,-1643.08 169.64,-1649.58"/>
<text text-anchor="middle" x="198" y="-1659" font-family="Helvetica,sans-Serif" font-size="10.00"> #mDofSet</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_block_builder_and_solver__coll__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
