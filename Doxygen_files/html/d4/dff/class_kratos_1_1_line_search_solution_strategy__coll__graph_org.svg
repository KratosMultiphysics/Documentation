<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::LineSearchSolutionStrategy&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt; Pages: 1 -->
<svg width="195pt" height="3426pt"
 viewBox="0.00 0.00 195.00 3426.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 3422)">
<title>Kratos::LineSearchSolutionStrategy&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-420.5 187,-420.5 187,-0.5 0,-0.5"/>
<text text-anchor="start" x="8" y="-408.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::LineSearchSolution</text>
<text text-anchor="start" x="8" y="-397.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="93.5" y="-386.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="0,-379.5 187,-379.5 "/>
<text text-anchor="middle" x="93.5" y="-367.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-360.5 187,-360.5 "/>
<text text-anchor="start" x="8" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LineSearchSolutionStrategy()</text>
<text text-anchor="start" x="8" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LineSearchSolutionStrategy()</text>
<text text-anchor="start" x="8" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~LineSearchSolutionStrategy()</text>
<text text-anchor="start" x="8" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Update()</text>
<text text-anchor="start" x="8" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="8" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="8" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="8" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConvergenceCriterionType</text>
<text text-anchor="start" x="8" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverType</text>
<text text-anchor="start" x="8" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="8" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolverType</text>
<text text-anchor="start" x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mType</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mAlpha</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchSolutionStrategy()</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchSolutionStrategy()</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~LineSearchSolutionStrategy()</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateA()</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateB()</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateC()</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateD()</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateE()</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateF()</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Restore()</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeSlope()</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeUpdatedSlope()</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeResidual()</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeResidualNorm()</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeUpdatedResidualNorm()</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchSolutionStrategy()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d7/da5/class_kratos_1_1_newton_raphson_strategy.html" target="_top" xlink:title="This is the base Newton Raphson strategy.">
<polygon fill="none" stroke="black" points="6,-458.5 6,-1010.5 181,-1010.5 181,-458.5 6,-458.5"/>
<text text-anchor="start" x="14" y="-998.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NewtonRaphsonStrategy</text>
<text text-anchor="start" x="14" y="-987.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="93.5" y="-976.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="6,-969.5 181,-969.5 "/>
<text text-anchor="start" x="14" y="-957.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpConvergenceCriteria</text>
<text text-anchor="start" x="14" y="-946.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxIterationNumber</text>
<polyline fill="none" stroke="black" points="6,-939.5 181,-939.5 "/>
<text text-anchor="start" x="14" y="-927.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="14" y="-916.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="14" y="-905.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="14" y="-894.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="14" y="-883.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="14" y="-872.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="14" y="-861.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveIteration()</text>
<text text-anchor="start" x="14" y="-850.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="14" y="-839.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="14" y="-828.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="14" y="-817.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetMaxIterationNumber()</text>
<text text-anchor="start" x="14" y="-806.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMaxIterationNumber()</text>
<text text-anchor="start" x="14" y="-795.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Initialize()</text>
<text text-anchor="start" x="14" y="-784.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="14" y="-773.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="14" y="-762.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConvergenceCriterionType</text>
<text text-anchor="start" x="14" y="-751.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverType</text>
<text text-anchor="start" x="14" y="-740.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="14" y="-729.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolverType</text>
<text text-anchor="start" x="14" y="-718.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="14" y="-707.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="14" y="-696.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixType</text>
<text text-anchor="start" x="14" y="-685.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="14" y="-674.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixPointerType</text>
<text text-anchor="start" x="14" y="-663.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorPointerType</text>
<text text-anchor="start" x="14" y="-652.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="14" y="-641.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="14" y="-630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpConvergenceCriteria</text>
<text text-anchor="start" x="14" y="-619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxIterationNumber</text>
<text text-anchor="start" x="14" y="-608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="14" y="-597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="14" y="-586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="14" y="-575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="14" y="-564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="14" y="-553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="14" y="-542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveIteration()</text>
<text text-anchor="start" x="14" y="-531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="14" y="-520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="14" y="-509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="14" y="-498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetMaxIterationNumber()</text>
<text text-anchor="start" x="14" y="-487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMaxIterationNumber()</text>
<text text-anchor="start" x="14" y="-476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="14" y="-465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewtonRaphsonStrategy()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M93.5,-448.3C93.5,-439.05 93.5,-429.83 93.5,-420.71"/>
<polygon fill="none" stroke="midnightblue" points="90,-448.36 93.5,-458.36 97,-448.36 90,-448.36"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d9/d2f/class_kratos_1_1_linear_strategy.html" target="_top" xlink:title="This is the base linear strategy jacobi / gauss&#45;seidel linear strategies.">
<polygon fill="none" stroke="black" points="8,-1048.5 8,-1809.5 179,-1809.5 179,-1048.5 8,-1048.5"/>
<text text-anchor="start" x="16" y="-1797.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::LinearStrategy</text>
<text text-anchor="start" x="16" y="-1786.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="93.5" y="-1775.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="8,-1768.5 179,-1768.5 "/>
<text text-anchor="start" x="16" y="-1756.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpScheme</text>
<text text-anchor="start" x="16" y="-1745.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpBuilderAndSolver</text>
<text text-anchor="start" x="16" y="-1734.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpDx</text>
<text text-anchor="start" x="16" y="-1723.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpb</text>
<text text-anchor="start" x="16" y="-1712.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpA</text>
<polyline fill="none" stroke="black" points="8,-1705.5 179,-1705.5 "/>
<text text-anchor="start" x="16" y="-1693.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearStrategy()</text>
<text text-anchor="start" x="16" y="-1682.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearStrategy()</text>
<text text-anchor="start" x="16" y="-1671.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~LinearStrategy()</text>
<text text-anchor="start" x="16" y="-1660.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="16" y="-1649.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="16" y="-1638.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="16" y="-1627.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveIteration()</text>
<text text-anchor="start" x="16" y="-1616.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="16" y="-1605.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="16" y="-1594.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="16" y="-1583.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="16" y="-1572.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetScheme()</text>
<text text-anchor="start" x="16" y="-1561.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBuilderAndSolver()</text>
<text text-anchor="start" x="16" y="-1550.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetBuilderAndSolver()</text>
<text text-anchor="start" x="16" y="-1539.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSystemMatrix()</text>
<text text-anchor="start" x="16" y="-1528.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDirectSystemMatrix()</text>
<text text-anchor="start" x="16" y="-1517.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Initialize()</text>
<text text-anchor="start" x="16" y="-1506.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Predict()</text>
<text text-anchor="start" x="16" y="-1495.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Update()</text>
<text text-anchor="start" x="16" y="-1484.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetSystemDofs()</text>
<text text-anchor="start" x="16" y="-1473.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="16" y="-1462.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="16" y="-1451.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverType</text>
<text text-anchor="start" x="16" y="-1440.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="16" y="-1429.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolverType</text>
<text text-anchor="start" x="16" y="-1418.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="16" y="-1407.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="16" y="-1396.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixType</text>
<text text-anchor="start" x="16" y="-1385.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="16" y="-1374.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixPointerType</text>
<text text-anchor="start" x="16" y="-1363.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorPointerType</text>
<text text-anchor="start" x="16" y="-1352.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="16" y="-1341.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="16" y="-1330.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="16" y="-1319.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="16" y="-1308.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDx</text>
<text text-anchor="start" x="16" y="-1297.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpb</text>
<text text-anchor="start" x="16" y="-1286.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpA</text>
<text text-anchor="start" x="16" y="-1275.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearStrategy()</text>
<text text-anchor="start" x="16" y="-1264.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearStrategy()</text>
<text text-anchor="start" x="16" y="-1253.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~LinearStrategy()</text>
<text text-anchor="start" x="16" y="-1242.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="16" y="-1231.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="16" y="-1220.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="16" y="-1209.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveIteration()</text>
<text text-anchor="start" x="16" y="-1198.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="16" y="-1187.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="16" y="-1176.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="16" y="-1165.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="16" y="-1154.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetScheme()</text>
<text text-anchor="start" x="16" y="-1143.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="16" y="-1132.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetBuilderAndSolver()</text>
<text text-anchor="start" x="16" y="-1121.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSystemMatrix()</text>
<text text-anchor="start" x="16" y="-1110.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDirectSystemMatrix()</text>
<text text-anchor="start" x="16" y="-1099.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="16" y="-1088.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Predict()</text>
<text text-anchor="start" x="16" y="-1077.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="16" y="-1066.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSystemDofs()</text>
<text text-anchor="start" x="16" y="-1055.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearStrategy()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M93.5,-1038.29C93.5,-1029.07 93.5,-1019.88 93.5,-1010.76"/>
<polygon fill="none" stroke="midnightblue" points="90,-1038.32 93.5,-1048.32 97,-1038.32 90,-1038.32"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../d1/d43/class_kratos_1_1_solution_strategy.html" target="_top" xlink:title="Solution strategy base class.">
<polygon fill="none" stroke="black" points="8,-1847.5 8,-2498.5 179,-2498.5 179,-1847.5 8,-1847.5"/>
<text text-anchor="start" x="16" y="-2486.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::SolutionStrategy</text>
<text text-anchor="start" x="16" y="-2475.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="93.5" y="-2464.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="8,-2457.5 179,-2457.5 "/>
<text text-anchor="start" x="16" y="-2445.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<polyline fill="none" stroke="black" points="8,-2438.5 179,-2438.5 "/>
<text text-anchor="start" x="16" y="-2426.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionStrategy()</text>
<text text-anchor="start" x="16" y="-2415.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionStrategy()</text>
<text text-anchor="start" x="16" y="-2404.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SolutionStrategy()</text>
<text text-anchor="start" x="16" y="-2393.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="16" y="-2382.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="16" y="-2371.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="16" y="-2360.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="16" y="-2349.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveIteration()</text>
<text text-anchor="start" x="16" y="-2338.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="16" y="-2327.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="16" y="-2316.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="16" y="-2305.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetEchoLevel()</text>
<text text-anchor="start" x="16" y="-2294.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetOptions()</text>
<text text-anchor="start" x="16" y="-2283.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetOptions()</text>
<text text-anchor="start" x="16" y="-2272.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMaxIterationNumber()</text>
<text text-anchor="start" x="16" y="-2261.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetModelPart()</text>
<text text-anchor="start" x="16" y="-2250.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Initialize()</text>
<text text-anchor="start" x="16" y="-2239.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Predict()</text>
<text text-anchor="start" x="16" y="-2228.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Update()</text>
<text text-anchor="start" x="16" y="-2217.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Finalize()</text>
<text text-anchor="start" x="16" y="-2206.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="16" y="-2195.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="16" y="-2184.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixType</text>
<text text-anchor="start" x="16" y="-2173.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="16" y="-2162.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixPointerType</text>
<text text-anchor="start" x="16" y="-2151.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorPointerType</text>
<text text-anchor="start" x="16" y="-2140.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="16" y="-2129.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverType</text>
<text text-anchor="start" x="16" y="-2118.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="16" y="-2107.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="16" y="-2096.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="16" y="-2085.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mrModelPart</text>
<text text-anchor="start" x="16" y="-2074.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStrategy()</text>
<text text-anchor="start" x="16" y="-2063.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStrategy()</text>
<text text-anchor="start" x="16" y="-2052.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~SolutionStrategy()</text>
<text text-anchor="start" x="16" y="-2041.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="16" y="-2030.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="16" y="-2019.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="16" y="-2008.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="16" y="-1997.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveIteration()</text>
<text text-anchor="start" x="16" y="-1986.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="16" y="-1975.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="16" y="-1964.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="16" y="-1953.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetEchoLevel()</text>
<text text-anchor="start" x="16" y="-1942.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetOptions()</text>
<text text-anchor="start" x="16" y="-1931.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetOptions()</text>
<text text-anchor="start" x="16" y="-1920.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMaxIterationNumber()</text>
<text text-anchor="start" x="16" y="-1909.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetModelPart()</text>
<text text-anchor="start" x="16" y="-1898.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="16" y="-1887.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Predict()</text>
<text text-anchor="start" x="16" y="-1876.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="16" y="-1865.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Finalize()</text>
<text text-anchor="start" x="16" y="-1854.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStrategy()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M93.5,-1837.11C93.5,-1828.02 93.5,-1818.9 93.5,-1809.78"/>
<polygon fill="none" stroke="midnightblue" points="90,-1837.36 93.5,-1847.36 97,-1837.36 90,-1837.36"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="19,-2546.5 19,-3417.5 168,-3417.5 168,-2546.5 19,-2546.5"/>
<text text-anchor="middle" x="93.5" y="-3405.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="19,-3398.5 168,-3398.5 "/>
<text text-anchor="middle" x="93.5" y="-3386.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="19,-3379.5 168,-3379.5 "/>
<text text-anchor="start" x="27" y="-3367.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="27" y="-3356.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="27" y="-3345.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="27" y="-3334.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="27" y="-3323.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="27" y="-3312.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="27" y="-3301.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="27" y="-3290.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="27" y="-3279.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="27" y="-3268.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="27" y="-3257.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="27" y="-3246.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="27" y="-3235.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="27" y="-3224.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="27" y="-3213.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="27" y="-3202.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="27" y="-3191.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="27" y="-3180.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="27" y="-3169.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="27" y="-3158.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="27" y="-3147.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="27" y="-3136.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="27" y="-3125.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="27" y="-3114.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="27" y="-3103.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="27" y="-3092.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="27" y="-3081.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="27" y="-3070.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="27" y="-3059.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="27" y="-3048.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="27" y="-3037.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="27" y="-3026.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="27" y="-3015.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="27" y="-3004.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="27" y="-2993.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="27" y="-2982.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="27" y="-2971.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="27" y="-2960.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="27" y="-2949.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="27" y="-2938.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="27" y="-2927.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="27" y="-2916.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="27" y="-2905.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="27" y="-2894.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="27" y="-2883.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="27" y="-2872.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="27" y="-2861.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="27" y="-2850.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="27" y="-2839.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="27" y="-2828.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="27" y="-2817.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="27" y="-2806.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="27" y="-2795.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="27" y="-2784.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="27" y="-2773.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="27" y="-2762.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="27" y="-2751.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="27" y="-2740.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="27" y="-2729.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="27" y="-2718.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="27" y="-2707.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="27" y="-2696.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="27" y="-2685.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="27" y="-2674.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="27" y="-2663.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="27" y="-2652.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="27" y="-2641.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="27" y="-2630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="27" y="-2619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="27" y="-2608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="27" y="-2597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="27" y="-2586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="27" y="-2575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="27" y="-2564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="27" y="-2553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M91.45,-2536.17C91.47,-2529.74 91.48,-2523.34 91.5,-2517 91.52,-2510.9 91.54,-2504.73 91.56,-2498.52"/>
<polygon fill="none" stroke="midnightblue" points="87.95,-2536.3 91.44,-2546.31 94.95,-2536.31 87.95,-2536.3"/>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge5" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M93.5,-2546.5C93.5,-2534.6 93.5,-2522.73 93.5,-2510.95"/>
<polygon fill="none" stroke="#404040" points="93.5,-2510.7 89.5,-2504.7 93.5,-2498.7 97.5,-2504.7 93.5,-2510.7"/>
<text text-anchor="middle" x="123" y="-2520" font-family="Helvetica,sans-Serif" font-size="10.00"> #mOptions</text>
</g>
</g>
</svg>
