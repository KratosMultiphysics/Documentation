<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::EmcStepRotationMethod&lt; TVariableType, TValueType &gt; Pages: 1 -->
<!--zoomable 6684 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 365;
var viewHeight = 6684;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::EmcStepRotationMethod&lt; TVariableType, TValueType &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Short class definition.">
<polygon fill="#bfbfbf" stroke="black" points="96,-0.5 96,-442.5 271,-442.5 271,-0.5 96,-0.5"/>
<text text-anchor="start" x="104" y="-430.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::EmcStepRotationMethod</text>
<text text-anchor="middle" x="183.5" y="-419.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TVariableType, TValueType &gt;</text>
<polyline fill="none" stroke="black" points="96,-412.5 271,-412.5 "/>
<text text-anchor="middle" x="183.5" y="-400.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="96,-393.5 271,-393.5 "/>
<text text-anchor="start" x="104" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Update()</text>
<text text-anchor="start" x="104" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EmcStepRotationMethod()</text>
<text text-anchor="start" x="104" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EmcStepRotationMethod()</text>
<text text-anchor="start" x="104" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EmcStepRotationMethod()</text>
<text text-anchor="start" x="104" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EmcStepRotationMethod()</text>
<text text-anchor="start" x="104" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EmcStepRotationMethod()</text>
<text text-anchor="start" x="104" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="104" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~EmcStepRotationMethod()</text>
<text text-anchor="start" x="104" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Update()</text>
<text text-anchor="start" x="104" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="104" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="104" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="104" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Update()</text>
<text text-anchor="start" x="104" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="104" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BasePointerType</text>
<text text-anchor="start" x="104" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="104" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VariablePointer</text>
<text text-anchor="start" x="104" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DerivedType</text>
<text text-anchor="start" x="104" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="104" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="104" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="104" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="104" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="104" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EmcStepRotationMethod()</text>
<text text-anchor="start" x="104" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EmcStepRotationMethod()</text>
<text text-anchor="start" x="104" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EmcStepRotationMethod()</text>
<text text-anchor="start" x="104" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EmcStepRotationMethod()</text>
<text text-anchor="start" x="104" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EmcStepRotationMethod()</text>
<text text-anchor="start" x="104" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="104" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~EmcStepRotationMethod()</text>
<text text-anchor="start" x="104" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="104" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="104" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="104" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="104" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d2/d67/class_kratos_1_1_emc_step_method.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="94,-480.5 94,-1285.5 273,-1285.5 273,-480.5 94,-480.5"/>
<text text-anchor="start" x="102" y="-1273.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::EmcStepMethod</text>
<text text-anchor="middle" x="183.5" y="-1262.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TVariableType, TValueType &gt;</text>
<polyline fill="none" stroke="black" points="94,-1255.5 273,-1255.5 "/>
<text text-anchor="start" x="102" y="-1243.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpStepVariable</text>
<polyline fill="none" stroke="black" points="94,-1236.5 273,-1236.5 "/>
<text text-anchor="start" x="102" y="-1224.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EmcStepMethod()</text>
<text text-anchor="start" x="102" y="-1213.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EmcStepMethod()</text>
<text text-anchor="start" x="102" y="-1202.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EmcStepMethod()</text>
<text text-anchor="start" x="102" y="-1191.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EmcStepMethod()</text>
<text text-anchor="start" x="102" y="-1180.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EmcStepMethod()</text>
<text text-anchor="start" x="102" y="-1169.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="102" y="-1158.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~EmcStepMethod()</text>
<text text-anchor="start" x="102" y="-1147.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateParameters()</text>
<text text-anchor="start" x="102" y="-1136.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetParameters()</text>
<text text-anchor="start" x="102" y="-1125.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetProcessInfoParameters()</text>
<text text-anchor="start" x="102" y="-1114.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ HasStepVariable()</text>
<text text-anchor="start" x="102" y="-1103.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetStepVariable()</text>
<text text-anchor="start" x="102" y="-1092.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="102" y="-1081.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="102" y="-1070.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="102" y="-1059.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="102" y="-1048.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromVariable()</text>
<text text-anchor="start" x="102" y="-1037.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromFirstDerivative()</text>
<text text-anchor="start" x="102" y="-1026.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromSecondDerivative()</text>
<text text-anchor="start" x="102" y="-1015.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictFromVariable()</text>
<text text-anchor="start" x="102" y="-1004.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictStepVariable()</text>
<text text-anchor="start" x="102" y="-993.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictVariable()</text>
<text text-anchor="start" x="102" y="-982.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictFirstDerivative()</text>
<text text-anchor="start" x="102" y="-971.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictSecondDerivative()</text>
<text text-anchor="start" x="102" y="-960.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateFromVariable()</text>
<text text-anchor="start" x="102" y="-949.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateStepVariable()</text>
<text text-anchor="start" x="102" y="-938.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateVariable()</text>
<text text-anchor="start" x="102" y="-927.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateFirstDerivative()</text>
<text text-anchor="start" x="102" y="-916.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateSecondDerivative()</text>
<text text-anchor="start" x="102" y="-905.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="102" y="-894.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BasePointerType</text>
<text text-anchor="start" x="102" y="-883.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="102" y="-872.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VariablePointer</text>
<text text-anchor="start" x="102" y="-861.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="102" y="-850.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="102" y="-839.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpStepVariable</text>
<text text-anchor="start" x="102" y="-828.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="102" y="-817.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="102" y="-806.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="102" y="-795.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EmcStepMethod()</text>
<text text-anchor="start" x="102" y="-784.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EmcStepMethod()</text>
<text text-anchor="start" x="102" y="-773.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EmcStepMethod()</text>
<text text-anchor="start" x="102" y="-762.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EmcStepMethod()</text>
<text text-anchor="start" x="102" y="-751.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EmcStepMethod()</text>
<text text-anchor="start" x="102" y="-740.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="102" y="-729.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~EmcStepMethod()</text>
<text text-anchor="start" x="102" y="-718.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateParameters()</text>
<text text-anchor="start" x="102" y="-707.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetParameters()</text>
<text text-anchor="start" x="102" y="-696.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetProcessInfoParameters()</text>
<text text-anchor="start" x="102" y="-685.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HasStepVariable()</text>
<text text-anchor="start" x="102" y="-674.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetStepVariable()</text>
<text text-anchor="start" x="102" y="-663.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="102" y="-652.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="102" y="-641.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="102" y="-630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="102" y="-619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromVariable()</text>
<text text-anchor="start" x="102" y="-608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromFirstDerivative()</text>
<text text-anchor="start" x="102" y="-597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromSecondDerivative()</text>
<text text-anchor="start" x="102" y="-586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictFromVariable()</text>
<text text-anchor="start" x="102" y="-575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictStepVariable()</text>
<text text-anchor="start" x="102" y="-564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictVariable()</text>
<text text-anchor="start" x="102" y="-553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictFirstDerivative()</text>
<text text-anchor="start" x="102" y="-542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictSecondDerivative()</text>
<text text-anchor="start" x="102" y="-531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateFromVariable()</text>
<text text-anchor="start" x="102" y="-520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateStepVariable()</text>
<text text-anchor="start" x="102" y="-509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateVariable()</text>
<text text-anchor="start" x="102" y="-498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateFirstDerivative()</text>
<text text-anchor="start" x="102" y="-487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateSecondDerivative()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M183.5,-470.17C183.5,-460.85 183.5,-451.62 183.5,-442.52"/>
<polygon fill="none" stroke="midnightblue" points="180,-470.31 183.5,-480.31 187,-470.31 180,-470.31"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d0/dd4/class_kratos_1_1_time_integration_method.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="1,-1333.5 1,-2996.5 180,-2996.5 180,-1333.5 1,-1333.5"/>
<text text-anchor="start" x="9" y="-2984.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::TimeIntegrationMethod</text>
<text text-anchor="middle" x="90.5" y="-2973.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TVariableType, TValueType &gt;</text>
<polyline fill="none" stroke="black" points="1,-2966.5 180,-2966.5 "/>
<text text-anchor="start" x="9" y="-2954.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpVariable</text>
<text text-anchor="start" x="9" y="-2943.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpFirstDerivative</text>
<text text-anchor="start" x="9" y="-2932.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpSecondDerivative</text>
<text text-anchor="start" x="9" y="-2921.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpPrimaryVariable</text>
<text text-anchor="start" x="9" y="-2910.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpInputVariable</text>
<text text-anchor="start" x="9" y="-2899.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpFirstDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-2888.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="9" y="-2877.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpSecondDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-2866.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="9" y="-2855.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpFirstDerivativeInertial</text>
<text text-anchor="start" x="9" y="-2844.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="9" y="-2833.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpSecondDerivativeInertial</text>
<text text-anchor="start" x="9" y="-2822.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<polyline fill="none" stroke="black" points="1,-2815.5 180,-2815.5 "/>
<text text-anchor="start" x="9" y="-2803.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-2792.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-2781.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-2770.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-2759.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-2748.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="9" y="-2737.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-2726.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateParameters()</text>
<text text-anchor="start" x="9" y="-2715.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetParameters()</text>
<text text-anchor="start" x="9" y="-2704.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetProcessInfoParameters()</text>
<text text-anchor="start" x="9" y="-2693.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetInputVariable()</text>
<text text-anchor="start" x="9" y="-2682.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPrimaryVariableName()</text>
<text text-anchor="start" x="9" y="-2671.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetVariableName()</text>
<text text-anchor="start" x="9" y="-2660.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ HasVariableName()</text>
<text text-anchor="start" x="9" y="-2649.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ HasStepVariable()</text>
<text text-anchor="start" x="9" y="-2638.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetStepVariable()</text>
<text text-anchor="start" x="9" y="-2627.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Assign()</text>
<text text-anchor="start" x="9" y="-2616.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Predict()</text>
<text text-anchor="start" x="9" y="-2605.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Update()</text>
<text text-anchor="start" x="9" y="-2594.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="9" y="-2583.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetFirstDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-2572.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-2561.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSecondDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-2550.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-2539.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetFirstDerivativeInertial</text>
<text text-anchor="start" x="9" y="-2528.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-2517.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSecondDerivativeInertial</text>
<text text-anchor="start" x="9" y="-2506.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-2495.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetFlags()</text>
<text text-anchor="start" x="9" y="-2484.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetFlags()</text>
<text text-anchor="start" x="9" y="-2473.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetFlags()</text>
<text text-anchor="start" x="9" y="-2462.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="9" y="-2451.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="9" y="-2440.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="9" y="-2429.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetPointerMethods()</text>
<text text-anchor="start" x="9" y="-2418.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetPointerAssignMethod()</text>
<text text-anchor="start" x="9" y="-2407.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromVariable()</text>
<text text-anchor="start" x="9" y="-2396.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromFirstDerivative()</text>
<text text-anchor="start" x="9" y="-2385.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFromSecondDerivative()</text>
<text text-anchor="start" x="9" y="-2374.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignVariable()</text>
<text text-anchor="start" x="9" y="-2363.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignFirstDerivative()</text>
<text text-anchor="start" x="9" y="-2352.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSecondDerivative()</text>
<text text-anchor="start" x="9" y="-2341.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictFromVariable()</text>
<text text-anchor="start" x="9" y="-2330.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PredictFromFirstDerivative()</text>
<text text-anchor="start" x="9" y="-2319.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 10 more...</text>
<text text-anchor="start" x="9" y="-2308.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetKineticParameter()</text>
<text text-anchor="start" x="9" y="-2297.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetFirstDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-2286.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="9" y="-2275.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetSecondDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-2264.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="9" y="-2253.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetInertialParameter()</text>
<text text-anchor="start" x="9" y="-2242.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetFirstDerivativeInertial</text>
<text text-anchor="start" x="9" y="-2231.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="9" y="-2220.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetSecondDerivativeInertial</text>
<text text-anchor="start" x="9" y="-2209.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="9" y="-2198.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="9" y="-2187.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VariablePointer</text>
<text text-anchor="start" x="9" y="-2176.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ValuePointer</text>
<text text-anchor="start" x="9" y="-2165.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MethodPointer</text>
<text text-anchor="start" x="9" y="-2154.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MethodFactorPointer</text>
<text text-anchor="start" x="9" y="-2143.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethodPointer</text>
<text text-anchor="start" x="9" y="-2132.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="9" y="-2121.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="9" y="-2110.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpVariable</text>
<text text-anchor="start" x="9" y="-2099.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpFirstDerivative</text>
<text text-anchor="start" x="9" y="-2088.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpSecondDerivative</text>
<text text-anchor="start" x="9" y="-2077.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpPrimaryVariable</text>
<text text-anchor="start" x="9" y="-2066.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpInputVariable</text>
<text text-anchor="start" x="9" y="-2055.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpFirstDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-2044.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="9" y="-2033.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpSecondDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-2022.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="9" y="-2011.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpFirstDerivativeInertial</text>
<text text-anchor="start" x="9" y="-2000.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="9" y="-1989.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpSecondDerivativeInertial</text>
<text text-anchor="start" x="9" y="-1978.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="9" y="-1967.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="9" y="-1956.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="9" y="-1945.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="9" y="-1934.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-1923.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-1912.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-1901.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-1890.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-1879.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="9" y="-1868.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~TimeIntegrationMethod()</text>
<text text-anchor="start" x="9" y="-1857.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateParameters()</text>
<text text-anchor="start" x="9" y="-1846.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetParameters()</text>
<text text-anchor="start" x="9" y="-1835.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetProcessInfoParameters()</text>
<text text-anchor="start" x="9" y="-1824.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetInputVariable()</text>
<text text-anchor="start" x="9" y="-1813.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPrimaryVariableName()</text>
<text text-anchor="start" x="9" y="-1802.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetVariableName()</text>
<text text-anchor="start" x="9" y="-1791.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HasVariableName()</text>
<text text-anchor="start" x="9" y="-1780.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HasStepVariable()</text>
<text text-anchor="start" x="9" y="-1769.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetStepVariable()</text>
<text text-anchor="start" x="9" y="-1758.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Assign()</text>
<text text-anchor="start" x="9" y="-1747.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Predict()</text>
<text text-anchor="start" x="9" y="-1736.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="9" y="-1725.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="9" y="-1714.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFirstDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-1703.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-1692.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSecondDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-1681.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-1670.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFirstDerivativeInertial</text>
<text text-anchor="start" x="9" y="-1659.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-1648.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSecondDerivativeInertial</text>
<text text-anchor="start" x="9" y="-1637.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor()</text>
<text text-anchor="start" x="9" y="-1626.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="9" y="-1615.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="9" y="-1604.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="9" y="-1593.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="9" y="-1582.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="9" y="-1571.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="9" y="-1560.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPointerMethods()</text>
<text text-anchor="start" x="9" y="-1549.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPointerAssignMethod()</text>
<text text-anchor="start" x="9" y="-1538.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromVariable()</text>
<text text-anchor="start" x="9" y="-1527.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromFirstDerivative()</text>
<text text-anchor="start" x="9" y="-1516.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFromSecondDerivative()</text>
<text text-anchor="start" x="9" y="-1505.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignVariable()</text>
<text text-anchor="start" x="9" y="-1494.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFirstDerivative()</text>
<text text-anchor="start" x="9" y="-1483.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSecondDerivative()</text>
<text text-anchor="start" x="9" y="-1472.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictFromVariable()</text>
<text text-anchor="start" x="9" y="-1461.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PredictFromFirstDerivative()</text>
<text text-anchor="start" x="9" y="-1450.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 10 more...</text>
<text text-anchor="start" x="9" y="-1439.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetKineticParameter()</text>
<text text-anchor="start" x="9" y="-1428.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFirstDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-1417.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="9" y="-1406.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSecondDerivativeKinetic</text>
<text text-anchor="start" x="9" y="-1395.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="9" y="-1384.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetInertialParameter()</text>
<text text-anchor="start" x="9" y="-1373.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFirstDerivativeInertial</text>
<text text-anchor="start" x="9" y="-1362.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
<text text-anchor="start" x="9" y="-1351.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSecondDerivativeInertial</text>
<text text-anchor="start" x="9" y="-1340.5" font-family="Helvetica,sans-Serif" font-size="10.00">Parameter()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M151.58,-1323.27C152.51,-1310.58 153.42,-1298 154.32,-1285.56"/>
<polygon fill="none" stroke="midnightblue" points="148.08,-1323.25 150.84,-1333.48 155.06,-1323.76 148.08,-1323.25"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="0,-4833.5 0,-5704.5 149,-5704.5 149,-4833.5 0,-4833.5"/>
<text text-anchor="middle" x="74.5" y="-5692.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="0,-5685.5 149,-5685.5 "/>
<text text-anchor="middle" x="74.5" y="-5673.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-5666.5 149,-5666.5 "/>
<text text-anchor="start" x="8" y="-5654.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-5643.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="8" y="-5632.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="8" y="-5621.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="8" y="-5610.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="8" y="-5599.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="8" y="-5588.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="8" y="-5577.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="8" y="-5566.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="8" y="-5555.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="8" y="-5544.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="8" y="-5533.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="8" y="-5522.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="8" y="-5511.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="8" y="-5500.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="8" y="-5489.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="8" y="-5478.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="8" y="-5467.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="8" y="-5456.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="8" y="-5445.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-5434.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-5423.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-5412.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="8" y="-5401.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="8" y="-5390.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="8" y="-5379.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="8" y="-5368.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="8" y="-5357.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="8" y="-5346.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-5335.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-5324.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="8" y="-5313.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="8" y="-5302.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="8" y="-5291.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="8" y="-5280.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="8" y="-5269.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="8" y="-5258.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="8" y="-5247.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="8" y="-5236.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="8" y="-5225.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="8" y="-5214.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="8" y="-5203.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="8" y="-5192.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="8" y="-5181.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="8" y="-5170.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="8" y="-5159.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="8" y="-5148.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="8" y="-5137.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="8" y="-5126.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="8" y="-5115.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="8" y="-5104.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-5093.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="8" y="-5082.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="8" y="-5071.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="8" y="-5060.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="8" y="-5049.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="8" y="-5038.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="8" y="-5027.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="8" y="-5016.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="8" y="-5005.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="8" y="-4994.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="8" y="-4983.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="8" y="-4972.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="8" y="-4961.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="8" y="-4950.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="8" y="-4939.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="8" y="-4928.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="8" y="-4917.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="8" y="-4906.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="8" y="-4895.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-4884.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-4873.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-4862.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="8" y="-4851.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="8" y="-4840.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M76.79,-4823.29C79.25,-4348.02 83.19,-3583.72 86.22,-2996.54"/>
<polygon fill="none" stroke="midnightblue" points="73.29,-4823.4 76.74,-4833.41 80.29,-4823.43 73.29,-4823.4"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../d5/ddd/class_kratos_1_1_node.html" target="_top" xlink:title="This class defines the node.">
<polygon fill="none" stroke="black" points="103,-3066.5 103,-4795.5 316,-4795.5 316,-3066.5 103,-3066.5"/>
<text text-anchor="middle" x="209.5" y="-4783.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Node</text>
<polyline fill="none" stroke="black" points="103,-4776.5 316,-4776.5 "/>
<text text-anchor="middle" x="209.5" y="-4764.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="103,-4757.5 316,-4757.5 "/>
<text text-anchor="start" x="111" y="-4745.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-4734.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-4723.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-4712.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-4701.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-4690.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-4679.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-4668.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-4657.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-4646.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Node()</text>
<text text-anchor="start" x="111" y="-4635.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 9 more...</text>
<text text-anchor="start" x="111" y="-4624.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="111" y="-4613.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator==()</text>
<text text-anchor="start" x="111" y="-4602.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="111" y="-4591.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="111" y="-4580.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="111" y="-4569.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="111" y="-4558.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="111" y="-4547.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="111" y="-4536.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CreateSolutionStepData()</text>
<text text-anchor="start" x="111" y="-4525.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CloneSolutionStepData()</text>
<text text-anchor="start" x="111" y="-4514.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ OverwriteSolutionStepData()</text>
<text text-anchor="start" x="111" y="-4503.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearSolutionStepsData()</text>
<text text-anchor="start" x="111" y="-4492.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetSolutionStepVariables</text>
<text text-anchor="start" x="111" y="-4481.5" font-family="Helvetica,sans-Serif" font-size="10.00">List()</text>
<text text-anchor="start" x="111" y="-4470.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionStepData()</text>
<text text-anchor="start" x="111" y="-4459.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionStepData()</text>
<text text-anchor="start" x="111" y="-4448.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Data()</text>
<text text-anchor="start" x="111" y="-4437.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetData()</text>
<text text-anchor="start" x="111" y="-4426.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetData()</text>
<text text-anchor="start" x="111" y="-4415.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 17 more...</text>
<text text-anchor="start" x="111" y="-4404.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Fix()</text>
<text text-anchor="start" x="111" y="-4393.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Free()</text>
<text text-anchor="start" x="111" y="-4382.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetBufferSize()</text>
<text text-anchor="start" x="111" y="-4371.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBufferSize()</text>
<text text-anchor="start" x="111" y="-4360.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetInitialPosition()</text>
<text text-anchor="start" x="111" y="-4349.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetInitialPosition()</text>
<text text-anchor="start" x="111" y="-4338.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ X0()</text>
<text text-anchor="start" x="111" y="-4327.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Y0()</text>
<text text-anchor="start" x="111" y="-4316.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Z0()</text>
<text text-anchor="start" x="111" y="-4305.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ X0()</text>
<text text-anchor="start" x="111" y="-4294.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Y0()</text>
<text text-anchor="start" x="111" y="-4283.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Z0()</text>
<text text-anchor="start" x="111" y="-4272.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetInitialPosition()</text>
<text text-anchor="start" x="111" y="-4261.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetInitialPosition()</text>
<text text-anchor="start" x="111" y="-4250.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetVariablesList()</text>
<text text-anchor="start" x="111" y="-4239.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetVariablesList()</text>
<text text-anchor="start" x="111" y="-4228.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDofPosition()</text>
<text text-anchor="start" x="111" y="-4217.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDof()</text>
<text text-anchor="start" x="111" y="-4206.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDof()</text>
<text text-anchor="start" x="111" y="-4195.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDofs()</text>
<text text-anchor="start" x="111" y="-4184.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDofs()</text>
<text text-anchor="start" x="111" y="-4173.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetDof()</text>
<text text-anchor="start" x="111" y="-4162.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetDof()</text>
<text text-anchor="start" x="111" y="-4151.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pAddDof()</text>
<text text-anchor="start" x="111" y="-4140.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pAddDof()</text>
<text text-anchor="start" x="111" y="-4129.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pAddDof()</text>
<text text-anchor="start" x="111" y="-4118.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AddDof()</text>
<text text-anchor="start" x="111" y="-4107.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AddDof()</text>
<text text-anchor="start" x="111" y="-4096.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ HasDofFor()</text>
<text text-anchor="start" x="111" y="-4085.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsFixed()</text>
<text text-anchor="start" x="111" y="-4074.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsActive()</text>
<text text-anchor="start" x="111" y="-4063.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="111" y="-4052.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="111" y="-4041.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="111" y="-4030.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="111" y="-4019.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="111" y="-4008.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointType</text>
<text text-anchor="start" x="111" y="-3997.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofType</text>
<text text-anchor="start" x="111" y="-3986.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="111" y="-3975.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="111" y="-3964.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsContainerType</text>
<text text-anchor="start" x="111" y="-3953.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStepsNodalDataContainerType</text>
<text text-anchor="start" x="111" y="-3942.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="111" y="-3931.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_INTRUSIVE</text>
<text text-anchor="start" x="111" y="-3920.5" font-family="Helvetica,sans-Serif" font-size="10.00">_POINTER_DEFINITION()</text>
<text text-anchor="start" x="111" y="-3909.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNodalData</text>
<text text-anchor="start" x="111" y="-3898.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mDofs</text>
<text text-anchor="start" x="111" y="-3887.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mData</text>
<text text-anchor="start" x="111" y="-3876.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitialPosition</text>
<text text-anchor="start" x="111" y="-3865.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNodeLock</text>
<text text-anchor="start" x="111" y="-3854.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReferenceCounter</text>
<text text-anchor="start" x="111" y="-3843.5" font-family="Helvetica,sans-Serif" font-size="10.00">* intrusive_ptr_add_ref</text>
<text text-anchor="start" x="111" y="-3832.5" font-family="Helvetica,sans-Serif" font-size="10.00">* intrusive_ptr_release</text>
<text text-anchor="start" x="111" y="-3821.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SortDofs()</text>
<text text-anchor="start" x="111" y="-3810.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="111" y="-3799.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="111" y="-3788.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="111" y="-3777.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-3766.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-3755.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-3744.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-3733.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-3722.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-3711.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-3700.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-3689.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-3678.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Node()</text>
<text text-anchor="start" x="111" y="-3667.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 9 more...</text>
<text text-anchor="start" x="111" y="-3656.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="111" y="-3645.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==()</text>
<text text-anchor="start" x="111" y="-3634.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="111" y="-3623.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="111" y="-3612.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="111" y="-3601.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="111" y="-3590.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="111" y="-3579.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="111" y="-3568.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CreateSolutionStepData()</text>
<text text-anchor="start" x="111" y="-3557.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CloneSolutionStepData()</text>
<text text-anchor="start" x="111" y="-3546.5" font-family="Helvetica,sans-Serif" font-size="10.00">* OverwriteSolutionStepData()</text>
<text text-anchor="start" x="111" y="-3535.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearSolutionStepsData()</text>
<text text-anchor="start" x="111" y="-3524.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSolutionStepVariables</text>
<text text-anchor="start" x="111" y="-3513.5" font-family="Helvetica,sans-Serif" font-size="10.00">List()</text>
<text text-anchor="start" x="111" y="-3502.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStepData()</text>
<text text-anchor="start" x="111" y="-3491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStepData()</text>
<text text-anchor="start" x="111" y="-3480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Data()</text>
<text text-anchor="start" x="111" y="-3469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetData()</text>
<text text-anchor="start" x="111" y="-3458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetData()</text>
<text text-anchor="start" x="111" y="-3447.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 17 more...</text>
<text text-anchor="start" x="111" y="-3436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Fix()</text>
<text text-anchor="start" x="111" y="-3425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Free()</text>
<text text-anchor="start" x="111" y="-3414.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetBufferSize()</text>
<text text-anchor="start" x="111" y="-3403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBufferSize()</text>
<text text-anchor="start" x="111" y="-3392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetInitialPosition()</text>
<text text-anchor="start" x="111" y="-3381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetInitialPosition()</text>
<text text-anchor="start" x="111" y="-3370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* X0()</text>
<text text-anchor="start" x="111" y="-3359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Y0()</text>
<text text-anchor="start" x="111" y="-3348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Z0()</text>
<text text-anchor="start" x="111" y="-3337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* X0()</text>
<text text-anchor="start" x="111" y="-3326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Y0()</text>
<text text-anchor="start" x="111" y="-3315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Z0()</text>
<text text-anchor="start" x="111" y="-3304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetInitialPosition()</text>
<text text-anchor="start" x="111" y="-3293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetInitialPosition()</text>
<text text-anchor="start" x="111" y="-3282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetVariablesList()</text>
<text text-anchor="start" x="111" y="-3271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetVariablesList()</text>
<text text-anchor="start" x="111" y="-3260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDofPosition()</text>
<text text-anchor="start" x="111" y="-3249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDof()</text>
<text text-anchor="start" x="111" y="-3238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDof()</text>
<text text-anchor="start" x="111" y="-3227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDofs()</text>
<text text-anchor="start" x="111" y="-3216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDofs()</text>
<text text-anchor="start" x="111" y="-3205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetDof()</text>
<text text-anchor="start" x="111" y="-3194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetDof()</text>
<text text-anchor="start" x="111" y="-3183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pAddDof()</text>
<text text-anchor="start" x="111" y="-3172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pAddDof()</text>
<text text-anchor="start" x="111" y="-3161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pAddDof()</text>
<text text-anchor="start" x="111" y="-3150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddDof()</text>
<text text-anchor="start" x="111" y="-3139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddDof()</text>
<text text-anchor="start" x="111" y="-3128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HasDofFor()</text>
<text text-anchor="start" x="111" y="-3117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsFixed()</text>
<text text-anchor="start" x="111" y="-3106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsActive()</text>
<text text-anchor="start" x="111" y="-3095.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="111" y="-3084.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="111" y="-3073.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node5 -->
<g id="edge8" class="edge">
<title>Node4&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M119.43,-4823.35C120.36,-4814.14 121.3,-4804.87 122.24,-4795.55"/>
<polygon fill="none" stroke="midnightblue" points="115.95,-4823.01 118.42,-4833.32 122.91,-4823.72 115.95,-4823.01"/>
</g>
<!-- Node5&#45;&gt;Node3 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node3</title>
<path fill="none" stroke="#404040" d="M151.24,-3066.41C149.94,-3047.16 148.64,-3027.89 147.35,-3008.66"/>
<polygon fill="none" stroke="#404040" points="147.35,-3008.65 142.95,-3002.94 146.54,-2996.68 150.93,-3002.4 147.35,-3008.65"/>
<text text-anchor="middle" x="180.5" y="-3040" font-family="Helvetica,sans-Serif" font-size="10.00"> #mpAssign</text>
<text text-anchor="middle" x="180.5" y="-3029" font-family="Helvetica,sans-Serif" font-size="10.00">#mpPredict</text>
<text text-anchor="middle" x="180.5" y="-3018" font-family="Helvetica,sans-Serif" font-size="10.00">#mpUpdate</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="../../d3/d3f/class_kratos_1_1_point.html" target="_top" xlink:title="Point class.">
<polygon fill="none" stroke="black" points="167,-4987.5 167,-5550.5 316,-5550.5 316,-4987.5 167,-4987.5"/>
<text text-anchor="middle" x="241.5" y="-5538.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Point</text>
<polyline fill="none" stroke="black" points="167,-5531.5 316,-5531.5 "/>
<text text-anchor="middle" x="241.5" y="-5519.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="167,-5512.5 316,-5512.5 "/>
<text text-anchor="start" x="175" y="-5500.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Point()</text>
<text text-anchor="start" x="175" y="-5489.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Point()</text>
<text text-anchor="start" x="175" y="-5478.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Point()</text>
<text text-anchor="start" x="175" y="-5467.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Point()</text>
<text text-anchor="start" x="175" y="-5456.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Point()</text>
<text text-anchor="start" x="175" y="-5445.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Point()</text>
<text text-anchor="start" x="175" y="-5434.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~Point()</text>
<text text-anchor="start" x="175" y="-5423.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="175" y="-5412.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator==()</text>
<text text-anchor="start" x="175" y="-5401.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SquaredDistance()</text>
<text text-anchor="start" x="175" y="-5390.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Distance()</text>
<text text-anchor="start" x="175" y="-5379.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="175" y="-5368.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="175" y="-5357.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="175" y="-5346.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="175" y="-5335.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CoordinatesArrayType</text>
<text text-anchor="start" x="175" y="-5324.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="175" y="-5313.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="175" y="-5302.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="175" y="-5291.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="175" y="-5280.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="175" y="-5269.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="175" y="-5258.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="175" y="-5247.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Point()</text>
<text text-anchor="start" x="175" y="-5236.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Point()</text>
<text text-anchor="start" x="175" y="-5225.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Point()</text>
<text text-anchor="start" x="175" y="-5214.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Point()</text>
<text text-anchor="start" x="175" y="-5203.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Point()</text>
<text text-anchor="start" x="175" y="-5192.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Point()</text>
<text text-anchor="start" x="175" y="-5181.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Point()</text>
<text text-anchor="start" x="175" y="-5170.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="175" y="-5159.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==()</text>
<text text-anchor="start" x="175" y="-5148.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SquaredDistance()</text>
<text text-anchor="start" x="175" y="-5137.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Distance()</text>
<text text-anchor="start" x="175" y="-5126.5" font-family="Helvetica,sans-Serif" font-size="10.00">* X()</text>
<text text-anchor="start" x="175" y="-5115.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Y()</text>
<text text-anchor="start" x="175" y="-5104.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Z()</text>
<text text-anchor="start" x="175" y="-5093.5" font-family="Helvetica,sans-Serif" font-size="10.00">* X()</text>
<text text-anchor="start" x="175" y="-5082.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Y()</text>
<text text-anchor="start" x="175" y="-5071.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Z()</text>
<text text-anchor="start" x="175" y="-5060.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Coordinates()</text>
<text text-anchor="start" x="175" y="-5049.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Coordinates()</text>
<text text-anchor="start" x="175" y="-5038.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Dimension()</text>
<text text-anchor="start" x="175" y="-5027.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="175" y="-5016.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="175" y="-5005.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="175" y="-4994.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetAllCoordinates()</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M234.53,-4977.08C233.19,-4921.02 231.72,-4859.7 230.19,-4795.75"/>
<polygon fill="none" stroke="midnightblue" points="231.03,-4977.2 234.77,-4987.12 238.03,-4977.04 231.03,-4977.2"/>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="../../d4/ddc/class_kratos_1_1array__1d.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="159.5,-5742.5 159.5,-6558.5 323.5,-6558.5 323.5,-5742.5 159.5,-5742.5"/>
<text text-anchor="middle" x="241.5" y="-6546.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::array_1d&lt; double, 3 &gt;</text>
<polyline fill="none" stroke="black" points="159.5,-6539.5 323.5,-6539.5 "/>
<text text-anchor="middle" x="241.5" y="-6527.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="159.5,-6520.5 323.5,-6520.5 "/>
<text text-anchor="start" x="167.5" y="-6508.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="167.5" y="-6497.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="167.5" y="-6486.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="167.5" y="-6475.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="167.5" y="-6464.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="167.5" y="-6453.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="167.5" y="-6442.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="167.5" y="-6431.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="167.5" y="-6420.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="167.5" y="-6409.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="167.5" y="-6398.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="167.5" y="-6387.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="167.5" y="-6376.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="167.5" y="-6365.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator+=()</text>
<text text-anchor="start" x="167.5" y="-6354.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator&#45;=()</text>
<text text-anchor="start" x="167.5" y="-6343.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator/=()</text>
<text text-anchor="start" x="167.5" y="-6332.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator==()</text>
<text text-anchor="start" x="167.5" y="-6321.5" font-family="Helvetica,sans-Serif" font-size="10.00">* size_type</text>
<text text-anchor="start" x="167.5" y="-6310.5" font-family="Helvetica,sans-Serif" font-size="10.00">* difference_type</text>
<text text-anchor="start" x="167.5" y="-6299.5" font-family="Helvetica,sans-Serif" font-size="10.00">* value_type</text>
<text text-anchor="start" x="167.5" y="-6288.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reference</text>
<text text-anchor="start" x="167.5" y="-6277.5" font-family="Helvetica,sans-Serif" font-size="10.00">* reference</text>
<text text-anchor="start" x="167.5" y="-6266.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_type</text>
<text text-anchor="start" x="167.5" y="-6255.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pointer</text>
<text text-anchor="start" x="167.5" y="-6244.5" font-family="Helvetica,sans-Serif" font-size="10.00">* self_type</text>
<text text-anchor="start" x="167.5" y="-6233.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_closure_type</text>
<text text-anchor="start" x="167.5" y="-6222.5" font-family="Helvetica,sans-Serif" font-size="10.00">* closure_type</text>
<text text-anchor="start" x="167.5" y="-6211.5" font-family="Helvetica,sans-Serif" font-size="10.00">* vector_temporary_type</text>
<text text-anchor="start" x="167.5" y="-6200.5" font-family="Helvetica,sans-Serif" font-size="10.00">* storage_category</text>
<text text-anchor="start" x="167.5" y="-6189.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="167.5" y="-6178.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="167.5" y="-6167.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reverse_iterator</text>
<text text-anchor="start" x="167.5" y="-6156.5" font-family="Helvetica,sans-Serif" font-size="10.00">* reverse_iterator</text>
<text text-anchor="start" x="167.5" y="-6145.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_iterator_type</text>
<text text-anchor="start" x="167.5" y="-6134.5" font-family="Helvetica,sans-Serif" font-size="10.00">* iterator_type</text>
<text text-anchor="start" x="167.5" y="-6123.5" font-family="Helvetica,sans-Serif" font-size="10.00">* find()</text>
<text text-anchor="start" x="167.5" y="-6112.5" font-family="Helvetica,sans-Serif" font-size="10.00">* find()</text>
<text text-anchor="start" x="167.5" y="-6101.5" font-family="Helvetica,sans-Serif" font-size="10.00">* size()</text>
<text text-anchor="start" x="167.5" y="-6090.5" font-family="Helvetica,sans-Serif" font-size="10.00">* minus_assign()</text>
<text text-anchor="start" x="167.5" y="-6079.5" font-family="Helvetica,sans-Serif" font-size="10.00">* data()</text>
<text text-anchor="start" x="167.5" y="-6068.5" font-family="Helvetica,sans-Serif" font-size="10.00">* data()</text>
<text text-anchor="start" x="167.5" y="-6057.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="167.5" y="-6046.5" font-family="Helvetica,sans-Serif" font-size="10.00">* data_</text>
<text text-anchor="start" x="167.5" y="-6035.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="167.5" y="-6024.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="167.5" y="-6013.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="167.5" y="-6002.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="167.5" y="-5991.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="167.5" y="-5980.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="167.5" y="-5969.5" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="167.5" y="-5958.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="167.5" y="-5947.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="167.5" y="-5936.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="167.5" y="-5925.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="167.5" y="-5914.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="167.5" y="-5903.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="167.5" y="-5892.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator+=()</text>
<text text-anchor="start" x="167.5" y="-5881.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&#45;=()</text>
<text text-anchor="start" x="167.5" y="-5870.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator/=()</text>
<text text-anchor="start" x="167.5" y="-5859.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==()</text>
<text text-anchor="start" x="167.5" y="-5848.5" font-family="Helvetica,sans-Serif" font-size="10.00">* resize()</text>
<text text-anchor="start" x="167.5" y="-5837.5" font-family="Helvetica,sans-Serif" font-size="10.00">* assign_temporary()</text>
<text text-anchor="start" x="167.5" y="-5826.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator*=()</text>
<text text-anchor="start" x="167.5" y="-5815.5" font-family="Helvetica,sans-Serif" font-size="10.00">* plus_assign()</text>
<text text-anchor="start" x="167.5" y="-5804.5" font-family="Helvetica,sans-Serif" font-size="10.00">* assign()</text>
<text text-anchor="start" x="167.5" y="-5793.5" font-family="Helvetica,sans-Serif" font-size="10.00">* swap()</text>
<text text-anchor="start" x="167.5" y="-5782.5" font-family="Helvetica,sans-Serif" font-size="10.00">* insert_element()</text>
<text text-anchor="start" x="167.5" y="-5771.5" font-family="Helvetica,sans-Serif" font-size="10.00">* erase_element()</text>
<text text-anchor="start" x="167.5" y="-5760.5" font-family="Helvetica,sans-Serif" font-size="10.00">* clear()</text>
<text text-anchor="start" x="167.5" y="-5749.5" font-family="Helvetica,sans-Serif" font-size="10.00">* swap</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node6 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node6</title>
<path fill="none" stroke="midnightblue" d="M241.5,-5731.99C241.5,-5670.48 241.5,-5608.4 241.5,-5550.56"/>
<polygon fill="none" stroke="midnightblue" points="238,-5732.25 241.5,-5742.25 245,-5732.25 238,-5732.25"/>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:title=" ">
<polygon fill="none" stroke="#bfbfbf" points="170,-6596.5 170,-6675.5 313,-6675.5 313,-6596.5 170,-6596.5"/>
<text text-anchor="start" x="178" y="-6663.5" font-family="Helvetica,sans-Serif" font-size="10.00">boost::numeric::ublas</text>
<text text-anchor="start" x="178" y="-6652.5" font-family="Helvetica,sans-Serif" font-size="10.00">::vector_expression&lt;</text>
<text text-anchor="middle" x="241.5" y="-6641.5" font-family="Helvetica,sans-Serif" font-size="10.00"> array_1d&lt; double, N &gt; &gt;</text>
<polyline fill="none" stroke="#bfbfbf" points="170,-6634.5 313,-6634.5 "/>
<text text-anchor="middle" x="241.5" y="-6622.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#bfbfbf" points="170,-6615.5 313,-6615.5 "/>
<text text-anchor="middle" x="241.5" y="-6603.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node7 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node7</title>
<path fill="none" stroke="midnightblue" d="M241.5,-6586.18C241.5,-6577.86 241.5,-6568.66 241.5,-6558.75"/>
<polygon fill="none" stroke="midnightblue" points="238,-6586.25 241.5,-6596.25 245,-6586.25 238,-6586.25"/>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="../../dc/d50/struct_kratos_1_1_emc_step_method_1_1_emc_parameters.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="198.5,-2109 198.5,-2221 356.5,-2221 356.5,-2109 198.5,-2109"/>
<text text-anchor="start" x="206.5" y="-2209" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::EmcStepMethod</text>
<text text-anchor="start" x="206.5" y="-2198" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TVariableType, TValueType</text>
<text text-anchor="middle" x="277.5" y="-2187" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::EmcParameters</text>
<polyline fill="none" stroke="black" points="198.5,-2180 356.5,-2180 "/>
<text text-anchor="start" x="206.5" y="-2168" font-family="Helvetica,sans-Serif" font-size="10.00">+ alpha</text>
<text text-anchor="start" x="206.5" y="-2157" font-family="Helvetica,sans-Serif" font-size="10.00">+ delta_time</text>
<text text-anchor="start" x="206.5" y="-2146" font-family="Helvetica,sans-Serif" font-size="10.00">+ c0</text>
<text text-anchor="start" x="206.5" y="-2135" font-family="Helvetica,sans-Serif" font-size="10.00">+ c1</text>
<polyline fill="none" stroke="black" points="198.5,-2128 356.5,-2128 "/>
<text text-anchor="start" x="206.5" y="-2116" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetParameters()</text>
</a>
</g>
</g>
<!-- Node9&#45;&gt;Node2 -->
<g id="edge9" class="edge">
<title>Node9&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M273.43,-2108.59C263.23,-1969.68 235.81,-1596.37 213.91,-1298.13"/>
<polygon fill="none" stroke="#404040" points="213.88,-1297.74 209.46,-1292.05 213.01,-1285.77 217.43,-1291.46 213.88,-1297.74"/>
<text text-anchor="middle" x="237" y="-1307" font-family="Helvetica,sans-Serif" font-size="10.00"> #mEmc</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_emc_step_rotation_method__coll__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
