<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::BlockBuilderAndSolver&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt; Pages: 1 -->
<svg width="210pt" height="2597pt"
 viewBox="0.00 0.00 210.00 2597.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2593)">
<title>Kratos::BlockBuilderAndSolver&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Solution Buider and Solver based on block matrix.">
<polygon fill="#bfbfbf" stroke="black" points="15.5,-0.5 15.5,-739.5 186.5,-739.5 186.5,-0.5 15.5,-0.5"/>
<text text-anchor="start" x="23.5" y="-727.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::BlockBuilderAndSolver</text>
<text text-anchor="start" x="23.5" y="-716.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="101" y="-705.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="15.5,-698.5 186.5,-698.5 "/>
<text text-anchor="middle" x="101" y="-686.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="15.5,-679.5 186.5,-679.5 "/>
<text text-anchor="start" x="23.5" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BlockBuilderAndSolver()</text>
<text text-anchor="start" x="23.5" y="-656.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~BlockBuilderAndSolver()</text>
<text text-anchor="start" x="23.5" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuildLHS()</text>
<text text-anchor="start" x="23.5" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuildRHS()</text>
<text text-anchor="start" x="23.5" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Build()</text>
<text text-anchor="start" x="23.5" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SystemSolve()</text>
<text text-anchor="start" x="23.5" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuildAndSolve()</text>
<text text-anchor="start" x="23.5" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuildRHSAndSolve()</text>
<text text-anchor="start" x="23.5" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ApplyDirichletConditions()</text>
<text text-anchor="start" x="23.5" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetUpDofSet()</text>
<text text-anchor="start" x="23.5" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetUpSystem()</text>
<text text-anchor="start" x="23.5" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetUpSystemMatrices()</text>
<text text-anchor="start" x="23.5" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="23.5" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="23.5" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateReactions()</text>
<text text-anchor="start" x="23.5" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="23.5" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="23.5" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SystemSolveWithPhysics()</text>
<text text-anchor="start" x="23.5" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ConstructMatrixStructure()</text>
<text text-anchor="start" x="23.5" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssembleLHS()</text>
<text text-anchor="start" x="23.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssembleRHS()</text>
<text text-anchor="start" x="23.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Assemble()</text>
<text text-anchor="start" x="23.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="23.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BasePointerType</text>
<text text-anchor="start" x="23.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="23.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="23.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixType</text>
<text text-anchor="start" x="23.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="23.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixPointerType</text>
<text text-anchor="start" x="23.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorPointerType</text>
<text text-anchor="start" x="23.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="23.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="23.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="23.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockBuilderAndSolver()</text>
<text text-anchor="start" x="23.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~BlockBuilderAndSolver()</text>
<text text-anchor="start" x="23.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildLHS()</text>
<text text-anchor="start" x="23.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHS()</text>
<text text-anchor="start" x="23.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Build()</text>
<text text-anchor="start" x="23.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemSolve()</text>
<text text-anchor="start" x="23.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndSolve()</text>
<text text-anchor="start" x="23.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHSAndSolve()</text>
<text text-anchor="start" x="23.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ApplyDirichletConditions()</text>
<text text-anchor="start" x="23.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpDofSet()</text>
<text text-anchor="start" x="23.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpSystem()</text>
<text text-anchor="start" x="23.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpSystemMatrices()</text>
<text text-anchor="start" x="23.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="23.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="23.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateReactions()</text>
<text text-anchor="start" x="23.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="23.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="23.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemSolveWithPhysics()</text>
<text text-anchor="start" x="23.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstructMatrixStructure()</text>
<text text-anchor="start" x="23.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleLHS()</text>
<text text-anchor="start" x="23.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleRHS()</text>
<text text-anchor="start" x="23.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Assemble()</text>
<text text-anchor="start" x="23.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddUnique()</text>
<text text-anchor="start" x="23.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHSNoDirichlet()</text>
<text text-anchor="start" x="23.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CreatePartition()</text>
<text text-anchor="start" x="23.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleRowContribution()</text>
<text text-anchor="start" x="23.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ForwardFind()</text>
<text text-anchor="start" x="23.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BackwardFind()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d6/d35/class_kratos_1_1_solution_builder_and_solver.html" target="_top" xlink:title="Solution Buider and Solver base class.">
<polygon fill="none" stroke="black" points="0,-776.5 0,-1680.5 202,-1680.5 202,-776.5 0,-776.5"/>
<text text-anchor="start" x="8" y="-1668.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::SolutionBuilderAnd</text>
<text text-anchor="start" x="8" y="-1657.5" font-family="Helvetica,sans-Serif" font-size="10.00">Solver&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="101" y="-1646.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="0,-1639.5 202,-1639.5 "/>
<text text-anchor="start" x="8" y="-1627.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpLinearSystemSolver</text>
<text text-anchor="start" x="8" y="-1616.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mDofSet</text>
<text text-anchor="start" x="8" y="-1605.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mOptions</text>
<text text-anchor="start" x="8" y="-1594.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEquationSystemSize</text>
<text text-anchor="start" x="8" y="-1583.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<text text-anchor="start" x="8" y="-1572.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpReactionsVector</text>
<polyline fill="none" stroke="black" points="0,-1565.5 202,-1565.5 "/>
<text text-anchor="start" x="8" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionBuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionBuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SolutionBuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuildLHS()</text>
<text text-anchor="start" x="8" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuildRHS()</text>
<text text-anchor="start" x="8" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Build()</text>
<text text-anchor="start" x="8" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SystemSolve()</text>
<text text-anchor="start" x="8" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuildAndSolve()</text>
<text text-anchor="start" x="8" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuildRHSAndSolve()</text>
<text text-anchor="start" x="8" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ApplyDirichletConditions()</text>
<text text-anchor="start" x="8" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetUpDofSet()</text>
<text text-anchor="start" x="8" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetUpSystem()</text>
<text text-anchor="start" x="8" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetUpSystemMatrices()</text>
<text text-anchor="start" x="8" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateReactions()</text>
<text text-anchor="start" x="8" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="8" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="8" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetEquationSystemSize()</text>
<text text-anchor="start" x="8" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetLinearSystemSolver()</text>
<text text-anchor="start" x="8" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetOptions()</text>
<text text-anchor="start" x="8" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetOptions()</text>
<text text-anchor="start" x="8" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="8" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetEchoLevel()</text>
<text text-anchor="start" x="8" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EchoInfo()</text>
<text text-anchor="start" x="8" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDofSet()</text>
<text text-anchor="start" x="8" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="8" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="8" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixType</text>
<text text-anchor="start" x="8" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="8" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixPointerType</text>
<text text-anchor="start" x="8" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorPointerType</text>
<text text-anchor="start" x="8" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="8" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="8" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="8" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemePointerType</text>
<text text-anchor="start" x="8" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolverPointerType</text>
<text text-anchor="start" x="8" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpLinearSystemSolver</text>
<text text-anchor="start" x="8" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mDofSet</text>
<text text-anchor="start" x="8" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mOptions</text>
<text text-anchor="start" x="8" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEquationSystemSize</text>
<text text-anchor="start" x="8" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="8" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpReactionsVector</text>
<text text-anchor="start" x="8" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionBuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionBuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~SolutionBuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildLHS()</text>
<text text-anchor="start" x="8" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHS()</text>
<text text-anchor="start" x="8" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Build()</text>
<text text-anchor="start" x="8" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemSolve()</text>
<text text-anchor="start" x="8" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndSolve()</text>
<text text-anchor="start" x="8" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHSAndSolve()</text>
<text text-anchor="start" x="8" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ApplyDirichletConditions()</text>
<text text-anchor="start" x="8" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpDofSet()</text>
<text text-anchor="start" x="8" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpSystem()</text>
<text text-anchor="start" x="8" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpSystemMatrices()</text>
<text text-anchor="start" x="8" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateReactions()</text>
<text text-anchor="start" x="8" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="8" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="8" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetEquationSystemSize()</text>
<text text-anchor="start" x="8" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetLinearSystemSolver()</text>
<text text-anchor="start" x="8" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetOptions()</text>
<text text-anchor="start" x="8" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetOptions()</text>
<text text-anchor="start" x="8" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="8" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetEchoLevel()</text>
<text text-anchor="start" x="8" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EchoInfo()</text>
<text text-anchor="start" x="8" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDofSet()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M101,-766.29C101,-757.38 101,-748.48 101,-739.62"/>
<polygon fill="none" stroke="midnightblue" points="97.5,-766.36 101,-776.36 104.5,-766.36 97.5,-766.36"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="26.5,-1717.5 26.5,-2588.5 175.5,-2588.5 175.5,-1717.5 26.5,-1717.5"/>
<text text-anchor="middle" x="101" y="-2576.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="26.5,-2569.5 175.5,-2569.5 "/>
<text text-anchor="middle" x="101" y="-2557.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="26.5,-2550.5 175.5,-2550.5 "/>
<text text-anchor="start" x="34.5" y="-2538.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="34.5" y="-2527.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="34.5" y="-2516.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="34.5" y="-2505.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="34.5" y="-2494.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="34.5" y="-2483.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="34.5" y="-2472.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="34.5" y="-2461.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="34.5" y="-2450.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="34.5" y="-2439.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="34.5" y="-2428.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="34.5" y="-2417.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="34.5" y="-2406.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="34.5" y="-2395.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="34.5" y="-2384.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="34.5" y="-2373.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="34.5" y="-2362.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="34.5" y="-2351.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="34.5" y="-2340.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="34.5" y="-2329.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="34.5" y="-2318.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="34.5" y="-2307.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="34.5" y="-2296.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="34.5" y="-2285.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="34.5" y="-2274.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="34.5" y="-2263.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="34.5" y="-2252.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="34.5" y="-2241.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="34.5" y="-2230.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="34.5" y="-2219.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="34.5" y="-2208.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="34.5" y="-2197.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="34.5" y="-2186.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="34.5" y="-2175.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="34.5" y="-2164.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="34.5" y="-2153.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="34.5" y="-2142.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="34.5" y="-2131.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="34.5" y="-2120.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="34.5" y="-2109.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="34.5" y="-2098.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="34.5" y="-2087.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="34.5" y="-2076.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="34.5" y="-2065.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="34.5" y="-2054.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="34.5" y="-2043.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="34.5" y="-2032.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="34.5" y="-2021.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="34.5" y="-2010.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="34.5" y="-1999.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="34.5" y="-1988.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="34.5" y="-1977.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="34.5" y="-1966.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="34.5" y="-1955.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="34.5" y="-1944.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="34.5" y="-1933.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="34.5" y="-1922.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="34.5" y="-1911.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="34.5" y="-1900.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="34.5" y="-1889.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="34.5" y="-1878.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="34.5" y="-1867.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="34.5" y="-1856.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="34.5" y="-1845.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="34.5" y="-1834.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="34.5" y="-1823.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="34.5" y="-1812.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="34.5" y="-1801.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="34.5" y="-1790.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="34.5" y="-1779.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="34.5" y="-1768.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="34.5" y="-1757.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="34.5" y="-1746.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="34.5" y="-1735.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="34.5" y="-1724.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M101,-1707.36C101,-1698.44 101,-1689.52 101,-1680.6"/>
<polygon fill="none" stroke="midnightblue" points="97.5,-1707.43 101,-1717.43 104.5,-1707.43 97.5,-1707.43"/>
</g>
</g>
</svg>
