<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::SimoJ2ThermoPlasticityModel Pages: 1 -->
<svg width="495pt" height="4785pt"
 viewBox="0.00 0.00 495.00 4785.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 4781)">
<title>Kratos::SimoJ2ThermoPlasticityModel</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Short class definition.">
<polygon fill="#bfbfbf" stroke="black" points="179.5,-0.5 179.5,-508.5 369.5,-508.5 369.5,-0.5 179.5,-0.5"/>
<text text-anchor="start" x="187.5" y="-496.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::SimoJ2ThermoPlasticity</text>
<text text-anchor="middle" x="274.5" y="-485.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model</text>
<polyline fill="none" stroke="black" points="179.5,-478.5 369.5,-478.5 "/>
<text text-anchor="middle" x="274.5" y="-466.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="179.5,-459.5 369.5,-459.5 "/>
<text text-anchor="start" x="187.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SimoJ2ThermoPlasticityModel()</text>
<text text-anchor="start" x="187.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SimoJ2ThermoPlasticityModel()</text>
<text text-anchor="start" x="187.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="187.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="187.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SimoJ2ThermoPlasticityModel()</text>
<text text-anchor="start" x="187.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDomainVariablesList()</text>
<text text-anchor="start" x="187.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Has()</text>
<text text-anchor="start" x="187.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="187.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="187.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="187.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="187.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElasticityModelType</text>
<text text-anchor="start" x="187.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElasticityModelPointer</text>
<text text-anchor="start" x="187.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HardeningRuleType</text>
<text text-anchor="start" x="187.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* YieldSurfaceType</text>
<text text-anchor="start" x="187.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* YieldSurfacePointer</text>
<text text-anchor="start" x="187.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="187.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseTypePointer</text>
<text text-anchor="start" x="187.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="187.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VoigtIndexType</text>
<text text-anchor="start" x="187.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MatrixType</text>
<text text-anchor="start" x="187.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ModelDataType</text>
<text text-anchor="start" x="187.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaterialDataType</text>
<text text-anchor="start" x="187.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticDataType</text>
<text text-anchor="start" x="187.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InternalVariablesType</text>
<text text-anchor="start" x="187.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="187.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="187.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="187.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="187.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="187.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SimoJ2ThermoPlasticityModel()</text>
<text text-anchor="start" x="187.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SimoJ2ThermoPlasticityModel()</text>
<text text-anchor="start" x="187.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="187.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="187.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~SimoJ2ThermoPlasticityModel()</text>
<text text-anchor="start" x="187.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDomainVariablesList()</text>
<text text-anchor="start" x="187.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Has()</text>
<text text-anchor="start" x="187.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="187.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="187.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="187.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d4/d91/class_kratos_1_1_non_linear_associative_plasticity_model.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="133.5,-546.5 133.5,-1626.5 415.5,-1626.5 415.5,-546.5 133.5,-546.5"/>
<text text-anchor="start" x="141.5" y="-1614.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NonLinearAssociative</text>
<text text-anchor="start" x="141.5" y="-1603.5" font-family="Helvetica,sans-Serif" font-size="10.00">PlasticityModel&lt; Incompressible</text>
<text text-anchor="start" x="141.5" y="-1592.5" font-family="Helvetica,sans-Serif" font-size="10.00">NeoHookeanModel, MisesHuberThermalYield</text>
<text text-anchor="middle" x="274.5" y="-1581.5" font-family="Helvetica,sans-Serif" font-size="10.00">Surface&lt; SimoExponentialThermalHardeningRule &gt; &gt;</text>
<polyline fill="none" stroke="black" points="133.5,-1574.5 415.5,-1574.5 "/>
<text text-anchor="start" x="141.5" y="-1562.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInternal</text>
<text text-anchor="start" x="141.5" y="-1551.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mPreviousInternal</text>
<polyline fill="none" stroke="black" points="133.5,-1544.5 415.5,-1544.5 "/>
<text text-anchor="start" x="141.5" y="-1532.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NonLinearAssociativePlasticity</text>
<text text-anchor="start" x="141.5" y="-1521.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="141.5" y="-1510.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NonLinearAssociativePlasticity</text>
<text text-anchor="start" x="141.5" y="-1499.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="141.5" y="-1488.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="141.5" y="-1477.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="141.5" y="-1466.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NonLinearAssociativePlasticity</text>
<text text-anchor="start" x="141.5" y="-1455.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="141.5" y="-1444.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressTensor()</text>
<text text-anchor="start" x="141.5" y="-1433.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricStress</text>
<text text-anchor="start" x="141.5" y="-1422.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="141.5" y="-1411.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="141.5" y="-1400.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressAndConstitutive</text>
<text text-anchor="start" x="141.5" y="-1389.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="141.5" y="-1378.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Has()</text>
<text text-anchor="start" x="141.5" y="-1367.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="141.5" y="-1356.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="141.5" y="-1345.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="141.5" y="-1334.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="141.5" y="-1323.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="141.5" y="-1312.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetWorkingMeasures()</text>
<text text-anchor="start" x="141.5" y="-1301.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetWorkingMeasures()</text>
<text text-anchor="start" x="141.5" y="-1290.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateAndAddIsochoric</text>
<text text-anchor="start" x="141.5" y="-1279.5" font-family="Helvetica,sans-Serif" font-size="10.00">StressTensor()</text>
<text text-anchor="start" x="141.5" y="-1268.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateAndAddPlasticConstitutive</text>
<text text-anchor="start" x="141.5" y="-1257.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="141.5" y="-1246.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AddPlasticConstitutiveComponent()</text>
<text text-anchor="start" x="141.5" y="-1235.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateReturnMapping()</text>
<text text-anchor="start" x="141.5" y="-1224.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateImplexReturnMapping()</text>
<text text-anchor="start" x="141.5" y="-1213.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeVariables()</text>
<text text-anchor="start" x="141.5" y="-1202.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateStressConfiguration()</text>
<text text-anchor="start" x="141.5" y="-1191.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateInternalVariables()</text>
<text text-anchor="start" x="141.5" y="-1180.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateScalingFactors()</text>
<text text-anchor="start" x="141.5" y="-1169.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateThermalDissipation()</text>
<text text-anchor="start" x="141.5" y="-1158.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateImplexThermalDissipation()</text>
<text text-anchor="start" x="141.5" y="-1147.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElasticityModelType</text>
<text text-anchor="start" x="141.5" y="-1136.5" font-family="Helvetica,sans-Serif" font-size="10.00">* YieldSurfaceType</text>
<text text-anchor="start" x="141.5" y="-1125.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="141.5" y="-1114.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseTypePointer</text>
<text text-anchor="start" x="141.5" y="-1103.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="141.5" y="-1092.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VoigtIndexType</text>
<text text-anchor="start" x="141.5" y="-1081.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MatrixType</text>
<text text-anchor="start" x="141.5" y="-1070.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ModelDataType</text>
<text text-anchor="start" x="141.5" y="-1059.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaterialDataType</text>
<text text-anchor="start" x="141.5" y="-1048.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticDataType</text>
<text text-anchor="start" x="141.5" y="-1037.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InternalVariablesType</text>
<text text-anchor="start" x="141.5" y="-1026.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StrainMeasureType</text>
<text text-anchor="start" x="141.5" y="-1015.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StressMeasureType</text>
<text text-anchor="start" x="141.5" y="-1004.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="141.5" y="-993.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="141.5" y="-982.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInternal</text>
<text text-anchor="start" x="141.5" y="-971.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPreviousInternal</text>
<text text-anchor="start" x="141.5" y="-960.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="141.5" y="-949.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="141.5" y="-938.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="141.5" y="-927.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NonLinearAssociativePlasticity</text>
<text text-anchor="start" x="141.5" y="-916.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="141.5" y="-905.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NonLinearAssociativePlasticity</text>
<text text-anchor="start" x="141.5" y="-894.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="141.5" y="-883.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="141.5" y="-872.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="141.5" y="-861.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~NonLinearAssociativePlasticity</text>
<text text-anchor="start" x="141.5" y="-850.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="141.5" y="-839.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressTensor()</text>
<text text-anchor="start" x="141.5" y="-828.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricStress</text>
<text text-anchor="start" x="141.5" y="-817.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="141.5" y="-806.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="141.5" y="-795.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressAndConstitutive</text>
<text text-anchor="start" x="141.5" y="-784.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="141.5" y="-773.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Has()</text>
<text text-anchor="start" x="141.5" y="-762.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="141.5" y="-751.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="141.5" y="-740.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="141.5" y="-729.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="141.5" y="-718.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="141.5" y="-707.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetWorkingMeasures()</text>
<text text-anchor="start" x="141.5" y="-696.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetWorkingMeasures()</text>
<text text-anchor="start" x="141.5" y="-685.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateAndAddIsochoric</text>
<text text-anchor="start" x="141.5" y="-674.5" font-family="Helvetica,sans-Serif" font-size="10.00">StressTensor()</text>
<text text-anchor="start" x="141.5" y="-663.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateAndAddPlasticConstitutive</text>
<text text-anchor="start" x="141.5" y="-652.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="141.5" y="-641.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddPlasticConstitutiveComponent()</text>
<text text-anchor="start" x="141.5" y="-630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateReturnMapping()</text>
<text text-anchor="start" x="141.5" y="-619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateImplexReturnMapping()</text>
<text text-anchor="start" x="141.5" y="-608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeVariables()</text>
<text text-anchor="start" x="141.5" y="-597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateStressConfiguration()</text>
<text text-anchor="start" x="141.5" y="-586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateInternalVariables()</text>
<text text-anchor="start" x="141.5" y="-575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateScalingFactors()</text>
<text text-anchor="start" x="141.5" y="-564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateThermalDissipation()</text>
<text text-anchor="start" x="141.5" y="-553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateImplexThermalDissipation()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M274.5,-536.28C274.5,-527.01 274.5,-517.84 274.5,-508.8"/>
<polygon fill="none" stroke="midnightblue" points="271,-536.38 274.5,-546.38 278,-536.38 271,-536.38"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d6/d39/class_kratos_1_1_plasticity_model.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="35,-1674.5 35,-2688.5 280,-2688.5 280,-1674.5 35,-1674.5"/>
<text text-anchor="start" x="43" y="-2676.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::PlasticityModel</text>
<text text-anchor="start" x="43" y="-2665.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; IncompressibleNeoHookeanModel,</text>
<text text-anchor="start" x="43" y="-2654.5" font-family="Helvetica,sans-Serif" font-size="10.00"> MisesHuberThermalYieldSurface</text>
<text text-anchor="middle" x="157.5" y="-2643.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; SimoExponentialThermalHardeningRule &gt; &gt;</text>
<polyline fill="none" stroke="black" points="35,-2636.5 280,-2636.5 "/>
<text text-anchor="start" x="43" y="-2624.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mElasticityModel</text>
<text text-anchor="start" x="43" y="-2613.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mYieldSurface</text>
<polyline fill="none" stroke="black" points="35,-2606.5 280,-2606.5 "/>
<text text-anchor="start" x="43" y="-2594.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PlasticityModel()</text>
<text text-anchor="start" x="43" y="-2583.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PlasticityModel()</text>
<text text-anchor="start" x="43" y="-2572.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="43" y="-2561.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="43" y="-2550.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~PlasticityModel()</text>
<text text-anchor="start" x="43" y="-2539.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeMaterial()</text>
<text text-anchor="start" x="43" y="-2528.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeModel()</text>
<text text-anchor="start" x="43" y="-2517.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeModel()</text>
<text text-anchor="start" x="43" y="-2506.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressTensor()</text>
<text text-anchor="start" x="43" y="-2495.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricStress</text>
<text text-anchor="start" x="43" y="-2484.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="43" y="-2473.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricStress</text>
<text text-anchor="start" x="43" y="-2462.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="43" y="-2451.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="43" y="-2440.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricConstitutive</text>
<text text-anchor="start" x="43" y="-2429.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="43" y="-2418.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricConstitutive</text>
<text text-anchor="start" x="43" y="-2407.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="43" y="-2396.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressAndConstitutive</text>
<text text-anchor="start" x="43" y="-2385.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="43" y="-2374.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricStress</text>
<text text-anchor="start" x="43" y="-2363.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="43" y="-2352.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricStress</text>
<text text-anchor="start" x="43" y="-2341.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="43" y="-2330.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="43" y="-2319.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDomainVariablesList()</text>
<text text-anchor="start" x="43" y="-2308.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Has()</text>
<text text-anchor="start" x="43" y="-2297.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="43" y="-2286.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="43" y="-2275.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetElasticityModel()</text>
<text text-anchor="start" x="43" y="-2264.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="43" y="-2253.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="43" y="-2242.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="43" y="-2231.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetInternalVariables()</text>
<text text-anchor="start" x="43" y="-2220.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElasticityModelType</text>
<text text-anchor="start" x="43" y="-2209.5" font-family="Helvetica,sans-Serif" font-size="10.00">* YieldSurfaceType</text>
<text text-anchor="start" x="43" y="-2198.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="43" y="-2187.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VoigtIndexType</text>
<text text-anchor="start" x="43" y="-2176.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MatrixType</text>
<text text-anchor="start" x="43" y="-2165.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="43" y="-2154.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ModelDataType</text>
<text text-anchor="start" x="43" y="-2143.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticDataType</text>
<text text-anchor="start" x="43" y="-2132.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InternalVariablesType</text>
<text text-anchor="start" x="43" y="-2121.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="43" y="-2110.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="43" y="-2099.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mElasticityModel</text>
<text text-anchor="start" x="43" y="-2088.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mYieldSurface</text>
<text text-anchor="start" x="43" y="-2077.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="43" y="-2066.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="43" y="-2055.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="43" y="-2044.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticityModel()</text>
<text text-anchor="start" x="43" y="-2033.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticityModel()</text>
<text text-anchor="start" x="43" y="-2022.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="43" y="-2011.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="43" y="-2000.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~PlasticityModel()</text>
<text text-anchor="start" x="43" y="-1989.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeMaterial()</text>
<text text-anchor="start" x="43" y="-1978.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeModel()</text>
<text text-anchor="start" x="43" y="-1967.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeModel()</text>
<text text-anchor="start" x="43" y="-1956.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressTensor()</text>
<text text-anchor="start" x="43" y="-1945.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricStress</text>
<text text-anchor="start" x="43" y="-1934.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="43" y="-1923.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricStress</text>
<text text-anchor="start" x="43" y="-1912.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="43" y="-1901.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="43" y="-1890.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricConstitutive</text>
<text text-anchor="start" x="43" y="-1879.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="43" y="-1868.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricConstitutive</text>
<text text-anchor="start" x="43" y="-1857.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="43" y="-1846.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressAndConstitutive</text>
<text text-anchor="start" x="43" y="-1835.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="43" y="-1824.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricStress</text>
<text text-anchor="start" x="43" y="-1813.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="43" y="-1802.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricStress</text>
<text text-anchor="start" x="43" y="-1791.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="43" y="-1780.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="43" y="-1769.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDomainVariablesList()</text>
<text text-anchor="start" x="43" y="-1758.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Has()</text>
<text text-anchor="start" x="43" y="-1747.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="43" y="-1736.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="43" y="-1725.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetElasticityModel()</text>
<text text-anchor="start" x="43" y="-1714.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="43" y="-1703.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="43" y="-1692.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="43" y="-1681.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetInternalVariables()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M212.76,-1664.31C214.1,-1651.74 215.45,-1639.14 216.8,-1626.55"/>
<polygon fill="none" stroke="midnightblue" points="209.26,-1664.08 211.68,-1674.39 216.22,-1664.82 209.26,-1664.08"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../d0/dbd/class_kratos_1_1_constitutive_model.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="65,-2726.5 65,-3740.5 250,-3740.5 250,-2726.5 65,-2726.5"/>
<text text-anchor="middle" x="157.5" y="-3728.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ConstitutiveModel</text>
<polyline fill="none" stroke="black" points="65,-3721.5 250,-3721.5 "/>
<text text-anchor="middle" x="157.5" y="-3709.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="65,-3702.5 250,-3702.5 "/>
<text text-anchor="start" x="73" y="-3690.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="73" y="-3679.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="73" y="-3668.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="73" y="-3657.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="73" y="-3646.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="73" y="-3635.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="73" y="-3624.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-3613.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-3602.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="73" y="-3591.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="73" y="-3580.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-3569.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeMaterial()</text>
<text text-anchor="start" x="73" y="-3558.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeModel()</text>
<text text-anchor="start" x="73" y="-3547.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeModel()</text>
<text text-anchor="start" x="73" y="-3536.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStrainEnergy()</text>
<text text-anchor="start" x="73" y="-3525.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressTensor()</text>
<text text-anchor="start" x="73" y="-3514.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricStress</text>
<text text-anchor="start" x="73" y="-3503.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-3492.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricStress</text>
<text text-anchor="start" x="73" y="-3481.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-3470.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="73" y="-3459.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricConstitutive</text>
<text text-anchor="start" x="73" y="-3448.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-3437.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricConstitutive</text>
<text text-anchor="start" x="73" y="-3426.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-3415.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressAndConstitutive</text>
<text text-anchor="start" x="73" y="-3404.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="73" y="-3393.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricStress</text>
<text text-anchor="start" x="73" y="-3382.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="73" y="-3371.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricStress</text>
<text text-anchor="start" x="73" y="-3360.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="73" y="-3349.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="73" y="-3338.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Has()</text>
<text text-anchor="start" x="73" y="-3327.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="73" y="-3316.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="73" y="-3305.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="73" y="-3294.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="73" y="-3283.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDomainVariablesList()</text>
<text text-anchor="start" x="73" y="-3272.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="73" y="-3261.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="73" y="-3250.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="73" y="-3239.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="73" y="-3228.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="73" y="-3217.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MatrixType</text>
<text text-anchor="start" x="73" y="-3206.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ModelDataType</text>
<text text-anchor="start" x="73" y="-3195.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaterialDataType</text>
<text text-anchor="start" x="73" y="-3184.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StrainMeasureType</text>
<text text-anchor="start" x="73" y="-3173.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StressMeasureType</text>
<text text-anchor="start" x="73" y="-3162.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="73" y="-3151.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="73" y="-3140.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="73" y="-3129.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="73" y="-3118.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="73" y="-3107.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-3096.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-3085.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="73" y="-3074.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="73" y="-3063.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-3052.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeMaterial()</text>
<text text-anchor="start" x="73" y="-3041.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeModel()</text>
<text text-anchor="start" x="73" y="-3030.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeModel()</text>
<text text-anchor="start" x="73" y="-3019.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStrainEnergy()</text>
<text text-anchor="start" x="73" y="-3008.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressTensor()</text>
<text text-anchor="start" x="73" y="-2997.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricStress</text>
<text text-anchor="start" x="73" y="-2986.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-2975.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricStress</text>
<text text-anchor="start" x="73" y="-2964.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-2953.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="73" y="-2942.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricConstitutive</text>
<text text-anchor="start" x="73" y="-2931.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-2920.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricConstitutive</text>
<text text-anchor="start" x="73" y="-2909.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-2898.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressAndConstitutive</text>
<text text-anchor="start" x="73" y="-2887.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="73" y="-2876.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricStress</text>
<text text-anchor="start" x="73" y="-2865.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="73" y="-2854.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricStress</text>
<text text-anchor="start" x="73" y="-2843.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="73" y="-2832.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="73" y="-2821.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Has()</text>
<text text-anchor="start" x="73" y="-2810.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="73" y="-2799.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="73" y="-2788.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="73" y="-2777.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="73" y="-2766.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDomainVariablesList()</text>
<text text-anchor="start" x="73" y="-2755.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="73" y="-2744.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="73" y="-2733.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M157.5,-2716.3C157.5,-2707.05 157.5,-2697.8 157.5,-2688.55"/>
<polygon fill="none" stroke="midnightblue" points="154,-2716.34 157.5,-2726.34 161,-2716.34 154,-2716.34"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../d4/ddc/class_kratos_1_1array__1d.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="0,-3816 0,-4632 149,-4632 149,-3816 0,-3816"/>
<text text-anchor="middle" x="74.5" y="-4620" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::array_1d&lt; T, N &gt;</text>
<polyline fill="none" stroke="black" points="0,-4613 149,-4613 "/>
<text text-anchor="middle" x="74.5" y="-4601" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-4594 149,-4594 "/>
<text text-anchor="start" x="8" y="-4582" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-4571" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-4560" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-4549" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-4538" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-4527" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-4516" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-4505" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="8" y="-4494" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="8" y="-4483" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="8" y="-4472" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="8" y="-4461" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-4450" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-4439" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator+=()</text>
<text text-anchor="start" x="8" y="-4428" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator&#45;=()</text>
<text text-anchor="start" x="8" y="-4417" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator/=()</text>
<text text-anchor="start" x="8" y="-4406" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator==()</text>
<text text-anchor="start" x="8" y="-4395" font-family="Helvetica,sans-Serif" font-size="10.00">* size_type</text>
<text text-anchor="start" x="8" y="-4384" font-family="Helvetica,sans-Serif" font-size="10.00">* difference_type</text>
<text text-anchor="start" x="8" y="-4373" font-family="Helvetica,sans-Serif" font-size="10.00">* value_type</text>
<text text-anchor="start" x="8" y="-4362" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reference</text>
<text text-anchor="start" x="8" y="-4351" font-family="Helvetica,sans-Serif" font-size="10.00">* reference</text>
<text text-anchor="start" x="8" y="-4340" font-family="Helvetica,sans-Serif" font-size="10.00">* array_type</text>
<text text-anchor="start" x="8" y="-4329" font-family="Helvetica,sans-Serif" font-size="10.00">* pointer</text>
<text text-anchor="start" x="8" y="-4318" font-family="Helvetica,sans-Serif" font-size="10.00">* self_type</text>
<text text-anchor="start" x="8" y="-4307" font-family="Helvetica,sans-Serif" font-size="10.00">* const_closure_type</text>
<text text-anchor="start" x="8" y="-4296" font-family="Helvetica,sans-Serif" font-size="10.00">* closure_type</text>
<text text-anchor="start" x="8" y="-4285" font-family="Helvetica,sans-Serif" font-size="10.00">* vector_temporary_type</text>
<text text-anchor="start" x="8" y="-4274" font-family="Helvetica,sans-Serif" font-size="10.00">* storage_category</text>
<text text-anchor="start" x="8" y="-4263" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-4252" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-4241" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reverse_iterator</text>
<text text-anchor="start" x="8" y="-4230" font-family="Helvetica,sans-Serif" font-size="10.00">* reverse_iterator</text>
<text text-anchor="start" x="8" y="-4219" font-family="Helvetica,sans-Serif" font-size="10.00">* const_iterator_type</text>
<text text-anchor="start" x="8" y="-4208" font-family="Helvetica,sans-Serif" font-size="10.00">* iterator_type</text>
<text text-anchor="start" x="8" y="-4197" font-family="Helvetica,sans-Serif" font-size="10.00">* find()</text>
<text text-anchor="start" x="8" y="-4186" font-family="Helvetica,sans-Serif" font-size="10.00">* find()</text>
<text text-anchor="start" x="8" y="-4175" font-family="Helvetica,sans-Serif" font-size="10.00">* size()</text>
<text text-anchor="start" x="8" y="-4164" font-family="Helvetica,sans-Serif" font-size="10.00">* minus_assign()</text>
<text text-anchor="start" x="8" y="-4153" font-family="Helvetica,sans-Serif" font-size="10.00">* data()</text>
<text text-anchor="start" x="8" y="-4142" font-family="Helvetica,sans-Serif" font-size="10.00">* data()</text>
<text text-anchor="start" x="8" y="-4131" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="8" y="-4120" font-family="Helvetica,sans-Serif" font-size="10.00">* data_</text>
<text text-anchor="start" x="8" y="-4109" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4098" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4087" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4076" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4065" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4054" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4043" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4032" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="8" y="-4021" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="8" y="-4010" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="8" y="-3999" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="8" y="-3988" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-3977" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-3966" font-family="Helvetica,sans-Serif" font-size="10.00">* operator+=()</text>
<text text-anchor="start" x="8" y="-3955" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&#45;=()</text>
<text text-anchor="start" x="8" y="-3944" font-family="Helvetica,sans-Serif" font-size="10.00">* operator/=()</text>
<text text-anchor="start" x="8" y="-3933" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==()</text>
<text text-anchor="start" x="8" y="-3922" font-family="Helvetica,sans-Serif" font-size="10.00">* resize()</text>
<text text-anchor="start" x="8" y="-3911" font-family="Helvetica,sans-Serif" font-size="10.00">* assign_temporary()</text>
<text text-anchor="start" x="8" y="-3900" font-family="Helvetica,sans-Serif" font-size="10.00">* operator*=()</text>
<text text-anchor="start" x="8" y="-3889" font-family="Helvetica,sans-Serif" font-size="10.00">* plus_assign()</text>
<text text-anchor="start" x="8" y="-3878" font-family="Helvetica,sans-Serif" font-size="10.00">* assign()</text>
<text text-anchor="start" x="8" y="-3867" font-family="Helvetica,sans-Serif" font-size="10.00">* swap()</text>
<text text-anchor="start" x="8" y="-3856" font-family="Helvetica,sans-Serif" font-size="10.00">* insert_element()</text>
<text text-anchor="start" x="8" y="-3845" font-family="Helvetica,sans-Serif" font-size="10.00">* erase_element()</text>
<text text-anchor="start" x="8" y="-3834" font-family="Helvetica,sans-Serif" font-size="10.00">* clear()</text>
<text text-anchor="start" x="8" y="-3823" font-family="Helvetica,sans-Serif" font-size="10.00">* swap</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M108.68,-3815.95C110.43,-3795.05 112.21,-3773.94 113.98,-3752.78"/>
<polygon fill="none" stroke="#404040" points="114,-3752.62 110.51,-3746.3 115,-3740.66 118.48,-3746.97 114,-3752.62"/>
<text text-anchor="middle" x="157.5" y="-3762" font-family="Helvetica,sans-Serif" font-size="10.00"> #mHistoryVector</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:title=" ">
<polygon fill="none" stroke="#bfbfbf" points="13.5,-4697.5 13.5,-4776.5 135.5,-4776.5 135.5,-4697.5 13.5,-4697.5"/>
<text text-anchor="start" x="21.5" y="-4764.5" font-family="Helvetica,sans-Serif" font-size="10.00">boost::numeric::ublas</text>
<text text-anchor="start" x="21.5" y="-4753.5" font-family="Helvetica,sans-Serif" font-size="10.00">::vector_expression&lt;</text>
<text text-anchor="middle" x="74.5" y="-4742.5" font-family="Helvetica,sans-Serif" font-size="10.00"> array_1d&lt; T, N &gt; &gt;</text>
<polyline fill="none" stroke="#bfbfbf" points="13.5,-4735.5 135.5,-4735.5 "/>
<text text-anchor="middle" x="74.5" y="-4723.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#bfbfbf" points="13.5,-4716.5 135.5,-4716.5 "/>
<text text-anchor="middle" x="74.5" y="-4704.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M74.5,-4686.9C74.5,-4671.35 74.5,-4652.75 74.5,-4632.08"/>
<polygon fill="none" stroke="midnightblue" points="71,-4687.17 74.5,-4697.17 78,-4687.17 71,-4687.17"/>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="167,-3788.5 167,-4659.5 316,-4659.5 316,-3788.5 167,-3788.5"/>
<text text-anchor="middle" x="241.5" y="-4647.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="167,-4640.5 316,-4640.5 "/>
<text text-anchor="middle" x="241.5" y="-4628.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="167,-4621.5 316,-4621.5 "/>
<text text-anchor="start" x="175" y="-4609.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="175" y="-4598.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="175" y="-4587.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="175" y="-4576.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="175" y="-4565.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="175" y="-4554.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="175" y="-4543.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="175" y="-4532.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="175" y="-4521.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="175" y="-4510.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="175" y="-4499.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="175" y="-4488.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="175" y="-4477.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="175" y="-4466.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="175" y="-4455.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="175" y="-4444.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="175" y="-4433.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="175" y="-4422.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="175" y="-4411.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="175" y="-4400.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="175" y="-4389.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="175" y="-4378.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="175" y="-4367.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="175" y="-4356.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="175" y="-4345.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="175" y="-4334.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="175" y="-4323.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="175" y="-4312.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="175" y="-4301.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="175" y="-4290.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="175" y="-4279.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="175" y="-4268.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="175" y="-4257.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="175" y="-4246.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="175" y="-4235.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="175" y="-4224.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="175" y="-4213.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="175" y="-4202.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="175" y="-4191.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="175" y="-4180.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="175" y="-4169.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="175" y="-4158.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="175" y="-4147.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="175" y="-4136.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="175" y="-4125.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="175" y="-4114.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="175" y="-4103.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="175" y="-4092.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="175" y="-4081.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="175" y="-4070.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="175" y="-4059.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="175" y="-4048.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="175" y="-4037.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="175" y="-4026.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="175" y="-4015.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="175" y="-4004.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="175" y="-3993.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="175" y="-3982.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="175" y="-3971.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="175" y="-3960.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="175" y="-3949.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="175" y="-3938.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="175" y="-3927.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="175" y="-3916.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="175" y="-3905.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="175" y="-3894.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="175" y="-3883.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="175" y="-3872.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="175" y="-3861.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="175" y="-3850.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="175" y="-3839.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="175" y="-3828.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="175" y="-3817.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="175" y="-3806.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="175" y="-3795.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node4 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M207.96,-3788.29C207.14,-3778.44 206.32,-3768.66 205.5,-3759 205.32,-3756.93 205.15,-3754.85 204.97,-3752.76"/>
<polygon fill="none" stroke="#404040" points="204.97,-3752.74 200.48,-3747.1 203.95,-3740.78 208.45,-3746.42 204.97,-3752.74"/>
<text text-anchor="middle" x="235" y="-3762" font-family="Helvetica,sans-Serif" font-size="10.00"> #mOptions</text>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="../../d1/d7a/struct_kratos_1_1_non_linear_associative_plasticity_model_1_1_thermal_variables.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="298,-2136.5 298,-2226.5 487,-2226.5 487,-2136.5 298,-2136.5"/>
<text text-anchor="start" x="306" y="-2214.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NonLinearAssociative</text>
<text text-anchor="start" x="306" y="-2203.5" font-family="Helvetica,sans-Serif" font-size="10.00">PlasticityModel&lt; TElasticityModel,</text>
<text text-anchor="middle" x="392.5" y="-2192.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TYieldSurface &gt;::ThermalVariables</text>
<polyline fill="none" stroke="black" points="298,-2185.5 487,-2185.5 "/>
<text text-anchor="start" x="306" y="-2173.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PlasticDissipation</text>
<text text-anchor="start" x="306" y="-2162.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ DeltaPlasticDissipation</text>
<polyline fill="none" stroke="black" points="298,-2155.5 487,-2155.5 "/>
<text text-anchor="middle" x="392.5" y="-2143.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node2 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M387.73,-2136.3C378.28,-2048.79 356.18,-1844.08 333.99,-1638.52"/>
<polygon fill="none" stroke="#404040" points="333.98,-1638.48 329.36,-1632.95 332.7,-1626.55 337.32,-1632.09 333.98,-1638.48"/>
<text text-anchor="middle" x="389" y="-1648" font-family="Helvetica,sans-Serif" font-size="10.00"> #mThermalVariables</text>
</g>
</g>
</svg>
