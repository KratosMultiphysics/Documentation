<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::ConstantRelaxationConvergenceAccelerator&lt; TSparseSpace, TDenseSpace &gt; Pages: 1 -->
<svg width="216pt" height="886pt"
 viewBox="0.00 0.00 216.00 886.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 882)">
<title>Kratos::ConstantRelaxationConvergenceAccelerator&lt; TSparseSpace, TDenseSpace &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Constant relaxation convergence accelerator This utility corrects the iteration guess with a constant...">
<polygon fill="#bfbfbf" stroke="black" points="7.5,-0.5 7.5,-266.5 200.5,-266.5 200.5,-0.5 7.5,-0.5"/>
<text text-anchor="start" x="15.5" y="-254.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ConstantRelaxation</text>
<text text-anchor="start" x="15.5" y="-243.5" font-family="Helvetica,sans-Serif" font-size="10.00">ConvergenceAccelerator</text>
<text text-anchor="middle" x="104" y="-232.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace &gt;</text>
<polyline fill="none" stroke="black" points="7.5,-225.5 200.5,-225.5 "/>
<text text-anchor="middle" x="104" y="-213.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="7.5,-206.5 200.5,-206.5 "/>
<text text-anchor="start" x="15.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ UpdateSolution()</text>
<text text-anchor="start" x="15.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="15.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseTypePointer</text>
<text text-anchor="start" x="15.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="15.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorPointerType</text>
<text text-anchor="start" x="15.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="15.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="15.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mOmega</text>
<text text-anchor="start" x="15.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstantRelaxationConvergence</text>
<text text-anchor="start" x="15.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">Accelerator()</text>
<text text-anchor="start" x="15.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstantRelaxationConvergence</text>
<text text-anchor="start" x="15.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">Accelerator()</text>
<text text-anchor="start" x="15.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstantRelaxationConvergence</text>
<text text-anchor="start" x="15.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">Accelerator()</text>
<text text-anchor="start" x="15.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ConstantRelaxationConvergence</text>
<text text-anchor="start" x="15.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">Accelerator()</text>
<text text-anchor="start" x="15.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="15.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateSolution()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../df/dd9/class_kratos_1_1_convergence_accelerator.html" target="_top" xlink:title="Base class for convergence accelerators This class is intended to be the base of any convergence acce...">
<polygon fill="none" stroke="black" points="0,-303.5 0,-877.5 208,-877.5 208,-303.5 0,-303.5"/>
<text text-anchor="start" x="8" y="-865.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ConvergenceAccelerator</text>
<text text-anchor="middle" x="104" y="-854.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace &gt;</text>
<polyline fill="none" stroke="black" points="0,-847.5 208,-847.5 "/>
<text text-anchor="start" x="8" y="-835.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<polyline fill="none" stroke="black" points="0,-828.5 208,-828.5 "/>
<text text-anchor="start" x="8" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ConvergenceAccelerator()</text>
<text text-anchor="start" x="8" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ConvergenceAccelerator()</text>
<text text-anchor="start" x="8" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ConvergenceAccelerator()</text>
<text text-anchor="start" x="8" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ConvergenceAccelerator()</text>
<text text-anchor="start" x="8" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="8" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeNonLinearIteration()</text>
<text text-anchor="start" x="8" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ UpdateSolution()</text>
<text text-anchor="start" x="8" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeNonLinearIteration()</text>
<text text-anchor="start" x="8" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Finalize()</text>
<text text-anchor="start" x="8" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="8" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="8" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetEchoLevel()</text>
<text text-anchor="start" x="8" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsBlockNewton()</text>
<text text-anchor="start" x="8" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeJacobianApproximation()</text>
<text text-anchor="start" x="8" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00"># pGetInverseJacobianApproximation()</text>
<text text-anchor="start" x="8" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetProblemSize()</text>
<text text-anchor="start" x="8" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="8" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MatrixType</text>
<text text-anchor="start" x="8" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorPointerType</text>
<text text-anchor="start" x="8" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MatrixPointerType</text>
<text text-anchor="start" x="8" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseVectorType</text>
<text text-anchor="start" x="8" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="8" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixPointerType</text>
<text text-anchor="start" x="8" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseVectorPointerType</text>
<text text-anchor="start" x="8" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="8" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConvergenceAccelerator()</text>
<text text-anchor="start" x="8" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConvergenceAccelerator()</text>
<text text-anchor="start" x="8" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConvergenceAccelerator()</text>
<text text-anchor="start" x="8" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ConvergenceAccelerator()</text>
<text text-anchor="start" x="8" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="8" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeNonLinearIteration()</text>
<text text-anchor="start" x="8" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateSolution()</text>
<text text-anchor="start" x="8" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeNonLinearIteration()</text>
<text text-anchor="start" x="8" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Finalize()</text>
<text text-anchor="start" x="8" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="8" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="8" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetEchoLevel()</text>
<text text-anchor="start" x="8" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsBlockNewton()</text>
<text text-anchor="start" x="8" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeJacobianApproximation()</text>
<text text-anchor="start" x="8" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetInverseJacobianApproximation()</text>
<text text-anchor="start" x="8" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetProblemSize()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M104,-293.05C104,-284.04 104,-275.19 104,-266.57"/>
<polygon fill="none" stroke="midnightblue" points="100.5,-293.28 104,-303.28 107.5,-293.28 100.5,-293.28"/>
</g>
</g>
</svg>
