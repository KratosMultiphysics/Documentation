<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::EigensolverStrategy&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt; Pages: 1 -->
<!--zoomable 2631 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 374;
var viewHeight = 2631;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::EigensolverStrategy&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Strategy for solving generalized eigenvalue problems.">
<polygon fill="#bfbfbf" stroke="black" points="89.5,-0.5 89.5,-1014.5 269.5,-1014.5 269.5,-0.5 89.5,-0.5"/>
<text text-anchor="start" x="97.5" y="-1002.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::EigensolverStrategy</text>
<text text-anchor="start" x="97.5" y="-991.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="179.5" y="-980.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="89.5,-973.5 269.5,-973.5 "/>
<text text-anchor="middle" x="179.5" y="-961.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="89.5,-954.5 269.5,-954.5 "/>
<text text-anchor="start" x="97.5" y="-942.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EigensolverStrategy()</text>
<text text-anchor="start" x="97.5" y="-931.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EigensolverStrategy()</text>
<text text-anchor="start" x="97.5" y="-920.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~EigensolverStrategy()</text>
<text text-anchor="start" x="97.5" y="-909.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EigensolverStrategy()</text>
<text text-anchor="start" x="97.5" y="-898.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EigensolverStrategy()</text>
<text text-anchor="start" x="97.5" y="-887.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~EigensolverStrategy()</text>
<text text-anchor="start" x="97.5" y="-876.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="97.5" y="-865.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="97.5" y="-854.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="97.5" y="-843.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="97.5" y="-832.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetIsInitialized()</text>
<text text-anchor="start" x="97.5" y="-821.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetIsInitialized()</text>
<text text-anchor="start" x="97.5" y="-810.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="97.5" y="-799.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetScheme()</text>
<text text-anchor="start" x="97.5" y="-788.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBuilderAndSolver()</text>
<text text-anchor="start" x="97.5" y="-777.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetBuilderAndSolver()</text>
<text text-anchor="start" x="97.5" y="-766.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 13 more...</text>
<text text-anchor="start" x="97.5" y="-755.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="97.5" y="-744.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="97.5" y="-733.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetScheme()</text>
<text text-anchor="start" x="97.5" y="-722.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBuilderAndSolver()</text>
<text text-anchor="start" x="97.5" y="-711.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetBuilderAndSolver()</text>
<text text-anchor="start" x="97.5" y="-700.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMassMatrix()</text>
<text text-anchor="start" x="97.5" y="-689.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetStiffnessMatrix()</text>
<text text-anchor="start" x="97.5" y="-678.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetMassMatrix()</text>
<text text-anchor="start" x="97.5" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetStiffnessMatrix()</text>
<text text-anchor="start" x="97.5" y="-656.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Initialize()</text>
<text text-anchor="start" x="97.5" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="97.5" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="97.5" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverType</text>
<text text-anchor="start" x="97.5" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="97.5" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseVectorType</text>
<text text-anchor="start" x="97.5" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="97.5" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="97.5" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseVectorPointerType</text>
<text text-anchor="start" x="97.5" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixPointerType</text>
<text text-anchor="start" x="97.5" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixType</text>
<text text-anchor="start" x="97.5" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 13 more...</text>
<text text-anchor="start" x="97.5" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="97.5" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="97.5" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpMassMatrix</text>
<text text-anchor="start" x="97.5" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpStiffnessMatrix</text>
<text text-anchor="start" x="97.5" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mComputeModalContribution</text>
<text text-anchor="start" x="97.5" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="97.5" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="97.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="97.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMassMatrixDiagonalValue</text>
<text text-anchor="start" x="97.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mStiffnessMatrixDiagonal</text>
<text text-anchor="start" x="97.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">Value</text>
<text text-anchor="start" x="97.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mComputeModalDecompostion</text>
<text text-anchor="start" x="97.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EigensolverStrategy()</text>
<text text-anchor="start" x="97.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EigensolverStrategy()</text>
<text text-anchor="start" x="97.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~EigensolverStrategy()</text>
<text text-anchor="start" x="97.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EigensolverStrategy()</text>
<text text-anchor="start" x="97.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EigensolverStrategy()</text>
<text text-anchor="start" x="97.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~EigensolverStrategy()</text>
<text text-anchor="start" x="97.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="97.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="97.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="97.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="97.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetIsInitialized()</text>
<text text-anchor="start" x="97.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetIsInitialized()</text>
<text text-anchor="start" x="97.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="97.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetScheme()</text>
<text text-anchor="start" x="97.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="97.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetBuilderAndSolver()</text>
<text text-anchor="start" x="97.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 13 more...</text>
<text text-anchor="start" x="97.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="97.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="97.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetScheme()</text>
<text text-anchor="start" x="97.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="97.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetBuilderAndSolver()</text>
<text text-anchor="start" x="97.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMassMatrix()</text>
<text text-anchor="start" x="97.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetStiffnessMatrix()</text>
<text text-anchor="start" x="97.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetMassMatrix()</text>
<text text-anchor="start" x="97.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetStiffnessMatrix()</text>
<text text-anchor="start" x="97.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="97.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSystemMatrices()</text>
<text text-anchor="start" x="97.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSystemDofs()</text>
<text text-anchor="start" x="97.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ApplyDirichletConditions()</text>
<text text-anchor="start" x="97.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignVariables()</text>
<text text-anchor="start" x="97.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeModalContribution()</text>
<text text-anchor="start" x="97.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReconstructSlaveSolution()</text>
<text text-anchor="start" x="97.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ApplyDirichletConditions()</text>
<text text-anchor="start" x="97.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignVariables()</text>
<text text-anchor="start" x="97.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeModalDecomposition()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d1/d43/class_kratos_1_1_solution_strategy.html" target="_top" xlink:title="Solution strategy base class.">
<polygon fill="none" stroke="black" points="0,-1052.5 0,-1703.5 171,-1703.5 171,-1052.5 0,-1052.5"/>
<text text-anchor="start" x="8" y="-1691.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::SolutionStrategy</text>
<text text-anchor="start" x="8" y="-1680.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="85.5" y="-1669.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="0,-1662.5 171,-1662.5 "/>
<text text-anchor="start" x="8" y="-1650.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<polyline fill="none" stroke="black" points="0,-1643.5 171,-1643.5 "/>
<text text-anchor="start" x="8" y="-1631.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionStrategy()</text>
<text text-anchor="start" x="8" y="-1620.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionStrategy()</text>
<text text-anchor="start" x="8" y="-1609.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SolutionStrategy()</text>
<text text-anchor="start" x="8" y="-1598.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="8" y="-1587.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1576.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1565.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="8" y="-1554.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveIteration()</text>
<text text-anchor="start" x="8" y="-1543.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="8" y="-1532.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="8" y="-1521.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="8" y="-1510.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetEchoLevel()</text>
<text text-anchor="start" x="8" y="-1499.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetOptions()</text>
<text text-anchor="start" x="8" y="-1488.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetOptions()</text>
<text text-anchor="start" x="8" y="-1477.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMaxIterationNumber()</text>
<text text-anchor="start" x="8" y="-1466.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetModelPart()</text>
<text text-anchor="start" x="8" y="-1455.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Initialize()</text>
<text text-anchor="start" x="8" y="-1444.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Predict()</text>
<text text-anchor="start" x="8" y="-1433.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Update()</text>
<text text-anchor="start" x="8" y="-1422.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Finalize()</text>
<text text-anchor="start" x="8" y="-1411.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="8" y="-1400.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="8" y="-1389.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixType</text>
<text text-anchor="start" x="8" y="-1378.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="8" y="-1367.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixPointerType</text>
<text text-anchor="start" x="8" y="-1356.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorPointerType</text>
<text text-anchor="start" x="8" y="-1345.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="8" y="-1334.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverType</text>
<text text-anchor="start" x="8" y="-1323.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-1312.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-1301.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="8" y="-1290.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mrModelPart</text>
<text text-anchor="start" x="8" y="-1279.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStrategy()</text>
<text text-anchor="start" x="8" y="-1268.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStrategy()</text>
<text text-anchor="start" x="8" y="-1257.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~SolutionStrategy()</text>
<text text-anchor="start" x="8" y="-1246.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="8" y="-1235.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1224.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1213.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="8" y="-1202.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveIteration()</text>
<text text-anchor="start" x="8" y="-1191.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="8" y="-1180.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="8" y="-1169.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="8" y="-1158.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetEchoLevel()</text>
<text text-anchor="start" x="8" y="-1147.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetOptions()</text>
<text text-anchor="start" x="8" y="-1136.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetOptions()</text>
<text text-anchor="start" x="8" y="-1125.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMaxIterationNumber()</text>
<text text-anchor="start" x="8" y="-1114.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetModelPart()</text>
<text text-anchor="start" x="8" y="-1103.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="8" y="-1092.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Predict()</text>
<text text-anchor="start" x="8" y="-1081.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="8" y="-1070.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Finalize()</text>
<text text-anchor="start" x="8" y="-1059.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStrategy()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M121.74,-1042.16C122.72,-1033.1 123.71,-1023.98 124.7,-1014.81"/>
<polygon fill="none" stroke="midnightblue" points="118.23,-1042.05 120.64,-1052.37 125.19,-1042.8 118.23,-1042.05"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="7,-1751.5 7,-2622.5 156,-2622.5 156,-1751.5 7,-1751.5"/>
<text text-anchor="middle" x="81.5" y="-2610.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="7,-2603.5 156,-2603.5 "/>
<text text-anchor="middle" x="81.5" y="-2591.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="7,-2584.5 156,-2584.5 "/>
<text text-anchor="start" x="15" y="-2572.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="15" y="-2561.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="15" y="-2550.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="15" y="-2539.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="15" y="-2528.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="15" y="-2517.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="15" y="-2506.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="15" y="-2495.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="15" y="-2484.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="15" y="-2473.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="15" y="-2462.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="15" y="-2451.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="15" y="-2440.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="15" y="-2429.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="15" y="-2418.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="15" y="-2407.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="15" y="-2396.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="15" y="-2385.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="15" y="-2374.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="15" y="-2363.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="15" y="-2352.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="15" y="-2341.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="15" y="-2330.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="15" y="-2319.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="15" y="-2308.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="15" y="-2297.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="15" y="-2286.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="15" y="-2275.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="15" y="-2264.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="15" y="-2253.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="15" y="-2242.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="15" y="-2231.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="15" y="-2220.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="15" y="-2209.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="15" y="-2198.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="15" y="-2187.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="15" y="-2176.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="15" y="-2165.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="15" y="-2154.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="15" y="-2143.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="15" y="-2132.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="15" y="-2121.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="15" y="-2110.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="15" y="-2099.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="15" y="-2088.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="15" y="-2077.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="15" y="-2066.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="15" y="-2055.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="15" y="-2044.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="15" y="-2033.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="15" y="-2022.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="15" y="-2011.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="15" y="-2000.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="15" y="-1989.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="15" y="-1978.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="15" y="-1967.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="15" y="-1956.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="15" y="-1945.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="15" y="-1934.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="15" y="-1923.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="15" y="-1912.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="15" y="-1901.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="15" y="-1890.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="15" y="-1879.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="15" y="-1868.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="15" y="-1857.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="15" y="-1846.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="15" y="-1835.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="15" y="-1824.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="15" y="-1813.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="15" y="-1802.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="15" y="-1791.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="15" y="-1780.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="15" y="-1769.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="15" y="-1758.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M83.7,-1741.36C83.77,-1728.73 83.83,-1716.16 83.89,-1703.7"/>
<polygon fill="none" stroke="midnightblue" points="80.2,-1741.48 83.65,-1751.5 87.2,-1741.51 80.2,-1741.48"/>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge3" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M83.65,-1751.5C83.71,-1739.6 83.77,-1727.73 83.83,-1715.95"/>
<polygon fill="none" stroke="#404040" points="83.83,-1715.7 79.86,-1709.68 83.89,-1703.7 87.86,-1709.72 83.83,-1715.7"/>
<text text-anchor="middle" x="114" y="-1725" font-family="Helvetica,sans-Serif" font-size="10.00"> #mOptions</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../d8/df2/class_kratos_1_1_implicit_solving_strategy.html" target="_top" xlink:title="Implicit solving strategy base class This is the base class from which we will derive all the implici...">
<polygon fill="none" stroke="black" points="189,-1129.5 189,-1626.5 360,-1626.5 360,-1129.5 189,-1129.5"/>
<text text-anchor="start" x="197" y="-1614.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ImplicitSolvingStrategy</text>
<text text-anchor="start" x="197" y="-1603.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="274.5" y="-1592.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="189,-1585.5 360,-1585.5 "/>
<text text-anchor="start" x="197" y="-1573.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mRebuildLevel</text>
<text text-anchor="start" x="197" y="-1562.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mStiffnessMatrixIsBuilt</text>
<polyline fill="none" stroke="black" points="189,-1555.5 360,-1555.5 "/>
<text text-anchor="start" x="197" y="-1543.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="197" y="-1532.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="197" y="-1521.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="197" y="-1510.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="197" y="-1499.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="197" y="-1488.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetRebuildLevel()</text>
<text text-anchor="start" x="197" y="-1477.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetRebuildLevel()</text>
<text text-anchor="start" x="197" y="-1466.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="197" y="-1455.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="197" y="-1444.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="197" y="-1433.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="197" y="-1422.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="197" y="-1411.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="197" y="-1400.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="197" y="-1389.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="197" y="-1378.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="197" y="-1367.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="197" y="-1356.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="197" y="-1345.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="197" y="-1334.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="197" y="-1323.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="197" y="-1312.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="197" y="-1301.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mRebuildLevel</text>
<text text-anchor="start" x="197" y="-1290.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mStiffnessMatrixIsBuilt</text>
<text text-anchor="start" x="197" y="-1279.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="197" y="-1268.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="197" y="-1257.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="197" y="-1246.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="197" y="-1235.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="197" y="-1224.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="197" y="-1213.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="197" y="-1202.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetRebuildLevel()</text>
<text text-anchor="start" x="197" y="-1191.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetRebuildLevel()</text>
<text text-anchor="start" x="197" y="-1180.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="197" y="-1169.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="197" y="-1158.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="197" y="-1147.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="197" y="-1136.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node1 -->
<g id="edge4" class="edge">
<title>Node4&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M246.28,-1118.97C242.62,-1085.56 238.78,-1050.47 234.87,-1014.71"/>
<polygon fill="none" stroke="midnightblue" points="242.84,-1119.72 247.4,-1129.29 249.8,-1118.96 242.84,-1119.72"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../de/d0a/class_kratos_1_1_solving_strategy.html" target="_top" xlink:title="Solving strategy base class This is the base class from which we will derive all the strategies (impl...">
<polygon fill="none" stroke="black" points="183.5,-1894.5 183.5,-2479.5 365.5,-2479.5 365.5,-1894.5 183.5,-1894.5"/>
<text text-anchor="start" x="191.5" y="-2467.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::SolvingStrategy</text>
<text text-anchor="middle" x="274.5" y="-2456.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace &gt;</text>
<polyline fill="none" stroke="black" points="183.5,-2449.5 365.5,-2449.5 "/>
<text text-anchor="start" x="191.5" y="-2437.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<polyline fill="none" stroke="black" points="183.5,-2430.5 365.5,-2430.5 "/>
<text text-anchor="start" x="191.5" y="-2418.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolvingStrategy()</text>
<text text-anchor="start" x="191.5" y="-2407.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolvingStrategy()</text>
<text text-anchor="start" x="191.5" y="-2396.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolvingStrategy()</text>
<text text-anchor="start" x="191.5" y="-2385.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SolvingStrategy()</text>
<text text-anchor="start" x="191.5" y="-2374.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="191.5" y="-2363.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="191.5" y="-2352.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="191.5" y="-2341.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ValidateAndAssignParameters()</text>
<text text-anchor="start" x="191.5" y="-2330.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="191.5" y="-2319.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="191.5" y="-2308.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="191.5" y="-2297.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="191.5" y="-2286.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="191.5" y="-2275.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="191.5" y="-2264.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="191.5" y="-2253.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="191.5" y="-2242.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="191.5" y="-2231.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDofType</text>
<text text-anchor="start" x="191.5" y="-2220.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="191.5" y="-2209.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodesArrayType</text>
<text text-anchor="start" x="191.5" y="-2198.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementsArrayType</text>
<text text-anchor="start" x="191.5" y="-2187.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConditionsArrayType</text>
<text text-anchor="start" x="191.5" y="-2176.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="191.5" y="-2165.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="191.5" y="-2154.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="191.5" y="-2143.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpModelPart</text>
<text text-anchor="start" x="191.5" y="-2132.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMoveMeshFlag</text>
<text text-anchor="start" x="191.5" y="-2121.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
<text text-anchor="start" x="191.5" y="-2110.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
<text text-anchor="start" x="191.5" y="-2099.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
<text text-anchor="start" x="191.5" y="-2088.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~SolvingStrategy()</text>
<text text-anchor="start" x="191.5" y="-2077.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="191.5" y="-2066.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Predict()</text>
<text text-anchor="start" x="191.5" y="-2055.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="191.5" y="-2044.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="191.5" y="-2033.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="191.5" y="-2022.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsConverged()</text>
<text text-anchor="start" x="191.5" y="-2011.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateOutputData()</text>
<text text-anchor="start" x="191.5" y="-2000.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="191.5" y="-1989.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="191.5" y="-1978.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="191.5" y="-1967.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 17 more...</text>
<text text-anchor="start" x="191.5" y="-1956.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="191.5" y="-1945.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="191.5" y="-1934.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="191.5" y="-1923.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ValidateAndAssignParameters()</text>
<text text-anchor="start" x="191.5" y="-1912.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="191.5" y="-1901.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge5" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M274.5,-1884.32C274.5,-1799.44 274.5,-1708.14 274.5,-1626.8"/>
<polygon fill="none" stroke="midnightblue" points="271,-1884.37 274.5,-1894.37 278,-1884.37 271,-1884.37"/>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_eigensolver_strategy__coll__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
