<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::GlobalPetrovGalerkinROMBuilderAndSolver&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt; Pages: 1 -->
<!--zoomable 4525 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 457;
var viewHeight = 4525;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::GlobalPetrovGalerkinROMBuilderAndSolver&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="This class provides an implementation for the GlobalPetrovGalerkinROM builder and solver operations....">
<polygon fill="#bfbfbf" stroke="black" points="6.5,-0.5 6.5,-552.5 212.5,-552.5 212.5,-0.5 6.5,-0.5"/>
<text text-anchor="start" x="14.5" y="-540.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::GlobalPetrovGalerkin</text>
<text text-anchor="start" x="14.5" y="-529.5" font-family="Helvetica,sans-Serif" font-size="10.00">ROMBuilderAndSolver&lt; TSparseSpace,</text>
<text text-anchor="middle" x="109.5" y="-518.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="6.5,-511.5 212.5,-511.5 "/>
<text text-anchor="middle" x="109.5" y="-499.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="6.5,-492.5 212.5,-492.5 "/>
<text text-anchor="start" x="14.5" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GlobalPetrovGalerkinROMBuilder</text>
<text text-anchor="start" x="14.5" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="14.5" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~GlobalPetrovGalerkinROMBuilder</text>
<text text-anchor="start" x="14.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="14.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="14.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="14.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="14.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="14.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="14.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="14.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="14.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseBuilderAndSolverType</text>
<text text-anchor="start" x="14.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="14.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="14.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="14.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="14.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementsArrayType</text>
<text text-anchor="start" x="14.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConditionsArrayType</text>
<text text-anchor="start" x="14.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 9 more...</text>
<text text-anchor="start" x="14.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNumberOfPetrovGalerkinRom</text>
<text text-anchor="start" x="14.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">Modes</text>
<text text-anchor="start" x="14.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEigenRomA</text>
<text text-anchor="start" x="14.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEigenRomB</text>
<text text-anchor="start" x="14.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPhiGlobal</text>
<text text-anchor="start" x="14.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPsiGlobal</text>
<text text-anchor="start" x="14.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mRightRomBasisInitialized</text>
<text text-anchor="start" x="14.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mLeftRomBasisInitialized</text>
<text text-anchor="start" x="14.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSelectedDofs</text>
<text text-anchor="start" x="14.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsSelectedDofsInitialized</text>
<text text-anchor="start" x="14.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GlobalPetrovGalerkinROMBuilder</text>
<text text-anchor="start" x="14.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="14.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~GlobalPetrovGalerkinROMBuilder</text>
<text text-anchor="start" x="14.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="14.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndProjectROM()</text>
<text text-anchor="start" x="14.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetRightROMBasis()</text>
<text text-anchor="start" x="14.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ProjectROM()</text>
<text text-anchor="start" x="14.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildLeftROMBasis()</text>
<text text-anchor="start" x="14.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndSolve()</text>
<text text-anchor="start" x="14.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="14.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="14.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="14.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="14.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="14.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../da/da9/class_kratos_1_1_global_r_o_m_builder_and_solver.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="18.5,-590.5 18.5,-1318.5 200.5,-1318.5 200.5,-590.5 18.5,-590.5"/>
<text text-anchor="start" x="26.5" y="-1306.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::GlobalROMBuilder</text>
<text text-anchor="start" x="26.5" y="-1295.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver&lt; TSparseSpace,</text>
<text text-anchor="middle" x="109.5" y="-1284.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="18.5,-1277.5 200.5,-1277.5 "/>
<text text-anchor="start" x="26.5" y="-1265.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mNodalDofs</text>
<text text-anchor="start" x="26.5" y="-1254.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMapPhi</text>
<text text-anchor="start" x="26.5" y="-1243.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mHromSimulation</text>
<text text-anchor="start" x="26.5" y="-1232.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mHromWeightsInitialized</text>
<text text-anchor="start" x="26.5" y="-1221.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mRightRomBasisInitialized</text>
<polyline fill="none" stroke="black" points="18.5,-1214.5 200.5,-1214.5 "/>
<text text-anchor="start" x="26.5" y="-1202.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GlobalROMBuilderAndSolver()</text>
<text text-anchor="start" x="26.5" y="-1191.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GlobalROMBuilderAndSolver()</text>
<text text-anchor="start" x="26.5" y="-1180.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~GlobalROMBuilderAndSolver()</text>
<text text-anchor="start" x="26.5" y="-1169.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="26.5" y="-1158.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="26.5" y="-1147.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="26.5" y="-1136.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="26.5" y="-1125.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="26.5" y="-1114.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="26.5" y="-1103.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseBuilderAndSolverType</text>
<text text-anchor="start" x="26.5" y="-1092.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="26.5" y="-1081.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="26.5" y="-1070.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="26.5" y="-1059.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="26.5" y="-1048.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="26.5" y="-1037.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="26.5" y="-1026.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 18 more...</text>
<text text-anchor="start" x="26.5" y="-1015.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNodalDofs</text>
<text text-anchor="start" x="26.5" y="-1004.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMapPhi</text>
<text text-anchor="start" x="26.5" y="-993.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mHromSimulation</text>
<text text-anchor="start" x="26.5" y="-982.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mHromWeightsInitialized</text>
<text text-anchor="start" x="26.5" y="-971.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mRightRomBasisInitialized</text>
<text text-anchor="start" x="26.5" y="-960.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNumberOfRomModes</text>
<text text-anchor="start" x="26.5" y="-949.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEigenRomA</text>
<text text-anchor="start" x="26.5" y="-938.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEigenRomB</text>
<text text-anchor="start" x="26.5" y="-927.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPhiGlobal</text>
<text text-anchor="start" x="26.5" y="-916.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMonotonicityPreservingFlag</text>
<text text-anchor="start" x="26.5" y="-905.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GlobalROMBuilderAndSolver()</text>
<text text-anchor="start" x="26.5" y="-894.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GlobalROMBuilderAndSolver()</text>
<text text-anchor="start" x="26.5" y="-883.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~GlobalROMBuilderAndSolver()</text>
<text text-anchor="start" x="26.5" y="-872.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="26.5" y="-861.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpDofSet()</text>
<text text-anchor="start" x="26.5" y="-850.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpSystem()</text>
<text text-anchor="start" x="26.5" y="-839.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetNumberOfROMModes()</text>
<text text-anchor="start" x="26.5" y="-828.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMonotonicityPreserving</text>
<text text-anchor="start" x="26.5" y="-817.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="26.5" y="-806.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ProjectToFineBasis()</text>
<text text-anchor="start" x="26.5" y="-795.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRightROMBasis()</text>
<text text-anchor="start" x="26.5" y="-784.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MonotonicityPreserving()</text>
<text text-anchor="start" x="26.5" y="-773.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="26.5" y="-762.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndSolve()</text>
<text text-anchor="start" x="26.5" y="-751.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResizeAndInitializeVectors()</text>
<text text-anchor="start" x="26.5" y="-740.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="26.5" y="-729.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="26.5" y="-718.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="26.5" y="-707.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="26.5" y="-696.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="26.5" y="-685.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="26.5" y="-674.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeHROMWeights()</text>
<text text-anchor="start" x="26.5" y="-663.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndProjectROM()</text>
<text text-anchor="start" x="26.5" y="-652.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Build()</text>
<text text-anchor="start" x="26.5" y="-641.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ProjectROM()</text>
<text text-anchor="start" x="26.5" y="-630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveROM()</text>
<text text-anchor="start" x="26.5" y="-619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExtractDofSet()</text>
<text text-anchor="start" x="26.5" y="-608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SortAndRemoveDuplicateDofs()</text>
<text text-anchor="start" x="26.5" y="-597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResizeIfNeeded()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M109.5,-580.02C109.5,-570.95 109.5,-561.91 109.5,-552.93"/>
<polygon fill="none" stroke="midnightblue" points="106,-580.27 109.5,-590.27 113,-580.27 106,-580.27"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d9/d26/class_kratos_1_1_residual_based_block_builder_and_solver.html" target="_top" xlink:title="Current class provides an implementation for standard builder and solving operations.">
<polygon fill="none" stroke="black" points="105,-1356.5 105,-2436.5 298,-2436.5 298,-1356.5 105,-1356.5"/>
<text text-anchor="start" x="113" y="-2424.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedBlock</text>
<text text-anchor="start" x="113" y="-2413.5" font-family="Helvetica,sans-Serif" font-size="10.00">BuilderAndSolver&lt; TSparseSpace,</text>
<text text-anchor="middle" x="201.5" y="-2402.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="105,-2395.5 298,-2395.5 "/>
<text text-anchor="start" x="113" y="-2383.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mT</text>
<text text-anchor="start" x="113" y="-2372.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mConstantVector</text>
<text text-anchor="start" x="113" y="-2361.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mSlaveIds</text>
<text text-anchor="start" x="113" y="-2350.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMasterIds</text>
<text text-anchor="start" x="113" y="-2339.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInactiveSlaveDofs</text>
<text text-anchor="start" x="113" y="-2328.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mScaleFactor</text>
<text text-anchor="start" x="113" y="-2317.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mScalingDiagonal</text>
<polyline fill="none" stroke="black" points="105,-2310.5 298,-2310.5 "/>
<text text-anchor="start" x="113" y="-2298.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="113" y="-2287.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="113" y="-2276.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="113" y="-2265.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="113" y="-2254.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="113" y="-2243.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="113" y="-2232.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="113" y="-2221.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="113" y="-2210.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="113" y="-2199.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConstraintRelationMatrix()</text>
<text text-anchor="start" x="113" y="-2188.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConstraintConstantVector()</text>
<text text-anchor="start" x="113" y="-2177.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetScaleFactor()</text>
<text text-anchor="start" x="113" y="-2166.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScaleFactor()</text>
<text text-anchor="start" x="113" y="-2155.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="113" y="-2144.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="113" y="-2133.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="113" y="-2122.5" font-family="Helvetica,sans-Serif" font-size="10.00"># BuildRHSNoDirichlet()</text>
<text text-anchor="start" x="113" y="-2111.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ConstructMasterSlaveConstraints</text>
<text text-anchor="start" x="113" y="-2100.5" font-family="Helvetica,sans-Serif" font-size="10.00">Structure()</text>
<text text-anchor="start" x="113" y="-2089.5" font-family="Helvetica,sans-Serif" font-size="10.00"># BuildMasterSlaveConstraints()</text>
<text text-anchor="start" x="113" y="-2078.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ConstructMatrixStructure()</text>
<text text-anchor="start" x="113" y="-2067.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Assemble()</text>
<text text-anchor="start" x="113" y="-2056.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssembleLHS()</text>
<text text-anchor="start" x="113" y="-2045.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssembleRHS()</text>
<text text-anchor="start" x="113" y="-2034.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssembleRowContribution()</text>
<text text-anchor="start" x="113" y="-2023.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="113" y="-2012.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="113" y="-2001.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="113" y="-1990.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="113" y="-1979.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="113" y="-1968.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="113" y="-1957.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="113" y="-1946.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="113" y="-1935.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="113" y="-1924.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="113" y="-1913.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="113" y="-1902.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 15 more...</text>
<text text-anchor="start" x="113" y="-1891.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mT</text>
<text text-anchor="start" x="113" y="-1880.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mConstantVector</text>
<text text-anchor="start" x="113" y="-1869.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSlaveIds</text>
<text text-anchor="start" x="113" y="-1858.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMasterIds</text>
<text text-anchor="start" x="113" y="-1847.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInactiveSlaveDofs</text>
<text text-anchor="start" x="113" y="-1836.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mScaleFactor</text>
<text text-anchor="start" x="113" y="-1825.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mScalingDiagonal</text>
<text text-anchor="start" x="113" y="-1814.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="113" y="-1803.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="113" y="-1792.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="113" y="-1781.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="113" y="-1770.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="113" y="-1759.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="113" y="-1748.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="113" y="-1737.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="113" y="-1726.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="113" y="-1715.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Build()</text>
<text text-anchor="start" x="113" y="-1704.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildLHS()</text>
<text text-anchor="start" x="113" y="-1693.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildLHS_CompleteOnFreeRows()</text>
<text text-anchor="start" x="113" y="-1682.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemSolve()</text>
<text text-anchor="start" x="113" y="-1671.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemSolveWithPhysics()</text>
<text text-anchor="start" x="113" y="-1660.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InternalSystemSolveWithPhysics()</text>
<text text-anchor="start" x="113" y="-1649.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndSolve()</text>
<text text-anchor="start" x="113" y="-1638.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndSolveLinearizedOn</text>
<text text-anchor="start" x="113" y="-1627.5" font-family="Helvetica,sans-Serif" font-size="10.00">PreviousIteration()</text>
<text text-anchor="start" x="113" y="-1616.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHSAndSolve()</text>
<text text-anchor="start" x="113" y="-1605.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHS()</text>
<text text-anchor="start" x="113" y="-1594.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 11 more...</text>
<text text-anchor="start" x="113" y="-1583.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConstraintRelationMatrix()</text>
<text text-anchor="start" x="113" y="-1572.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConstraintConstantVector()</text>
<text text-anchor="start" x="113" y="-1561.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetScaleFactor()</text>
<text text-anchor="start" x="113" y="-1550.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScaleFactor()</text>
<text text-anchor="start" x="113" y="-1539.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="113" y="-1528.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="113" y="-1517.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="113" y="-1506.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHSNoDirichlet()</text>
<text text-anchor="start" x="113" y="-1495.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstructMasterSlaveConstraints</text>
<text text-anchor="start" x="113" y="-1484.5" font-family="Helvetica,sans-Serif" font-size="10.00">Structure()</text>
<text text-anchor="start" x="113" y="-1473.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildMasterSlaveConstraints()</text>
<text text-anchor="start" x="113" y="-1462.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstructMatrixStructure()</text>
<text text-anchor="start" x="113" y="-1451.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Assemble()</text>
<text text-anchor="start" x="113" y="-1440.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleLHS()</text>
<text text-anchor="start" x="113" y="-1429.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleRHS()</text>
<text text-anchor="start" x="113" y="-1418.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleRowContribution()</text>
<text text-anchor="start" x="113" y="-1407.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="113" y="-1396.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddUnique()</text>
<text text-anchor="start" x="113" y="-1385.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CreatePartition()</text>
<text text-anchor="start" x="113" y="-1374.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ForwardFind()</text>
<text text-anchor="start" x="113" y="-1363.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BackwardFind()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M147.74,-1346.17C146.83,-1336.94 145.93,-1327.76 145.04,-1318.64"/>
<polygon fill="none" stroke="midnightblue" points="144.26,-1346.58 148.72,-1356.19 151.23,-1345.9 144.26,-1346.58"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../d2/d88/class_kratos_1_1_builder_and_solver.html" target="_top" xlink:title="Current class provides an implementation for the base builder and solving operations.">
<polygon fill="none" stroke="black" points="99.5,-2550.5 99.5,-3311.5 281.5,-3311.5 281.5,-2550.5 99.5,-2550.5"/>
<text text-anchor="start" x="107.5" y="-3299.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::BuilderAndSolver</text>
<text text-anchor="start" x="107.5" y="-3288.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="190.5" y="-3277.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="99.5,-3270.5 281.5,-3270.5 "/>
<text text-anchor="start" x="107.5" y="-3258.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpLinearSystemSolver</text>
<text text-anchor="start" x="107.5" y="-3247.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mReshapeMatrixFlag</text>
<text text-anchor="start" x="107.5" y="-3236.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mDofSetIsInitialized</text>
<text text-anchor="start" x="107.5" y="-3225.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCalculateReactionsFlag</text>
<text text-anchor="start" x="107.5" y="-3214.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEquationSystemSize</text>
<text text-anchor="start" x="107.5" y="-3203.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<text text-anchor="start" x="107.5" y="-3192.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpReactionsVector</text>
<polyline fill="none" stroke="black" points="99.5,-3185.5 281.5,-3185.5 "/>
<text text-anchor="start" x="107.5" y="-3173.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-3162.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-3151.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-3140.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-3129.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="107.5" y="-3118.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="107.5" y="-3107.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetEchoLevel()</text>
<text text-anchor="start" x="107.5" y="-3096.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConstraintRelationMatrix()</text>
<text text-anchor="start" x="107.5" y="-3085.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConstraintConstantVector()</text>
<text text-anchor="start" x="107.5" y="-3074.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="107.5" y="-3063.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="107.5" y="-3052.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="107.5" y="-3041.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ValidateAndAssignParameters()</text>
<text text-anchor="start" x="107.5" y="-3030.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="107.5" y="-3019.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="107.5" y="-3008.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="107.5" y="-2997.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="107.5" y="-2986.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="107.5" y="-2975.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="107.5" y="-2964.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="107.5" y="-2953.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="107.5" y="-2942.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="107.5" y="-2931.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="107.5" y="-2920.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="107.5" y="-2909.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="107.5" y="-2898.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpLinearSystemSolver</text>
<text text-anchor="start" x="107.5" y="-2887.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReshapeMatrixFlag</text>
<text text-anchor="start" x="107.5" y="-2876.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mDofSetIsInitialized</text>
<text text-anchor="start" x="107.5" y="-2865.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="107.5" y="-2854.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEquationSystemSize</text>
<text text-anchor="start" x="107.5" y="-2843.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="107.5" y="-2832.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpReactionsVector</text>
<text text-anchor="start" x="107.5" y="-2821.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-2810.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-2799.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-2788.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-2777.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="107.5" y="-2766.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetCalculateReactionsFlag()</text>
<text text-anchor="start" x="107.5" y="-2755.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="107.5" y="-2744.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDofSetIsInitializedFlag()</text>
<text text-anchor="start" x="107.5" y="-2733.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDofSetIsInitializedFlag()</text>
<text text-anchor="start" x="107.5" y="-2722.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetReshapeMatrixFlag()</text>
<text text-anchor="start" x="107.5" y="-2711.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetReshapeMatrixFlag()</text>
<text text-anchor="start" x="107.5" y="-2700.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetEquationSystemSize()</text>
<text text-anchor="start" x="107.5" y="-2689.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetLinearSystemSolver()</text>
<text text-anchor="start" x="107.5" y="-2678.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetLinearSystemSolver()</text>
<text text-anchor="start" x="107.5" y="-2667.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildLHS()</text>
<text text-anchor="start" x="107.5" y="-2656.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 25 more...</text>
<text text-anchor="start" x="107.5" y="-2645.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="107.5" y="-2634.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetEchoLevel()</text>
<text text-anchor="start" x="107.5" y="-2623.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConstraintRelationMatrix()</text>
<text text-anchor="start" x="107.5" y="-2612.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConstraintConstantVector()</text>
<text text-anchor="start" x="107.5" y="-2601.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="107.5" y="-2590.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="107.5" y="-2579.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="107.5" y="-2568.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ValidateAndAssignParameters()</text>
<text text-anchor="start" x="107.5" y="-2557.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M194.65,-2540.28C195.01,-2506.35 195.38,-2471.66 195.75,-2436.82"/>
<polygon fill="none" stroke="midnightblue" points="191.15,-2540.26 194.55,-2550.3 198.15,-2540.34 191.15,-2540.26"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../db/dc6/class_kratos_1_1_pointer_vector_set.html" target="_top" xlink:title="A sorted associative container similar to an STL set, but uses a vector to store pointers to its data...">
<polygon fill="none" stroke="black" points="0,-3414.5 0,-4516.5 175,-4516.5 175,-3414.5 0,-3414.5"/>
<text text-anchor="start" x="8" y="-4504.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::PointerVectorSet</text>
<text text-anchor="start" x="8" y="-4493.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TDataType, TGetKeyType,</text>
<text text-anchor="start" x="8" y="-4482.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TCompareType, TEqualType,</text>
<text text-anchor="middle" x="87.5" y="-4471.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TPointerType, TContainerType &gt;</text>
<polyline fill="none" stroke="black" points="0,-4464.5 175,-4464.5 "/>
<text text-anchor="middle" x="87.5" y="-4452.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-4445.5 175,-4445.5 "/>
<text text-anchor="start" x="8" y="-4433.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-4422.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-4411.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-4400.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-4389.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-4378.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-4367.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="8" y="-4356.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="8" y="-4345.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator==()</text>
<text text-anchor="start" x="8" y="-4334.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator&lt;()</text>
<text text-anchor="start" x="8" y="-4323.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ begin()</text>
<text text-anchor="start" x="8" y="-4312.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ begin()</text>
<text text-anchor="start" x="8" y="-4301.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cbegin()</text>
<text text-anchor="start" x="8" y="-4290.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cbegin()</text>
<text text-anchor="start" x="8" y="-4279.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ end()</text>
<text text-anchor="start" x="8" y="-4268.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ end()</text>
<text text-anchor="start" x="8" y="-4257.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cend()</text>
<text text-anchor="start" x="8" y="-4246.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cend()</text>
<text text-anchor="start" x="8" y="-4235.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ rbegin()</text>
<text text-anchor="start" x="8" y="-4224.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ rbegin()</text>
<text text-anchor="start" x="8" y="-4213.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 33 more...</text>
<text text-anchor="start" x="8" y="-4202.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetContainer()</text>
<text text-anchor="start" x="8" y="-4191.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetContainer()</text>
<text text-anchor="start" x="8" y="-4180.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMaxBufferSize()</text>
<text text-anchor="start" x="8" y="-4169.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetMaxBufferSize()</text>
<text text-anchor="start" x="8" y="-4158.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSortedPartSize()</text>
<text text-anchor="start" x="8" y="-4147.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetSortedPartSize()</text>
<text text-anchor="start" x="8" y="-4136.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ empty()</text>
<text text-anchor="start" x="8" y="-4125.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsSorted()</text>
<text text-anchor="start" x="8" y="-4114.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-4103.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-4092.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-4081.5" font-family="Helvetica,sans-Serif" font-size="10.00">* key_type</text>
<text text-anchor="start" x="8" y="-4070.5" font-family="Helvetica,sans-Serif" font-size="10.00">* data_type</text>
<text text-anchor="start" x="8" y="-4059.5" font-family="Helvetica,sans-Serif" font-size="10.00">* value_type</text>
<text text-anchor="start" x="8" y="-4048.5" font-family="Helvetica,sans-Serif" font-size="10.00">* key_compare</text>
<text text-anchor="start" x="8" y="-4037.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pointer</text>
<text text-anchor="start" x="8" y="-4026.5" font-family="Helvetica,sans-Serif" font-size="10.00">* reference</text>
<text text-anchor="start" x="8" y="-4015.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reference</text>
<text text-anchor="start" x="8" y="-4004.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ContainerType</text>
<text text-anchor="start" x="8" y="-3993.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-3982.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-3971.5" font-family="Helvetica,sans-Serif" font-size="10.00">* iterator</text>
<text text-anchor="start" x="8" y="-3960.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_iterator</text>
<text text-anchor="start" x="8" y="-3949.5" font-family="Helvetica,sans-Serif" font-size="10.00">* reverse_iterator</text>
<text text-anchor="start" x="8" y="-3938.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reverse_iterator</text>
<text text-anchor="start" x="8" y="-3927.5" font-family="Helvetica,sans-Serif" font-size="10.00">* size_type</text>
<text text-anchor="start" x="8" y="-3916.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_iterator</text>
<text text-anchor="start" x="8" y="-3905.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_const_iterator</text>
<text text-anchor="start" x="8" y="-3894.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_reverse_iterator</text>
<text text-anchor="start" x="8" y="-3883.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_const_reverse_iterator</text>
<text text-anchor="start" x="8" y="-3872.5" font-family="Helvetica,sans-Serif" font-size="10.00">* difference_type</text>
<text text-anchor="start" x="8" y="-3861.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mData</text>
<text text-anchor="start" x="8" y="-3850.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSortedPartSize</text>
<text text-anchor="start" x="8" y="-3839.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxBufferSize</text>
<text text-anchor="start" x="8" y="-3828.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="8" y="-3817.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="8" y="-3806.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="8" y="-3795.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-3784.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-3773.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-3762.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-3751.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-3740.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-3729.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="8" y="-3718.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="8" y="-3707.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==()</text>
<text text-anchor="start" x="8" y="-3696.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&lt;()</text>
<text text-anchor="start" x="8" y="-3685.5" font-family="Helvetica,sans-Serif" font-size="10.00">* begin()</text>
<text text-anchor="start" x="8" y="-3674.5" font-family="Helvetica,sans-Serif" font-size="10.00">* begin()</text>
<text text-anchor="start" x="8" y="-3663.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cbegin()</text>
<text text-anchor="start" x="8" y="-3652.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cbegin()</text>
<text text-anchor="start" x="8" y="-3641.5" font-family="Helvetica,sans-Serif" font-size="10.00">* end()</text>
<text text-anchor="start" x="8" y="-3630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* end()</text>
<text text-anchor="start" x="8" y="-3619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cend()</text>
<text text-anchor="start" x="8" y="-3608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cend()</text>
<text text-anchor="start" x="8" y="-3597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* rbegin()</text>
<text text-anchor="start" x="8" y="-3586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* rbegin()</text>
<text text-anchor="start" x="8" y="-3575.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 33 more...</text>
<text text-anchor="start" x="8" y="-3564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetContainer()</text>
<text text-anchor="start" x="8" y="-3553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetContainer()</text>
<text text-anchor="start" x="8" y="-3542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMaxBufferSize()</text>
<text text-anchor="start" x="8" y="-3531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetMaxBufferSize()</text>
<text text-anchor="start" x="8" y="-3520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSortedPartSize()</text>
<text text-anchor="start" x="8" y="-3509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSortedPartSize()</text>
<text text-anchor="start" x="8" y="-3498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* empty()</text>
<text text-anchor="start" x="8" y="-3487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsSorted()</text>
<text text-anchor="start" x="8" y="-3476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-3465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-3454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-3443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyOf()</text>
<text text-anchor="start" x="8" y="-3432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyOf()</text>
<text text-anchor="start" x="8" y="-3421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyOf()</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge6" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M82.46,-3414.38C80.14,-3133.84 77.65,-2787.23 76.5,-2477 74.66,-1978.71 82.49,-1854.12 95.5,-1356 95.72,-1347.67 95.95,-1339.24 96.18,-1330.74"/>
<polygon fill="none" stroke="#404040" points="96.18,-1330.68 92.36,-1324.57 96.52,-1318.68 100.35,-1324.79 96.18,-1330.68"/>
<text text-anchor="middle" x="134" y="-2469" font-family="Helvetica,sans-Serif" font-size="10.00"> #mSelectedConditions</text>
<text text-anchor="middle" x="134" y="-2458" font-family="Helvetica,sans-Serif" font-size="10.00">#mSelectedElements</text>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M142.39,-3414.24C145.43,-3383.8 148.45,-3353.52 151.41,-3323.82"/>
<polygon fill="none" stroke="#404040" points="151.44,-3323.51 148.06,-3317.15 152.63,-3311.57 156.02,-3317.94 151.44,-3323.51"/>
<text text-anchor="middle" x="173" y="-3388" font-family="Helvetica,sans-Serif" font-size="10.00"> #mDofSet</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="300,-2495.5 300,-3366.5 449,-3366.5 449,-2495.5 300,-2495.5"/>
<text text-anchor="middle" x="374.5" y="-3354.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="300,-3347.5 449,-3347.5 "/>
<text text-anchor="middle" x="374.5" y="-3335.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="300,-3328.5 449,-3328.5 "/>
<text text-anchor="start" x="308" y="-3316.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="308" y="-3305.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="308" y="-3294.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="308" y="-3283.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="308" y="-3272.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="308" y="-3261.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="308" y="-3250.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="308" y="-3239.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="308" y="-3228.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="308" y="-3217.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="308" y="-3206.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="308" y="-3195.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="308" y="-3184.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="308" y="-3173.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="308" y="-3162.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="308" y="-3151.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="308" y="-3140.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="308" y="-3129.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="308" y="-3118.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="308" y="-3107.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="308" y="-3096.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="308" y="-3085.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="308" y="-3074.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="308" y="-3063.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="308" y="-3052.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="308" y="-3041.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="308" y="-3030.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="308" y="-3019.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="308" y="-3008.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="308" y="-2997.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="308" y="-2986.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="308" y="-2975.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="308" y="-2964.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="308" y="-2953.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="308" y="-2942.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="308" y="-2931.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="308" y="-2920.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="308" y="-2909.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="308" y="-2898.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="308" y="-2887.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="308" y="-2876.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="308" y="-2865.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="308" y="-2854.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="308" y="-2843.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="308" y="-2832.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="308" y="-2821.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="308" y="-2810.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="308" y="-2799.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="308" y="-2788.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="308" y="-2777.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="308" y="-2766.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="308" y="-2755.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="308" y="-2744.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="308" y="-2733.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="308" y="-2722.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="308" y="-2711.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="308" y="-2700.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="308" y="-2689.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="308" y="-2678.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="308" y="-2667.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="308" y="-2656.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="308" y="-2645.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="308" y="-2634.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="308" y="-2623.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="308" y="-2612.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="308" y="-2601.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="308" y="-2590.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="308" y="-2579.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="308" y="-2568.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="308" y="-2557.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="308" y="-2546.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="308" y="-2535.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="308" y="-2524.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="308" y="-2513.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="308" y="-2502.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node3 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node3</title>
<path fill="none" stroke="#404040" d="M301.7,-2495.49C299.1,-2480.01 296.49,-2464.42 293.87,-2448.79"/>
<polygon fill="none" stroke="#404040" points="293.85,-2448.67 288.91,-2443.41 291.87,-2436.83 296.8,-2442.09 293.85,-2448.67"/>
<text text-anchor="middle" x="328" y="-2463.5" font-family="Helvetica,sans-Serif" font-size="10.00"> #mOptions</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_global_petrov_galerkin_r_o_m_builder_and_solver__coll__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
