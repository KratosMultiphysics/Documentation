<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::StlIO Pages: 1 -->
<!--zoomable 1480 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 360;
var viewHeight = 1480;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::StlIO</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="This class reads from STL file format and creates triangular elements in given model_part.">
<polygon fill="#bfbfbf" stroke="black" points="101,-0.5 101,-486.5 253,-486.5 253,-0.5 101,-0.5"/>
<text text-anchor="middle" x="177" y="-474.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::StlIO</text>
<polyline fill="none" stroke="black" points="101,-467.5 253,-467.5 "/>
<text text-anchor="start" x="109" y="-455.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mNextNodeId</text>
<text text-anchor="start" x="109" y="-444.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mNextElementId</text>
<text text-anchor="start" x="109" y="-433.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mNextConditionId</text>
<polyline fill="none" stroke="black" points="101,-426.5 253,-426.5 "/>
<text text-anchor="start" x="109" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ StlIO()</text>
<text text-anchor="start" x="109" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ StlIO()</text>
<text text-anchor="start" x="109" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~StlIO()</text>
<text text-anchor="start" x="109" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="109" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="109" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="109" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GeometriesMapType</text>
<text text-anchor="start" x="109" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodesArrayType</text>
<text text-anchor="start" x="109" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="109" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="109" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="109" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNextNodeId</text>
<text text-anchor="start" x="109" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNextElementId</text>
<text text-anchor="start" x="109" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNextConditionId</text>
<text text-anchor="start" x="109" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpInputStream</text>
<text text-anchor="start" x="109" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mOptions</text>
<text text-anchor="start" x="109" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StlIO()</text>
<text text-anchor="start" x="109" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StlIO()</text>
<text text-anchor="start" x="109" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~StlIO()</text>
<text text-anchor="start" x="109" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadModelPart()</text>
<text text-anchor="start" x="109" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* WriteModelPart()</text>
<text text-anchor="start" x="109" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="109" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="109" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="109" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="109" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadSolid()</text>
<text text-anchor="start" x="109" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadFacet()</text>
<text text-anchor="start" x="109" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadLoop()</text>
<text text-anchor="start" x="109" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadPoint()</text>
<text text-anchor="start" x="109" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadKeyword()</text>
<text text-anchor="start" x="109" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* WriteEntityBlock()</text>
<text text-anchor="start" x="109" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* WriteGeometryBlock()</text>
<text text-anchor="start" x="109" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* WriteEntityBlockMPI()</text>
<text text-anchor="start" x="109" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* WriteGeometryBlockMPI()</text>
<text text-anchor="start" x="109" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* WriteFacet()</text>
<text text-anchor="start" x="109" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsValidGeometry()</text>
<text text-anchor="start" x="109" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="109" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StlIO()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d2/d4d/class_kratos_1_1_i_o.html" target="_top" xlink:title="IO provides different implementation of input output procedures which can be used to read and write w...">
<polygon fill="none" stroke="black" points="0,-721.5 0,-1284.5 170,-1284.5 170,-721.5 0,-721.5"/>
<text text-anchor="middle" x="85" y="-1272.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::IO</text>
<polyline fill="none" stroke="black" points="0,-1265.5 170,-1265.5 "/>
<text text-anchor="middle" x="85" y="-1253.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-1246.5 170,-1246.5 "/>
<text text-anchor="start" x="8" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IO()</text>
<text text-anchor="start" x="8" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~IO()</text>
<text text-anchor="start" x="8" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IO()</text>
<text text-anchor="start" x="8" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ReadNode()</text>
<text text-anchor="start" x="8" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ReadNodes()</text>
<text text-anchor="start" x="8" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ReadNodesNumber()</text>
<text text-anchor="start" x="8" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ WriteNodes()</text>
<text text-anchor="start" x="8" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ReadProperties()</text>
<text text-anchor="start" x="8" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ReadProperties()</text>
<text text-anchor="start" x="8" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ WriteProperties()</text>
<text text-anchor="start" x="8" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ WriteProperties()</text>
<text text-anchor="start" x="8" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ReadGeometry()</text>
<text text-anchor="start" x="8" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ReadGeometries()</text>
<text text-anchor="start" x="8" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 27 more...</text>
<text text-anchor="start" x="8" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="8" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GeometryType</text>
<text text-anchor="start" x="8" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MeshType</text>
<text text-anchor="start" x="8" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodesContainerType</text>
<text text-anchor="start" x="8" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PropertiesContainerType</text>
<text text-anchor="start" x="8" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GeometryContainerType</text>
<text text-anchor="start" x="8" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementsContainerType</text>
<text text-anchor="start" x="8" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConditionsContainerType</text>
<text text-anchor="start" x="8" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConnectivitiesContainerType</text>
<text text-anchor="start" x="8" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PartitionIndicesContainerType</text>
<text text-anchor="start" x="8" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 11 more...</text>
<text text-anchor="start" x="8" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IO()</text>
<text text-anchor="start" x="8" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~IO()</text>
<text text-anchor="start" x="8" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IO()</text>
<text text-anchor="start" x="8" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadNode()</text>
<text text-anchor="start" x="8" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadNodes()</text>
<text text-anchor="start" x="8" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadNodesNumber()</text>
<text text-anchor="start" x="8" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">* WriteNodes()</text>
<text text-anchor="start" x="8" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadProperties()</text>
<text text-anchor="start" x="8" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadProperties()</text>
<text text-anchor="start" x="8" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">* WriteProperties()</text>
<text text-anchor="start" x="8" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">* WriteProperties()</text>
<text text-anchor="start" x="8" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadGeometry()</text>
<text text-anchor="start" x="8" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadGeometries()</text>
<text text-anchor="start" x="8" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 27 more...</text>
<text text-anchor="start" x="8" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M120.3,-711.31C129.32,-637.1 138.91,-558.11 147.59,-486.63"/>
<polygon fill="none" stroke="midnightblue" points="116.83,-710.93 119.09,-721.28 123.77,-711.78 116.83,-710.93"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../dd/da0/class_kratos_1_1_parameters.html" target="_top" xlink:title="This class provides to Kratos a data structure for I/O based on the standard of JSON.">
<polygon fill="none" stroke="black" points="188.5,-534.5 188.5,-1471.5 351.5,-1471.5 351.5,-534.5 188.5,-534.5"/>
<text text-anchor="middle" x="270" y="-1459.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Parameters</text>
<polyline fill="none" stroke="black" points="188.5,-1452.5 351.5,-1452.5 "/>
<text text-anchor="middle" x="270" y="-1440.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="188.5,-1433.5 351.5,-1433.5 "/>
<text text-anchor="start" x="196.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="196.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Parameters()</text>
<text text-anchor="start" x="196.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Parameters()</text>
<text text-anchor="start" x="196.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Parameters()</text>
<text text-anchor="start" x="196.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Parameters()</text>
<text text-anchor="start" x="196.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Parameters()</text>
<text text-anchor="start" x="196.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~Parameters()</text>
<text text-anchor="start" x="196.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="196.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="196.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="196.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="196.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="196.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="196.5" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="196.5" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ WriteJsonString()</text>
<text text-anchor="start" x="196.5" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrettyPrintJsonString()</text>
<text text-anchor="start" x="196.5" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="196.5" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="196.5" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="196.5" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AddValue()</text>
<text text-anchor="start" x="196.5" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AddEmptyValue()</text>
<text text-anchor="start" x="196.5" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ RemoveValue()</text>
<text text-anchor="start" x="196.5" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ RemoveValues()</text>
<text text-anchor="start" x="196.5" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 66 more...</text>
<text text-anchor="start" x="196.5" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="196.5" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="196.5" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="196.5" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="196.5" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="196.5" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">* iterator</text>
<text text-anchor="start" x="196.5" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_iterator</text>
<text text-anchor="start" x="196.5" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">* json_iterator</text>
<text text-anchor="start" x="196.5" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">* json_const_iterator</text>
<text text-anchor="start" x="196.5" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">* json_iteration_proxy</text>
<text text-anchor="start" x="196.5" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">* json_const_iteration</text>
<text text-anchor="start" x="196.5" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">_proxy</text>
<text text-anchor="start" x="196.5" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="196.5" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="196.5" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="196.5" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="196.5" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="196.5" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpValue</text>
<text text-anchor="start" x="196.5" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpRoot</text>
<text text-anchor="start" x="196.5" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Parameters()</text>
<text text-anchor="start" x="196.5" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Parameters()</text>
<text text-anchor="start" x="196.5" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Parameters()</text>
<text text-anchor="start" x="196.5" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Parameters()</text>
<text text-anchor="start" x="196.5" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Parameters()</text>
<text text-anchor="start" x="196.5" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Parameters()</text>
<text text-anchor="start" x="196.5" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="196.5" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="196.5" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="196.5" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="196.5" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="196.5" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="196.5" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="196.5" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">* WriteJsonString()</text>
<text text-anchor="start" x="196.5" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrettyPrintJsonString()</text>
<text text-anchor="start" x="196.5" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="196.5" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="196.5" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="196.5" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddValue()</text>
<text text-anchor="start" x="196.5" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddEmptyValue()</text>
<text text-anchor="start" x="196.5" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RemoveValue()</text>
<text text-anchor="start" x="196.5" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RemoveValues()</text>
<text text-anchor="start" x="196.5" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 66 more...</text>
<text text-anchor="start" x="196.5" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="196.5" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="196.5" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="196.5" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Parameters()</text>
<text text-anchor="start" x="196.5" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Parameters()</text>
<text text-anchor="start" x="196.5" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Parameters()</text>
<text text-anchor="start" x="196.5" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetUnderlyingStorage()</text>
<text text-anchor="start" x="196.5" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetUnderlyingStorage()</text>
<text text-anchor="start" x="196.5" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUnderlyingSotrage()</text>
<text text-anchor="start" x="196.5" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetUnderlyingRootStorage()</text>
<text text-anchor="start" x="196.5" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetUnderlyingRootStorage()</text>
<text text-anchor="start" x="196.5" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUnderlyingRootStorage()</text>
<text text-anchor="start" x="196.5" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InternalSetValue()</text>
<text text-anchor="start" x="196.5" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveIncludes()</text>
<text text-anchor="start" x="196.5" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadFile()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M212.59,-534.39C211.12,-522.44 209.67,-510.62 208.24,-498.97"/>
<polygon fill="none" stroke="#404040" points="208.22,-498.81 203.52,-493.34 206.76,-486.9 211.46,-492.36 208.22,-498.81"/>
<text text-anchor="middle" x="248.5" y="-508" font-family="Helvetica,sans-Serif" font-size="10.00"> #mParameters</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_stl_i_o__coll__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
