<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::BaseMortarConvergenceCriteria&lt; TSparseSpace, TDenseSpace &gt; Pages: 1 -->
<svg width="369pt" height="1469pt"
 viewBox="0.00 0.00 368.50 1469.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1465)">
<title>Kratos::BaseMortarConvergenceCriteria&lt; TSparseSpace, TDenseSpace &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Custom convergence criteria for the mortar condition.">
<polygon fill="#bfbfbf" stroke="black" points="83.5,-0.5 83.5,-541.5 298.5,-541.5 298.5,-0.5 83.5,-0.5"/>
<text text-anchor="start" x="91.5" y="-529.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::BaseMortarConvergence</text>
<text text-anchor="middle" x="191" y="-518.5" font-family="Helvetica,sans-Serif" font-size="10.00">Criteria&lt; TSparseSpace, TDenseSpace &gt;</text>
<polyline fill="none" stroke="black" points="83.5,-511.5 298.5,-511.5 "/>
<text text-anchor="middle" x="191" y="-499.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="83.5,-492.5 298.5,-492.5 "/>
<text text-anchor="start" x="91.5" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BaseMortarConvergenceCriteria()</text>
<text text-anchor="start" x="91.5" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BaseMortarConvergenceCriteria()</text>
<text text-anchor="start" x="91.5" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BaseMortarConvergenceCriteria()</text>
<text text-anchor="start" x="91.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~BaseMortarConvergenceCriteria()</text>
<text text-anchor="start" x="91.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="91.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="91.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="91.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="91.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ResetWeightedGap()</text>
<text text-anchor="start" x="91.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="91.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="91.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="91.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="91.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="91.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GidIOBaseType</text>
<text text-anchor="start" x="91.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="91.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="91.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="91.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="91.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="91.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="91.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="91.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="91.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpIO</text>
<text text-anchor="start" x="91.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseMortarConvergenceCriteria()</text>
<text text-anchor="start" x="91.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseMortarConvergenceCriteria()</text>
<text text-anchor="start" x="91.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseMortarConvergenceCriteria()</text>
<text text-anchor="start" x="91.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~BaseMortarConvergenceCriteria()</text>
<text text-anchor="start" x="91.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="91.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PreCriteria()</text>
<text text-anchor="start" x="91.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PostCriteria()</text>
<text text-anchor="start" x="91.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="91.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="91.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="91.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeNonLinearIteration()</text>
<text text-anchor="start" x="91.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="91.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="91.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="91.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="91.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="91.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="91.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResetWeightedGap()</text>
<text text-anchor="start" x="91.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeNodesMeanNormalModel</text>
<text text-anchor="start" x="91.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">PartWithPairedNormal()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d3/d80/class_kratos_1_1_convergence_criteria.html" target="_top" xlink:title="This is the base class to define the different convergence criterion considered.">
<polygon fill="none" stroke="black" points="0,-760 0,-1290 194,-1290 194,-760 0,-760"/>
<text text-anchor="start" x="8" y="-1278" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ConvergenceCriteria</text>
<text text-anchor="middle" x="97" y="-1267" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace &gt;</text>
<polyline fill="none" stroke="black" points="0,-1260 194,-1260 "/>
<text text-anchor="start" x="8" y="-1248" font-family="Helvetica,sans-Serif" font-size="10.00"># mActualizeRHSIsNeeded</text>
<text text-anchor="start" x="8" y="-1237" font-family="Helvetica,sans-Serif" font-size="10.00"># mConvergenceCriteriaIsInitialized</text>
<text text-anchor="start" x="8" y="-1226" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<polyline fill="none" stroke="black" points="0,-1219 194,-1219 "/>
<text text-anchor="start" x="8" y="-1207" font-family="Helvetica,sans-Serif" font-size="10.00">+ ConvergenceCriteria()</text>
<text text-anchor="start" x="8" y="-1196" font-family="Helvetica,sans-Serif" font-size="10.00">+ ConvergenceCriteria()</text>
<text text-anchor="start" x="8" y="-1185" font-family="Helvetica,sans-Serif" font-size="10.00">+ ConvergenceCriteria()</text>
<text text-anchor="start" x="8" y="-1174" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ConvergenceCriteria()</text>
<text text-anchor="start" x="8" y="-1163" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-1152" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-1141" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-1130" font-family="Helvetica,sans-Serif" font-size="10.00"># ValidateAndAssignParameters()</text>
<text text-anchor="start" x="8" y="-1119" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="8" y="-1108" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="8" y="-1097" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="8" y="-1086" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="8" y="-1075" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="8" y="-1064" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="8" y="-1053" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="8" y="-1042" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="8" y="-1031" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-1020" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-1009" font-family="Helvetica,sans-Serif" font-size="10.00">* mActualizeRHSIsNeeded</text>
<text text-anchor="start" x="8" y="-998" font-family="Helvetica,sans-Serif" font-size="10.00">* mConvergenceCriteriaIsInitialized</text>
<text text-anchor="start" x="8" y="-987" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="8" y="-976" font-family="Helvetica,sans-Serif" font-size="10.00">* ConvergenceCriteria()</text>
<text text-anchor="start" x="8" y="-965" font-family="Helvetica,sans-Serif" font-size="10.00">* ConvergenceCriteria()</text>
<text text-anchor="start" x="8" y="-954" font-family="Helvetica,sans-Serif" font-size="10.00">* ConvergenceCriteria()</text>
<text text-anchor="start" x="8" y="-943" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ConvergenceCriteria()</text>
<text text-anchor="start" x="8" y="-932" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="8" y="-921" font-family="Helvetica,sans-Serif" font-size="10.00">* GetRHS_Element_Components()</text>
<text text-anchor="start" x="8" y="-910" font-family="Helvetica,sans-Serif" font-size="10.00">* GetRHS_Element_Variables()</text>
<text text-anchor="start" x="8" y="-899" font-family="Helvetica,sans-Serif" font-size="10.00">* GetRHS_Condition_Components()</text>
<text text-anchor="start" x="8" y="-888" font-family="Helvetica,sans-Serif" font-size="10.00">* GetRHS_Condition_Variables()</text>
<text text-anchor="start" x="8" y="-877" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="8" y="-866" font-family="Helvetica,sans-Serif" font-size="10.00">* GetEchoLevel()</text>
<text text-anchor="start" x="8" y="-855" font-family="Helvetica,sans-Serif" font-size="10.00">* SetActualizeRHSFlag()</text>
<text text-anchor="start" x="8" y="-844" font-family="Helvetica,sans-Serif" font-size="10.00">* GetActualizeRHSflag()</text>
<text text-anchor="start" x="8" y="-833" font-family="Helvetica,sans-Serif" font-size="10.00">* PreCriteria()</text>
<text text-anchor="start" x="8" y="-822" font-family="Helvetica,sans-Serif" font-size="10.00">and 10 more...</text>
<text text-anchor="start" x="8" y="-811" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-800" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-789" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-778" font-family="Helvetica,sans-Serif" font-size="10.00">* ValidateAndAssignParameters()</text>
<text text-anchor="start" x="8" y="-767" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M131.26,-749.95C139.74,-682.1 148.82,-609.45 157.28,-541.79"/>
<polygon fill="none" stroke="midnightblue" points="127.78,-749.57 130.01,-759.93 134.72,-750.44 127.78,-749.57"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="211.5,-589.5 211.5,-1460.5 360.5,-1460.5 360.5,-589.5 211.5,-589.5"/>
<text text-anchor="middle" x="286" y="-1448.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="211.5,-1441.5 360.5,-1441.5 "/>
<text text-anchor="middle" x="286" y="-1429.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="211.5,-1422.5 360.5,-1422.5 "/>
<text text-anchor="start" x="219.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="219.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="219.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="219.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="219.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="219.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="219.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="219.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="219.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="219.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="219.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="219.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="219.5" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="219.5" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="219.5" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="219.5" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="219.5" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="219.5" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="219.5" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="219.5" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="219.5" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="219.5" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="219.5" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="219.5" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="219.5" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="219.5" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="219.5" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="219.5" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="219.5" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="219.5" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="219.5" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="219.5" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="219.5" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="219.5" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="219.5" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="219.5" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="219.5" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="219.5" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="219.5" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="219.5" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="219.5" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="219.5" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="219.5" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="219.5" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="219.5" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="219.5" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="219.5" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="219.5" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="219.5" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="219.5" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="219.5" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="219.5" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="219.5" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="219.5" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="219.5" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="219.5" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="219.5" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="219.5" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="219.5" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="219.5" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="219.5" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="219.5" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="219.5" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="219.5" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="219.5" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="219.5" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="219.5" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="219.5" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="219.5" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="219.5" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="219.5" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="219.5" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="219.5" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="219.5" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="219.5" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M231.08,-589.28C229.57,-577.33 228.07,-565.47 226.59,-553.73"/>
<polygon fill="none" stroke="#404040" points="226.56,-553.45 221.84,-548 225.05,-541.55 229.77,-547 226.56,-553.45"/>
<text text-anchor="middle" x="258.5" y="-563" font-family="Helvetica,sans-Serif" font-size="10.00"> #mOptions</text>
</g>
</g>
</svg>
