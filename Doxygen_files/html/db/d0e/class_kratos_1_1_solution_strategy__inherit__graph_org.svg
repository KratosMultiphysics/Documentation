<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::SolutionStrategy&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt; Pages: 1 -->
<svg width="764pt" height="3687pt"
 viewBox="0.00 0.00 764.00 3687.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 3683)">
<title>Kratos::SolutionStrategy&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Solution strategy base class.">
<polygon fill="#bfbfbf" stroke="black" points="291.5,-2097.5 291.5,-2770.5 462.5,-2770.5 462.5,-2097.5 291.5,-2097.5"/>
<text text-anchor="start" x="299.5" y="-2758.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::SolutionStrategy</text>
<text text-anchor="start" x="299.5" y="-2747.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="377" y="-2736.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="291.5,-2729.5 462.5,-2729.5 "/>
<text text-anchor="start" x="299.5" y="-2717.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mOptions</text>
<text text-anchor="start" x="299.5" y="-2706.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<polyline fill="none" stroke="black" points="291.5,-2699.5 462.5,-2699.5 "/>
<text text-anchor="start" x="299.5" y="-2687.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionStrategy()</text>
<text text-anchor="start" x="299.5" y="-2676.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionStrategy()</text>
<text text-anchor="start" x="299.5" y="-2665.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SolutionStrategy()</text>
<text text-anchor="start" x="299.5" y="-2654.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="299.5" y="-2643.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="299.5" y="-2632.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="299.5" y="-2621.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="299.5" y="-2610.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveIteration()</text>
<text text-anchor="start" x="299.5" y="-2599.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="299.5" y="-2588.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="299.5" y="-2577.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="299.5" y="-2566.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetEchoLevel()</text>
<text text-anchor="start" x="299.5" y="-2555.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetOptions()</text>
<text text-anchor="start" x="299.5" y="-2544.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetOptions()</text>
<text text-anchor="start" x="299.5" y="-2533.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMaxIterationNumber()</text>
<text text-anchor="start" x="299.5" y="-2522.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetModelPart()</text>
<text text-anchor="start" x="299.5" y="-2511.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Initialize()</text>
<text text-anchor="start" x="299.5" y="-2500.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Predict()</text>
<text text-anchor="start" x="299.5" y="-2489.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Update()</text>
<text text-anchor="start" x="299.5" y="-2478.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Finalize()</text>
<text text-anchor="start" x="299.5" y="-2467.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="299.5" y="-2456.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="299.5" y="-2445.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixType</text>
<text text-anchor="start" x="299.5" y="-2434.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="299.5" y="-2423.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixPointerType</text>
<text text-anchor="start" x="299.5" y="-2412.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorPointerType</text>
<text text-anchor="start" x="299.5" y="-2401.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="299.5" y="-2390.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverType</text>
<text text-anchor="start" x="299.5" y="-2379.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="299.5" y="-2368.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="299.5" y="-2357.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mOptions</text>
<text text-anchor="start" x="299.5" y="-2346.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="299.5" y="-2335.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mrModelPart</text>
<text text-anchor="start" x="299.5" y="-2324.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStrategy()</text>
<text text-anchor="start" x="299.5" y="-2313.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStrategy()</text>
<text text-anchor="start" x="299.5" y="-2302.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~SolutionStrategy()</text>
<text text-anchor="start" x="299.5" y="-2291.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="299.5" y="-2280.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="299.5" y="-2269.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="299.5" y="-2258.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="299.5" y="-2247.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveIteration()</text>
<text text-anchor="start" x="299.5" y="-2236.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="299.5" y="-2225.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="299.5" y="-2214.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="299.5" y="-2203.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetEchoLevel()</text>
<text text-anchor="start" x="299.5" y="-2192.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetOptions()</text>
<text text-anchor="start" x="299.5" y="-2181.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetOptions()</text>
<text text-anchor="start" x="299.5" y="-2170.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMaxIterationNumber()</text>
<text text-anchor="start" x="299.5" y="-2159.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetModelPart()</text>
<text text-anchor="start" x="299.5" y="-2148.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="299.5" y="-2137.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Predict()</text>
<text text-anchor="start" x="299.5" y="-2126.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="299.5" y="-2115.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Finalize()</text>
<text text-anchor="start" x="299.5" y="-2104.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStrategy()</text>
</a>
</g>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d1/d90/class_kratos_1_1_eigensolver_strategy.html" target="_top" xlink:title="Strategy for solving generalized eigenvalue problems.">
<polygon fill="none" stroke="black" points="0,-1046.5 0,-2060.5 180,-2060.5 180,-1046.5 0,-1046.5"/>
<text text-anchor="start" x="8" y="-2048.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::EigensolverStrategy</text>
<text text-anchor="start" x="8" y="-2037.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="90" y="-2026.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="0,-2019.5 180,-2019.5 "/>
<text text-anchor="middle" x="90" y="-2007.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-2000.5 180,-2000.5 "/>
<text text-anchor="start" x="8" y="-1988.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EigensolverStrategy()</text>
<text text-anchor="start" x="8" y="-1977.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EigensolverStrategy()</text>
<text text-anchor="start" x="8" y="-1966.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~EigensolverStrategy()</text>
<text text-anchor="start" x="8" y="-1955.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EigensolverStrategy()</text>
<text text-anchor="start" x="8" y="-1944.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ EigensolverStrategy()</text>
<text text-anchor="start" x="8" y="-1933.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~EigensolverStrategy()</text>
<text text-anchor="start" x="8" y="-1922.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1911.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="8" y="-1900.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="8" y="-1889.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="8" y="-1878.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetIsInitialized()</text>
<text text-anchor="start" x="8" y="-1867.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetIsInitialized()</text>
<text text-anchor="start" x="8" y="-1856.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="8" y="-1845.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetScheme()</text>
<text text-anchor="start" x="8" y="-1834.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1823.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetBuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1812.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 13 more...</text>
<text text-anchor="start" x="8" y="-1801.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="8" y="-1790.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="8" y="-1779.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetScheme()</text>
<text text-anchor="start" x="8" y="-1768.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1757.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetBuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1746.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMassMatrix()</text>
<text text-anchor="start" x="8" y="-1735.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetStiffnessMatrix()</text>
<text text-anchor="start" x="8" y="-1724.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetMassMatrix()</text>
<text text-anchor="start" x="8" y="-1713.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetStiffnessMatrix()</text>
<text text-anchor="start" x="8" y="-1702.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Initialize()</text>
<text text-anchor="start" x="8" y="-1691.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="8" y="-1680.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="8" y="-1669.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverType</text>
<text text-anchor="start" x="8" y="-1658.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="8" y="-1647.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseVectorType</text>
<text text-anchor="start" x="8" y="-1636.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="8" y="-1625.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="8" y="-1614.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseVectorPointerType</text>
<text text-anchor="start" x="8" y="-1603.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixPointerType</text>
<text text-anchor="start" x="8" y="-1592.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixType</text>
<text text-anchor="start" x="8" y="-1581.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 13 more...</text>
<text text-anchor="start" x="8" y="-1570.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="8" y="-1559.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="8" y="-1548.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpMassMatrix</text>
<text text-anchor="start" x="8" y="-1537.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpStiffnessMatrix</text>
<text text-anchor="start" x="8" y="-1526.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mComputeModalContribution</text>
<text text-anchor="start" x="8" y="-1515.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="8" y="-1504.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="8" y="-1493.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="8" y="-1482.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMassMatrixDiagonalValue</text>
<text text-anchor="start" x="8" y="-1471.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mStiffnessMatrixDiagonal</text>
<text text-anchor="start" x="8" y="-1460.5" font-family="Helvetica,sans-Serif" font-size="10.00">Value</text>
<text text-anchor="start" x="8" y="-1449.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mComputeModalDecompostion</text>
<text text-anchor="start" x="8" y="-1438.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EigensolverStrategy()</text>
<text text-anchor="start" x="8" y="-1427.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EigensolverStrategy()</text>
<text text-anchor="start" x="8" y="-1416.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~EigensolverStrategy()</text>
<text text-anchor="start" x="8" y="-1405.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EigensolverStrategy()</text>
<text text-anchor="start" x="8" y="-1394.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EigensolverStrategy()</text>
<text text-anchor="start" x="8" y="-1383.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~EigensolverStrategy()</text>
<text text-anchor="start" x="8" y="-1372.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1361.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="8" y="-1350.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="8" y="-1339.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="8" y="-1328.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetIsInitialized()</text>
<text text-anchor="start" x="8" y="-1317.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetIsInitialized()</text>
<text text-anchor="start" x="8" y="-1306.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="8" y="-1295.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetScheme()</text>
<text text-anchor="start" x="8" y="-1284.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1273.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetBuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1262.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 13 more...</text>
<text text-anchor="start" x="8" y="-1251.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="8" y="-1240.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="8" y="-1229.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetScheme()</text>
<text text-anchor="start" x="8" y="-1218.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1207.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetBuilderAndSolver()</text>
<text text-anchor="start" x="8" y="-1196.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMassMatrix()</text>
<text text-anchor="start" x="8" y="-1185.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetStiffnessMatrix()</text>
<text text-anchor="start" x="8" y="-1174.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetMassMatrix()</text>
<text text-anchor="start" x="8" y="-1163.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetStiffnessMatrix()</text>
<text text-anchor="start" x="8" y="-1152.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="8" y="-1141.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSystemMatrices()</text>
<text text-anchor="start" x="8" y="-1130.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSystemDofs()</text>
<text text-anchor="start" x="8" y="-1119.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ApplyDirichletConditions()</text>
<text text-anchor="start" x="8" y="-1108.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignVariables()</text>
<text text-anchor="start" x="8" y="-1097.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeModalContribution()</text>
<text text-anchor="start" x="8" y="-1086.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReconstructSlaveSolution()</text>
<text text-anchor="start" x="8" y="-1075.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ApplyDirichletConditions()</text>
<text text-anchor="start" x="8" y="-1064.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignVariables()</text>
<text text-anchor="start" x="8" y="-1053.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeModalDecomposition()</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node3 -->
<g id="edge2" class="edge">
<title>Node1&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M286.5,-2277.74C251.73,-2212.57 214.34,-2134.87 189,-2061 185.95,-2052.1 182.98,-2043.08 180.09,-2033.96"/>
<polygon fill="none" stroke="midnightblue" points="283.58,-2279.7 291.39,-2286.86 289.75,-2276.39 283.58,-2279.7"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../df/d39/class_kratos_1_1_explicit_solution_strategy.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="198,-1272 198,-1835 368,-1835 368,-1272 198,-1272"/>
<text text-anchor="start" x="206" y="-1823" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ExplicitSolution</text>
<text text-anchor="start" x="206" y="-1812" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="283" y="-1801" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="198,-1794 368,-1794 "/>
<text text-anchor="start" x="206" y="-1782" font-family="Helvetica,sans-Serif" font-size="10.00"># mpScheme</text>
<text text-anchor="start" x="206" y="-1771" font-family="Helvetica,sans-Serif" font-size="10.00"># mpBuilderAndSolver</text>
<text text-anchor="start" x="206" y="-1760" font-family="Helvetica,sans-Serif" font-size="10.00"># mpDx</text>
<text text-anchor="start" x="206" y="-1749" font-family="Helvetica,sans-Serif" font-size="10.00"># mpb</text>
<text text-anchor="start" x="206" y="-1738" font-family="Helvetica,sans-Serif" font-size="10.00"># mpA</text>
<polyline fill="none" stroke="black" points="198,-1731 368,-1731 "/>
<text text-anchor="start" x="206" y="-1719" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolutionStrategy()</text>
<text text-anchor="start" x="206" y="-1708" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ExplicitSolutionStrategy()</text>
<text text-anchor="start" x="206" y="-1697" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="206" y="-1686" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="206" y="-1675" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="206" y="-1664" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="206" y="-1653" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="206" y="-1642" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetScheme()</text>
<text text-anchor="start" x="206" y="-1631" font-family="Helvetica,sans-Serif" font-size="10.00"># Initialize()</text>
<text text-anchor="start" x="206" y="-1620" font-family="Helvetica,sans-Serif" font-size="10.00"># Update()</text>
<text text-anchor="start" x="206" y="-1609" font-family="Helvetica,sans-Serif" font-size="10.00"># Check()</text>
<text text-anchor="start" x="206" y="-1598" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="206" y="-1587" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="206" y="-1576" font-family="Helvetica,sans-Serif" font-size="10.00">* ConvergenceCriterionType</text>
<text text-anchor="start" x="206" y="-1565" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverType</text>
<text text-anchor="start" x="206" y="-1554" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="206" y="-1543" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="206" y="-1532" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="206" y="-1521" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixType</text>
<text text-anchor="start" x="206" y="-1510" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="206" y="-1499" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixPointerType</text>
<text text-anchor="start" x="206" y="-1488" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorPointerType</text>
<text text-anchor="start" x="206" y="-1477" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="206" y="-1466" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="206" y="-1455" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="206" y="-1444" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="206" y="-1433" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDx</text>
<text text-anchor="start" x="206" y="-1422" font-family="Helvetica,sans-Serif" font-size="10.00">* mpb</text>
<text text-anchor="start" x="206" y="-1411" font-family="Helvetica,sans-Serif" font-size="10.00">* mpA</text>
<text text-anchor="start" x="206" y="-1400" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolutionStrategy()</text>
<text text-anchor="start" x="206" y="-1389" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ExplicitSolutionStrategy()</text>
<text text-anchor="start" x="206" y="-1378" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="206" y="-1367" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="206" y="-1356" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="206" y="-1345" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="206" y="-1334" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="206" y="-1323" font-family="Helvetica,sans-Serif" font-size="10.00">* GetScheme()</text>
<text text-anchor="start" x="206" y="-1312" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="206" y="-1301" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="206" y="-1290" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="206" y="-1279" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolutionStrategy()</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node4 -->
<g id="edge3" class="edge">
<title>Node1&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M340.01,-2087.26C331.06,-2003.63 321.6,-1915.25 313.02,-1835.04"/>
<polygon fill="none" stroke="midnightblue" points="336.55,-2087.86 341.09,-2097.43 343.51,-2087.11 336.55,-2087.86"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../d9/d2f/class_kratos_1_1_linear_strategy.html" target="_top" xlink:title="This is the base linear strategy jacobi / gauss&#45;seidel linear strategies.">
<polygon fill="none" stroke="black" points="386.5,-1173 386.5,-1934 557.5,-1934 557.5,-1173 386.5,-1173"/>
<text text-anchor="start" x="394.5" y="-1922" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::LinearStrategy</text>
<text text-anchor="start" x="394.5" y="-1911" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="472" y="-1900" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="386.5,-1893 557.5,-1893 "/>
<text text-anchor="start" x="394.5" y="-1881" font-family="Helvetica,sans-Serif" font-size="10.00"># mpScheme</text>
<text text-anchor="start" x="394.5" y="-1870" font-family="Helvetica,sans-Serif" font-size="10.00"># mpBuilderAndSolver</text>
<text text-anchor="start" x="394.5" y="-1859" font-family="Helvetica,sans-Serif" font-size="10.00"># mpDx</text>
<text text-anchor="start" x="394.5" y="-1848" font-family="Helvetica,sans-Serif" font-size="10.00"># mpb</text>
<text text-anchor="start" x="394.5" y="-1837" font-family="Helvetica,sans-Serif" font-size="10.00"># mpA</text>
<polyline fill="none" stroke="black" points="386.5,-1830 557.5,-1830 "/>
<text text-anchor="start" x="394.5" y="-1818" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearStrategy()</text>
<text text-anchor="start" x="394.5" y="-1807" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearStrategy()</text>
<text text-anchor="start" x="394.5" y="-1796" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~LinearStrategy()</text>
<text text-anchor="start" x="394.5" y="-1785" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="394.5" y="-1774" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="394.5" y="-1763" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="394.5" y="-1752" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveIteration()</text>
<text text-anchor="start" x="394.5" y="-1741" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="394.5" y="-1730" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="394.5" y="-1719" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="394.5" y="-1708" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="394.5" y="-1697" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetScheme()</text>
<text text-anchor="start" x="394.5" y="-1686" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBuilderAndSolver()</text>
<text text-anchor="start" x="394.5" y="-1675" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetBuilderAndSolver()</text>
<text text-anchor="start" x="394.5" y="-1664" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSystemMatrix()</text>
<text text-anchor="start" x="394.5" y="-1653" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDirectSystemMatrix()</text>
<text text-anchor="start" x="394.5" y="-1642" font-family="Helvetica,sans-Serif" font-size="10.00"># Initialize()</text>
<text text-anchor="start" x="394.5" y="-1631" font-family="Helvetica,sans-Serif" font-size="10.00"># Predict()</text>
<text text-anchor="start" x="394.5" y="-1620" font-family="Helvetica,sans-Serif" font-size="10.00"># Update()</text>
<text text-anchor="start" x="394.5" y="-1609" font-family="Helvetica,sans-Serif" font-size="10.00"># SetSystemDofs()</text>
<text text-anchor="start" x="394.5" y="-1598" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="394.5" y="-1587" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="394.5" y="-1576" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverType</text>
<text text-anchor="start" x="394.5" y="-1565" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="394.5" y="-1554" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolverType</text>
<text text-anchor="start" x="394.5" y="-1543" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="394.5" y="-1532" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="394.5" y="-1521" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixType</text>
<text text-anchor="start" x="394.5" y="-1510" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="394.5" y="-1499" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixPointerType</text>
<text text-anchor="start" x="394.5" y="-1488" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorPointerType</text>
<text text-anchor="start" x="394.5" y="-1477" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="394.5" y="-1466" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="394.5" y="-1455" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="394.5" y="-1444" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="394.5" y="-1433" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDx</text>
<text text-anchor="start" x="394.5" y="-1422" font-family="Helvetica,sans-Serif" font-size="10.00">* mpb</text>
<text text-anchor="start" x="394.5" y="-1411" font-family="Helvetica,sans-Serif" font-size="10.00">* mpA</text>
<text text-anchor="start" x="394.5" y="-1400" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearStrategy()</text>
<text text-anchor="start" x="394.5" y="-1389" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearStrategy()</text>
<text text-anchor="start" x="394.5" y="-1378" font-family="Helvetica,sans-Serif" font-size="10.00">* ~LinearStrategy()</text>
<text text-anchor="start" x="394.5" y="-1367" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="394.5" y="-1356" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="394.5" y="-1345" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="394.5" y="-1334" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveIteration()</text>
<text text-anchor="start" x="394.5" y="-1323" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="394.5" y="-1312" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="394.5" y="-1301" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="394.5" y="-1290" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="394.5" y="-1279" font-family="Helvetica,sans-Serif" font-size="10.00">* GetScheme()</text>
<text text-anchor="start" x="394.5" y="-1268" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="394.5" y="-1257" font-family="Helvetica,sans-Serif" font-size="10.00">* GetBuilderAndSolver()</text>
<text text-anchor="start" x="394.5" y="-1246" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSystemMatrix()</text>
<text text-anchor="start" x="394.5" y="-1235" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDirectSystemMatrix()</text>
<text text-anchor="start" x="394.5" y="-1224" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="394.5" y="-1213" font-family="Helvetica,sans-Serif" font-size="10.00">* Predict()</text>
<text text-anchor="start" x="394.5" y="-1202" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="394.5" y="-1191" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSystemDofs()</text>
<text text-anchor="start" x="394.5" y="-1180" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearStrategy()</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node5 -->
<g id="edge4" class="edge">
<title>Node1&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M414.37,-2087.39C419.82,-2037.07 425.44,-1985.03 430.95,-1934.08"/>
<polygon fill="none" stroke="midnightblue" points="410.88,-2087.11 413.29,-2097.43 417.84,-2087.86 410.88,-2087.11"/>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="../../dd/d09/class_kratos_1_1_segregated_strategy.html" target="_top" xlink:title="This is the base class for a segregated strategy for the same model part.">
<polygon fill="none" stroke="black" points="576,-1316 576,-1791 756,-1791 756,-1316 576,-1316"/>
<text text-anchor="start" x="584" y="-1779" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::SegregatedStrategy</text>
<text text-anchor="start" x="584" y="-1768" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="666" y="-1757" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="576,-1750 756,-1750 "/>
<text text-anchor="start" x="584" y="-1738" font-family="Helvetica,sans-Serif" font-size="10.00"># mStrategies</text>
<polyline fill="none" stroke="black" points="576,-1731 756,-1731 "/>
<text text-anchor="start" x="584" y="-1719" font-family="Helvetica,sans-Serif" font-size="10.00">+ SegregatedStrategy()</text>
<text text-anchor="start" x="584" y="-1708" font-family="Helvetica,sans-Serif" font-size="10.00">+ SegregatedStrategy()</text>
<text text-anchor="start" x="584" y="-1697" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SegregatedStrategy()</text>
<text text-anchor="start" x="584" y="-1686" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="584" y="-1675" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="584" y="-1664" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="584" y="-1653" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveIteration()</text>
<text text-anchor="start" x="584" y="-1642" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="584" y="-1631" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="584" y="-1620" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="584" y="-1609" font-family="Helvetica,sans-Serif" font-size="10.00">+ AddStrategy()</text>
<text text-anchor="start" x="584" y="-1598" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetStrategy()</text>
<text text-anchor="start" x="584" y="-1587" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="584" y="-1576" font-family="Helvetica,sans-Serif" font-size="10.00">* BasePointerType</text>
<text text-anchor="start" x="584" y="-1565" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="584" y="-1554" font-family="Helvetica,sans-Serif" font-size="10.00">* StrategiesContainerType</text>
<text text-anchor="start" x="584" y="-1543" font-family="Helvetica,sans-Serif" font-size="10.00">* StrategiesContainerIteratorType</text>
<text text-anchor="start" x="584" y="-1532" font-family="Helvetica,sans-Serif" font-size="10.00">* ConvergenceCriterionType</text>
<text text-anchor="start" x="584" y="-1521" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverType</text>
<text text-anchor="start" x="584" y="-1510" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="584" y="-1499" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolverType</text>
<text text-anchor="start" x="584" y="-1488" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="584" y="-1477" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="584" y="-1466" font-family="Helvetica,sans-Serif" font-size="10.00">* mStrategies</text>
<text text-anchor="start" x="584" y="-1455" font-family="Helvetica,sans-Serif" font-size="10.00">* SegregatedStrategy()</text>
<text text-anchor="start" x="584" y="-1444" font-family="Helvetica,sans-Serif" font-size="10.00">* SegregatedStrategy()</text>
<text text-anchor="start" x="584" y="-1433" font-family="Helvetica,sans-Serif" font-size="10.00">* ~SegregatedStrategy()</text>
<text text-anchor="start" x="584" y="-1422" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="584" y="-1411" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="584" y="-1400" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="584" y="-1389" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveIteration()</text>
<text text-anchor="start" x="584" y="-1378" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="584" y="-1367" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="584" y="-1356" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="584" y="-1345" font-family="Helvetica,sans-Serif" font-size="10.00">* AddStrategy()</text>
<text text-anchor="start" x="584" y="-1334" font-family="Helvetica,sans-Serif" font-size="10.00">* GetStrategy()</text>
<text text-anchor="start" x="584" y="-1323" font-family="Helvetica,sans-Serif" font-size="10.00">* SegregatedStrategy()</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node8 -->
<g id="edge7" class="edge">
<title>Node1&#45;&gt;Node8</title>
<path fill="none" stroke="midnightblue" d="M467.47,-2278.64C502.56,-2213.29 540.37,-2135.23 566,-2061 595.7,-1975.01 617.56,-1877.58 633.14,-1791.31"/>
<polygon fill="none" stroke="midnightblue" points="464.21,-2277.31 462.54,-2287.77 470.37,-2280.63 464.21,-2277.31"/>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="302.5,-2807.5 302.5,-3678.5 451.5,-3678.5 451.5,-2807.5 302.5,-2807.5"/>
<text text-anchor="middle" x="377" y="-3666.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="302.5,-3659.5 451.5,-3659.5 "/>
<text text-anchor="middle" x="377" y="-3647.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="302.5,-3640.5 451.5,-3640.5 "/>
<text text-anchor="start" x="310.5" y="-3628.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="310.5" y="-3617.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="310.5" y="-3606.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="310.5" y="-3595.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="310.5" y="-3584.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="310.5" y="-3573.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="310.5" y="-3562.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="310.5" y="-3551.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="310.5" y="-3540.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="310.5" y="-3529.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="310.5" y="-3518.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="310.5" y="-3507.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="310.5" y="-3496.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="310.5" y="-3485.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="310.5" y="-3474.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="310.5" y="-3463.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="310.5" y="-3452.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="310.5" y="-3441.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="310.5" y="-3430.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="310.5" y="-3419.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="310.5" y="-3408.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="310.5" y="-3397.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="310.5" y="-3386.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="310.5" y="-3375.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="310.5" y="-3364.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="310.5" y="-3353.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="310.5" y="-3342.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="310.5" y="-3331.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="310.5" y="-3320.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="310.5" y="-3309.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="310.5" y="-3298.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="310.5" y="-3287.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="310.5" y="-3276.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="310.5" y="-3265.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="310.5" y="-3254.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="310.5" y="-3243.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="310.5" y="-3232.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="310.5" y="-3221.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="310.5" y="-3210.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="310.5" y="-3199.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="310.5" y="-3188.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="310.5" y="-3177.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="310.5" y="-3166.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="310.5" y="-3155.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="310.5" y="-3144.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="310.5" y="-3133.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="310.5" y="-3122.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="310.5" y="-3111.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="310.5" y="-3100.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="310.5" y="-3089.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="310.5" y="-3078.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="310.5" y="-3067.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="310.5" y="-3056.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="310.5" y="-3045.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="310.5" y="-3034.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="310.5" y="-3023.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="310.5" y="-3012.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="310.5" y="-3001.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="310.5" y="-2990.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="310.5" y="-2979.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="310.5" y="-2968.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="310.5" y="-2957.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="310.5" y="-2946.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="310.5" y="-2935.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="310.5" y="-2924.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="310.5" y="-2913.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="310.5" y="-2902.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="310.5" y="-2891.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="310.5" y="-2880.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="310.5" y="-2869.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="310.5" y="-2858.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="310.5" y="-2847.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="310.5" y="-2836.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="310.5" y="-2825.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="310.5" y="-2814.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M377,-2797.41C377,-2788.49 377,-2779.6 377,-2770.75"/>
<polygon fill="none" stroke="midnightblue" points="373.5,-2797.5 377,-2807.5 380.5,-2797.5 373.5,-2797.5"/>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="../../d7/da5/class_kratos_1_1_newton_raphson_strategy.html" target="_top" xlink:title="This is the base Newton Raphson strategy.">
<polygon fill="none" stroke="black" points="384.5,-457.5 384.5,-1009.5 559.5,-1009.5 559.5,-457.5 384.5,-457.5"/>
<text text-anchor="start" x="392.5" y="-997.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NewtonRaphsonStrategy</text>
<text text-anchor="start" x="392.5" y="-986.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="472" y="-975.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="384.5,-968.5 559.5,-968.5 "/>
<text text-anchor="start" x="392.5" y="-956.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpConvergenceCriteria</text>
<text text-anchor="start" x="392.5" y="-945.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxIterationNumber</text>
<polyline fill="none" stroke="black" points="384.5,-938.5 559.5,-938.5 "/>
<text text-anchor="start" x="392.5" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="392.5" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="392.5" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="392.5" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="392.5" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="392.5" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="392.5" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveIteration()</text>
<text text-anchor="start" x="392.5" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="392.5" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="392.5" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="392.5" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetMaxIterationNumber()</text>
<text text-anchor="start" x="392.5" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMaxIterationNumber()</text>
<text text-anchor="start" x="392.5" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Initialize()</text>
<text text-anchor="start" x="392.5" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="392.5" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="392.5" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConvergenceCriterionType</text>
<text text-anchor="start" x="392.5" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverType</text>
<text text-anchor="start" x="392.5" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="392.5" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolverType</text>
<text text-anchor="start" x="392.5" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="392.5" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="392.5" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixType</text>
<text text-anchor="start" x="392.5" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="392.5" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixPointerType</text>
<text text-anchor="start" x="392.5" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorPointerType</text>
<text text-anchor="start" x="392.5" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="392.5" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="392.5" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpConvergenceCriteria</text>
<text text-anchor="start" x="392.5" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxIterationNumber</text>
<text text-anchor="start" x="392.5" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="392.5" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="392.5" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="392.5" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="392.5" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="392.5" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="392.5" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveIteration()</text>
<text text-anchor="start" x="392.5" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="392.5" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="392.5" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="392.5" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetMaxIterationNumber()</text>
<text text-anchor="start" x="392.5" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMaxIterationNumber()</text>
<text text-anchor="start" x="392.5" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="392.5" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewtonRaphsonStrategy()</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node6 -->
<g id="edge5" class="edge">
<title>Node5&#45;&gt;Node6</title>
<path fill="none" stroke="midnightblue" d="M472,-1162.51C472,-1110.87 472,-1058.82 472,-1009.67"/>
<polygon fill="none" stroke="midnightblue" points="468.5,-1162.83 472,-1172.83 475.5,-1162.83 468.5,-1162.83"/>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="../../db/d9a/class_kratos_1_1_line_search_solution_strategy.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="378.5,-0.5 378.5,-420.5 565.5,-420.5 565.5,-0.5 378.5,-0.5"/>
<text text-anchor="start" x="386.5" y="-408.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::LineSearchSolution</text>
<text text-anchor="start" x="386.5" y="-397.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="472" y="-386.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="378.5,-379.5 565.5,-379.5 "/>
<text text-anchor="middle" x="472" y="-367.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="378.5,-360.5 565.5,-360.5 "/>
<text text-anchor="start" x="386.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LineSearchSolutionStrategy()</text>
<text text-anchor="start" x="386.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LineSearchSolutionStrategy()</text>
<text text-anchor="start" x="386.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~LineSearchSolutionStrategy()</text>
<text text-anchor="start" x="386.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Update()</text>
<text text-anchor="start" x="386.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="386.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="386.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="386.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConvergenceCriterionType</text>
<text text-anchor="start" x="386.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverType</text>
<text text-anchor="start" x="386.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="386.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolverType</text>
<text text-anchor="start" x="386.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="386.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="386.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mType</text>
<text text-anchor="start" x="386.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mAlpha</text>
<text text-anchor="start" x="386.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchSolutionStrategy()</text>
<text text-anchor="start" x="386.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchSolutionStrategy()</text>
<text text-anchor="start" x="386.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~LineSearchSolutionStrategy()</text>
<text text-anchor="start" x="386.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="386.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateA()</text>
<text text-anchor="start" x="386.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateB()</text>
<text text-anchor="start" x="386.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateC()</text>
<text text-anchor="start" x="386.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateD()</text>
<text text-anchor="start" x="386.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateE()</text>
<text text-anchor="start" x="386.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateF()</text>
<text text-anchor="start" x="386.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Restore()</text>
<text text-anchor="start" x="386.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeSlope()</text>
<text text-anchor="start" x="386.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeUpdatedSlope()</text>
<text text-anchor="start" x="386.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeResidual()</text>
<text text-anchor="start" x="386.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeResidualNorm()</text>
<text text-anchor="start" x="386.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeUpdatedResidualNorm()</text>
<text text-anchor="start" x="386.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchSolutionStrategy()</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node7 -->
<g id="edge6" class="edge">
<title>Node6&#45;&gt;Node7</title>
<path fill="none" stroke="midnightblue" d="M472,-447.11C472,-438.26 472,-429.45 472,-420.71"/>
<polygon fill="none" stroke="midnightblue" points="468.5,-447.13 472,-457.13 475.5,-447.13 468.5,-447.13"/>
</g>
</g>
</svg>
