<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::LineSearchSolutionStrategy&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt; Pages: 1 -->
<!--zoomable 3434 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 195;
var viewHeight = 3434;
var sectionId = 'dynsection-0';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::LineSearchSolutionStrategy&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-420.5 187,-420.5 187,-0.5 0,-0.5"/>
<text text-anchor="start" x="8" y="-408.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::LineSearchSolution</text>
<text text-anchor="start" x="8" y="-397.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="93.5" y="-386.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="0,-379.5 187,-379.5 "/>
<text text-anchor="middle" x="93.5" y="-367.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-360.5 187,-360.5 "/>
<text text-anchor="start" x="8" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LineSearchSolutionStrategy()</text>
<text text-anchor="start" x="8" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LineSearchSolutionStrategy()</text>
<text text-anchor="start" x="8" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~LineSearchSolutionStrategy()</text>
<text text-anchor="start" x="8" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Update()</text>
<text text-anchor="start" x="8" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="8" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="8" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="8" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConvergenceCriterionType</text>
<text text-anchor="start" x="8" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverType</text>
<text text-anchor="start" x="8" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="8" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolverType</text>
<text text-anchor="start" x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mType</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mAlpha</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchSolutionStrategy()</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchSolutionStrategy()</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~LineSearchSolutionStrategy()</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateA()</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateB()</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateC()</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateD()</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateE()</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateF()</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Restore()</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeSlope()</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeUpdatedSlope()</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeResidual()</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeResidualNorm()</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeUpdatedResidualNorm()</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchSolutionStrategy()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d7/da5/class_kratos_1_1_newton_raphson_strategy.html" target="_top" xlink:title="This is the base Newton Raphson strategy.">
<polygon fill="none" stroke="black" points="6,-457.5 6,-1009.5 181,-1009.5 181,-457.5 6,-457.5"/>
<text text-anchor="start" x="14" y="-997.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NewtonRaphsonStrategy</text>
<text text-anchor="start" x="14" y="-986.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="93.5" y="-975.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="6,-968.5 181,-968.5 "/>
<text text-anchor="start" x="14" y="-956.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpConvergenceCriteria</text>
<text text-anchor="start" x="14" y="-945.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxIterationNumber</text>
<polyline fill="none" stroke="black" points="6,-938.5 181,-938.5 "/>
<text text-anchor="start" x="14" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="14" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="14" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="14" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="14" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="14" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="14" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveIteration()</text>
<text text-anchor="start" x="14" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="14" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="14" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="14" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetMaxIterationNumber()</text>
<text text-anchor="start" x="14" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMaxIterationNumber()</text>
<text text-anchor="start" x="14" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Initialize()</text>
<text text-anchor="start" x="14" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="14" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="14" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConvergenceCriterionType</text>
<text text-anchor="start" x="14" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverType</text>
<text text-anchor="start" x="14" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="14" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolverType</text>
<text text-anchor="start" x="14" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="14" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="14" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixType</text>
<text text-anchor="start" x="14" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="14" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixPointerType</text>
<text text-anchor="start" x="14" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorPointerType</text>
<text text-anchor="start" x="14" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="14" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="14" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpConvergenceCriteria</text>
<text text-anchor="start" x="14" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxIterationNumber</text>
<text text-anchor="start" x="14" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="14" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="14" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="14" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="14" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="14" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="14" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveIteration()</text>
<text text-anchor="start" x="14" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="14" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="14" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="14" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetMaxIterationNumber()</text>
<text text-anchor="start" x="14" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMaxIterationNumber()</text>
<text text-anchor="start" x="14" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="14" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewtonRaphsonStrategy()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M93.5,-447.11C93.5,-438.26 93.5,-429.45 93.5,-420.71"/>
<polygon fill="none" stroke="midnightblue" points="90,-447.13 93.5,-457.13 97,-447.13 90,-447.13"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d9/d2f/class_kratos_1_1_linear_strategy.html" target="_top" xlink:title="This is the base linear strategy jacobi / gauss&#45;seidel linear strategies.">
<polygon fill="none" stroke="black" points="8,-1046.5 8,-1807.5 179,-1807.5 179,-1046.5 8,-1046.5"/>
<text text-anchor="start" x="16" y="-1795.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::LinearStrategy</text>
<text text-anchor="start" x="16" y="-1784.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="93.5" y="-1773.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="8,-1766.5 179,-1766.5 "/>
<text text-anchor="start" x="16" y="-1754.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpScheme</text>
<text text-anchor="start" x="16" y="-1743.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpBuilderAndSolver</text>
<text text-anchor="start" x="16" y="-1732.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpDx</text>
<text text-anchor="start" x="16" y="-1721.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpb</text>
<text text-anchor="start" x="16" y="-1710.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpA</text>
<polyline fill="none" stroke="black" points="8,-1703.5 179,-1703.5 "/>
<text text-anchor="start" x="16" y="-1691.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearStrategy()</text>
<text text-anchor="start" x="16" y="-1680.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearStrategy()</text>
<text text-anchor="start" x="16" y="-1669.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~LinearStrategy()</text>
<text text-anchor="start" x="16" y="-1658.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="16" y="-1647.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="16" y="-1636.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="16" y="-1625.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveIteration()</text>
<text text-anchor="start" x="16" y="-1614.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="16" y="-1603.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="16" y="-1592.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="16" y="-1581.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="16" y="-1570.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetScheme()</text>
<text text-anchor="start" x="16" y="-1559.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBuilderAndSolver()</text>
<text text-anchor="start" x="16" y="-1548.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetBuilderAndSolver()</text>
<text text-anchor="start" x="16" y="-1537.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSystemMatrix()</text>
<text text-anchor="start" x="16" y="-1526.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDirectSystemMatrix()</text>
<text text-anchor="start" x="16" y="-1515.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Initialize()</text>
<text text-anchor="start" x="16" y="-1504.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Predict()</text>
<text text-anchor="start" x="16" y="-1493.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Update()</text>
<text text-anchor="start" x="16" y="-1482.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetSystemDofs()</text>
<text text-anchor="start" x="16" y="-1471.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="16" y="-1460.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="16" y="-1449.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverType</text>
<text text-anchor="start" x="16" y="-1438.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="16" y="-1427.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolverType</text>
<text text-anchor="start" x="16" y="-1416.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="16" y="-1405.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="16" y="-1394.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixType</text>
<text text-anchor="start" x="16" y="-1383.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="16" y="-1372.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixPointerType</text>
<text text-anchor="start" x="16" y="-1361.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorPointerType</text>
<text text-anchor="start" x="16" y="-1350.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="16" y="-1339.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="16" y="-1328.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="16" y="-1317.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="16" y="-1306.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDx</text>
<text text-anchor="start" x="16" y="-1295.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpb</text>
<text text-anchor="start" x="16" y="-1284.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpA</text>
<text text-anchor="start" x="16" y="-1273.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearStrategy()</text>
<text text-anchor="start" x="16" y="-1262.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearStrategy()</text>
<text text-anchor="start" x="16" y="-1251.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~LinearStrategy()</text>
<text text-anchor="start" x="16" y="-1240.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="16" y="-1229.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="16" y="-1218.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="16" y="-1207.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveIteration()</text>
<text text-anchor="start" x="16" y="-1196.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="16" y="-1185.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="16" y="-1174.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="16" y="-1163.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="16" y="-1152.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetScheme()</text>
<text text-anchor="start" x="16" y="-1141.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="16" y="-1130.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetBuilderAndSolver()</text>
<text text-anchor="start" x="16" y="-1119.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSystemMatrix()</text>
<text text-anchor="start" x="16" y="-1108.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDirectSystemMatrix()</text>
<text text-anchor="start" x="16" y="-1097.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="16" y="-1086.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Predict()</text>
<text text-anchor="start" x="16" y="-1075.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="16" y="-1064.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSystemDofs()</text>
<text text-anchor="start" x="16" y="-1053.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearStrategy()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M93.5,-1036.33C93.5,-1027.45 93.5,-1018.61 93.5,-1009.84"/>
<polygon fill="none" stroke="midnightblue" points="90,-1036.36 93.5,-1046.36 97,-1036.36 90,-1036.36"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../d1/d43/class_kratos_1_1_solution_strategy.html" target="_top" xlink:title="Solution strategy base class.">
<polygon fill="none" stroke="black" points="8,-1844.5 8,-2517.5 179,-2517.5 179,-1844.5 8,-1844.5"/>
<text text-anchor="start" x="16" y="-2505.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::SolutionStrategy</text>
<text text-anchor="start" x="16" y="-2494.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="93.5" y="-2483.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="8,-2476.5 179,-2476.5 "/>
<text text-anchor="start" x="16" y="-2464.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mOptions</text>
<text text-anchor="start" x="16" y="-2453.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<polyline fill="none" stroke="black" points="8,-2446.5 179,-2446.5 "/>
<text text-anchor="start" x="16" y="-2434.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionStrategy()</text>
<text text-anchor="start" x="16" y="-2423.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionStrategy()</text>
<text text-anchor="start" x="16" y="-2412.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SolutionStrategy()</text>
<text text-anchor="start" x="16" y="-2401.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="16" y="-2390.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="16" y="-2379.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="16" y="-2368.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="16" y="-2357.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveIteration()</text>
<text text-anchor="start" x="16" y="-2346.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="16" y="-2335.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="16" y="-2324.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="16" y="-2313.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetEchoLevel()</text>
<text text-anchor="start" x="16" y="-2302.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetOptions()</text>
<text text-anchor="start" x="16" y="-2291.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetOptions()</text>
<text text-anchor="start" x="16" y="-2280.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMaxIterationNumber()</text>
<text text-anchor="start" x="16" y="-2269.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetModelPart()</text>
<text text-anchor="start" x="16" y="-2258.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Initialize()</text>
<text text-anchor="start" x="16" y="-2247.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Predict()</text>
<text text-anchor="start" x="16" y="-2236.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Update()</text>
<text text-anchor="start" x="16" y="-2225.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Finalize()</text>
<text text-anchor="start" x="16" y="-2214.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="16" y="-2203.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="16" y="-2192.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixType</text>
<text text-anchor="start" x="16" y="-2181.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="16" y="-2170.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixPointerType</text>
<text text-anchor="start" x="16" y="-2159.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorPointerType</text>
<text text-anchor="start" x="16" y="-2148.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="16" y="-2137.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverType</text>
<text text-anchor="start" x="16" y="-2126.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="16" y="-2115.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="16" y="-2104.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mOptions</text>
<text text-anchor="start" x="16" y="-2093.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="16" y="-2082.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mrModelPart</text>
<text text-anchor="start" x="16" y="-2071.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStrategy()</text>
<text text-anchor="start" x="16" y="-2060.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStrategy()</text>
<text text-anchor="start" x="16" y="-2049.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~SolutionStrategy()</text>
<text text-anchor="start" x="16" y="-2038.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="16" y="-2027.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="16" y="-2016.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="16" y="-2005.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="16" y="-1994.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveIteration()</text>
<text text-anchor="start" x="16" y="-1983.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="16" y="-1972.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="16" y="-1961.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="16" y="-1950.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetEchoLevel()</text>
<text text-anchor="start" x="16" y="-1939.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetOptions()</text>
<text text-anchor="start" x="16" y="-1928.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetOptions()</text>
<text text-anchor="start" x="16" y="-1917.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMaxIterationNumber()</text>
<text text-anchor="start" x="16" y="-1906.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetModelPart()</text>
<text text-anchor="start" x="16" y="-1895.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="16" y="-1884.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Predict()</text>
<text text-anchor="start" x="16" y="-1873.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="16" y="-1862.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Finalize()</text>
<text text-anchor="start" x="16" y="-1851.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStrategy()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M93.5,-1834.36C93.5,-1825.46 93.5,-1816.52 93.5,-1807.59"/>
<polygon fill="none" stroke="midnightblue" points="90,-1834.41 93.5,-1844.41 97,-1834.41 90,-1834.41"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="19,-2554.5 19,-3425.5 168,-3425.5 168,-2554.5 19,-2554.5"/>
<text text-anchor="middle" x="93.5" y="-3413.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="19,-3406.5 168,-3406.5 "/>
<text text-anchor="middle" x="93.5" y="-3394.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="19,-3387.5 168,-3387.5 "/>
<text text-anchor="start" x="27" y="-3375.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="27" y="-3364.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="27" y="-3353.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="27" y="-3342.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="27" y="-3331.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="27" y="-3320.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="27" y="-3309.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="27" y="-3298.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="27" y="-3287.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="27" y="-3276.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="27" y="-3265.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="27" y="-3254.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="27" y="-3243.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="27" y="-3232.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="27" y="-3221.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="27" y="-3210.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="27" y="-3199.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="27" y="-3188.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="27" y="-3177.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="27" y="-3166.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="27" y="-3155.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="27" y="-3144.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="27" y="-3133.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="27" y="-3122.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="27" y="-3111.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="27" y="-3100.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="27" y="-3089.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="27" y="-3078.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="27" y="-3067.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="27" y="-3056.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="27" y="-3045.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="27" y="-3034.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="27" y="-3023.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="27" y="-3012.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="27" y="-3001.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="27" y="-2990.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="27" y="-2979.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="27" y="-2968.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="27" y="-2957.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="27" y="-2946.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="27" y="-2935.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="27" y="-2924.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="27" y="-2913.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="27" y="-2902.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="27" y="-2891.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="27" y="-2880.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="27" y="-2869.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="27" y="-2858.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="27" y="-2847.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="27" y="-2836.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="27" y="-2825.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="27" y="-2814.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="27" y="-2803.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="27" y="-2792.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="27" y="-2781.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="27" y="-2770.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="27" y="-2759.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="27" y="-2748.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="27" y="-2737.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="27" y="-2726.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="27" y="-2715.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="27" y="-2704.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="27" y="-2693.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="27" y="-2682.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="27" y="-2671.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="27" y="-2660.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="27" y="-2649.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="27" y="-2638.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="27" y="-2627.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="27" y="-2616.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="27" y="-2605.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="27" y="-2594.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="27" y="-2583.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="27" y="-2572.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="27" y="-2561.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M93.5,-2544.41C93.5,-2535.49 93.5,-2526.6 93.5,-2517.75"/>
<polygon fill="none" stroke="midnightblue" points="90,-2544.5 93.5,-2554.5 97,-2544.5 90,-2544.5"/>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_line_search_solution_strategy__inherit__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
