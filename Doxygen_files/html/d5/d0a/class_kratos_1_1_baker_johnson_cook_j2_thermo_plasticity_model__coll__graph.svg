<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::BakerJohnsonCookJ2ThermoPlasticityModel Pages: 1 -->
<!--zoomable 5584 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 469;
var viewHeight = 5584;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::BakerJohnsonCookJ2ThermoPlasticityModel</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Short class definition.">
<polygon fill="#bfbfbf" stroke="black" points="175,-0.5 175,-574.5 348,-574.5 348,-0.5 175,-0.5"/>
<text text-anchor="start" x="183" y="-562.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::BakerJohnsonCook</text>
<text text-anchor="middle" x="261.5" y="-551.5" font-family="Helvetica,sans-Serif" font-size="10.00">J2ThermoPlasticityModel</text>
<polyline fill="none" stroke="black" points="175,-544.5 348,-544.5 "/>
<text text-anchor="middle" x="261.5" y="-532.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="175,-525.5 348,-525.5 "/>
<text text-anchor="start" x="183" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BakerJohnsonCookJ2Thermo</text>
<text text-anchor="start" x="183" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">PlasticityModel()</text>
<text text-anchor="start" x="183" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BakerJohnsonCookJ2Thermo</text>
<text text-anchor="start" x="183" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">PlasticityModel()</text>
<text text-anchor="start" x="183" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="183" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="183" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~BakerJohnsonCookJ2Thermo</text>
<text text-anchor="start" x="183" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">PlasticityModel()</text>
<text text-anchor="start" x="183" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDomainVariablesList()</text>
<text text-anchor="start" x="183" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Has()</text>
<text text-anchor="start" x="183" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="183" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="183" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="183" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="183" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElasticityModelType</text>
<text text-anchor="start" x="183" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElasticityModelPointer</text>
<text text-anchor="start" x="183" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HardeningRuleType</text>
<text text-anchor="start" x="183" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* YieldSurfaceType</text>
<text text-anchor="start" x="183" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* YieldSurfacePointer</text>
<text text-anchor="start" x="183" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="183" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseTypePointer</text>
<text text-anchor="start" x="183" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="183" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VoigtIndexType</text>
<text text-anchor="start" x="183" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MatrixType</text>
<text text-anchor="start" x="183" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ModelDataType</text>
<text text-anchor="start" x="183" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaterialDataType</text>
<text text-anchor="start" x="183" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticDataType</text>
<text text-anchor="start" x="183" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InternalVariablesType</text>
<text text-anchor="start" x="183" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="183" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="183" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="183" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="183" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="183" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BakerJohnsonCookJ2Thermo</text>
<text text-anchor="start" x="183" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">PlasticityModel()</text>
<text text-anchor="start" x="183" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BakerJohnsonCookJ2Thermo</text>
<text text-anchor="start" x="183" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">PlasticityModel()</text>
<text text-anchor="start" x="183" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="183" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="183" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~BakerJohnsonCookJ2Thermo</text>
<text text-anchor="start" x="183" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">PlasticityModel()</text>
<text text-anchor="start" x="183" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDomainVariablesList()</text>
<text text-anchor="start" x="183" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Has()</text>
<text text-anchor="start" x="183" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="183" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="183" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="183" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d4/d3f/class_kratos_1_1_non_linear_rate_dependent_plasticity_model.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="134.5,-612.5 134.5,-1340.5 388.5,-1340.5 388.5,-612.5 134.5,-612.5"/>
<text text-anchor="start" x="142.5" y="-1328.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NonLinearRateDependent</text>
<text text-anchor="start" x="142.5" y="-1317.5" font-family="Helvetica,sans-Serif" font-size="10.00">PlasticityModel&lt; IncompressibleNeo</text>
<text text-anchor="start" x="142.5" y="-1306.5" font-family="Helvetica,sans-Serif" font-size="10.00">HookeanModel, MisesHuberThermalYieldSurface</text>
<text text-anchor="middle" x="261.5" y="-1295.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; BakerJohnsonCookThermalHardeningRule &gt; &gt;</text>
<polyline fill="none" stroke="black" points="134.5,-1288.5 388.5,-1288.5 "/>
<text text-anchor="middle" x="261.5" y="-1276.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="134.5,-1269.5 388.5,-1269.5 "/>
<text text-anchor="start" x="142.5" y="-1257.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NonLinearRateDependentPlasticity</text>
<text text-anchor="start" x="142.5" y="-1246.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="142.5" y="-1235.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NonLinearRateDependentPlasticity</text>
<text text-anchor="start" x="142.5" y="-1224.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="142.5" y="-1213.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NonLinearRateDependentPlasticity</text>
<text text-anchor="start" x="142.5" y="-1202.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="142.5" y="-1191.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="142.5" y="-1180.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="142.5" y="-1169.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NonLinearRateDependentPlasticity</text>
<text text-anchor="start" x="142.5" y="-1158.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="142.5" y="-1147.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="142.5" y="-1136.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="142.5" y="-1125.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="142.5" y="-1114.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateReturnMapping()</text>
<text text-anchor="start" x="142.5" y="-1103.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateRateDependentReturn</text>
<text text-anchor="start" x="142.5" y="-1092.5" font-family="Helvetica,sans-Serif" font-size="10.00">Mapping()</text>
<text text-anchor="start" x="142.5" y="-1081.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateRateIndependent</text>
<text text-anchor="start" x="142.5" y="-1070.5" font-family="Helvetica,sans-Serif" font-size="10.00">ReturnMapping()</text>
<text text-anchor="start" x="142.5" y="-1059.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateImplexReturnMapping()</text>
<text text-anchor="start" x="142.5" y="-1048.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateLineSearch()</text>
<text text-anchor="start" x="142.5" y="-1037.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElasticityModelType</text>
<text text-anchor="start" x="142.5" y="-1026.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElasticityModelPointer</text>
<text text-anchor="start" x="142.5" y="-1015.5" font-family="Helvetica,sans-Serif" font-size="10.00">* YieldSurfaceType</text>
<text text-anchor="start" x="142.5" y="-1004.5" font-family="Helvetica,sans-Serif" font-size="10.00">* YieldSurfacePointer</text>
<text text-anchor="start" x="142.5" y="-993.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DerivedType</text>
<text text-anchor="start" x="142.5" y="-982.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="142.5" y="-971.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseTypePointer</text>
<text text-anchor="start" x="142.5" y="-960.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="142.5" y="-949.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VoigtIndexType</text>
<text text-anchor="start" x="142.5" y="-938.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MatrixType</text>
<text text-anchor="start" x="142.5" y="-927.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ModelDataType</text>
<text text-anchor="start" x="142.5" y="-916.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaterialDataType</text>
<text text-anchor="start" x="142.5" y="-905.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticDataType</text>
<text text-anchor="start" x="142.5" y="-894.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InternalVariablesType</text>
<text text-anchor="start" x="142.5" y="-883.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="142.5" y="-872.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="142.5" y="-861.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="142.5" y="-850.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="142.5" y="-839.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="142.5" y="-828.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NonLinearRateDependentPlasticity</text>
<text text-anchor="start" x="142.5" y="-817.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="142.5" y="-806.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NonLinearRateDependentPlasticity</text>
<text text-anchor="start" x="142.5" y="-795.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="142.5" y="-784.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NonLinearRateDependentPlasticity</text>
<text text-anchor="start" x="142.5" y="-773.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="142.5" y="-762.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="142.5" y="-751.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="142.5" y="-740.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~NonLinearRateDependentPlasticity</text>
<text text-anchor="start" x="142.5" y="-729.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="142.5" y="-718.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="142.5" y="-707.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="142.5" y="-696.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="142.5" y="-685.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateReturnMapping()</text>
<text text-anchor="start" x="142.5" y="-674.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateRateDependentReturn</text>
<text text-anchor="start" x="142.5" y="-663.5" font-family="Helvetica,sans-Serif" font-size="10.00">Mapping()</text>
<text text-anchor="start" x="142.5" y="-652.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateRateIndependent</text>
<text text-anchor="start" x="142.5" y="-641.5" font-family="Helvetica,sans-Serif" font-size="10.00">ReturnMapping()</text>
<text text-anchor="start" x="142.5" y="-630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateImplexReturnMapping()</text>
<text text-anchor="start" x="142.5" y="-619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateLineSearch()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M261.5,-602.38C261.5,-593.17 261.5,-583.99 261.5,-574.86"/>
<polygon fill="none" stroke="midnightblue" points="258,-602.39 261.5,-612.39 265,-602.39 258,-602.39"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d4/d91/class_kratos_1_1_non_linear_associative_plasticity_model.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="156.5,-1378.5 156.5,-2447.5 366.5,-2447.5 366.5,-1378.5 156.5,-1378.5"/>
<text text-anchor="start" x="164.5" y="-2435.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NonLinearAssociative</text>
<text text-anchor="start" x="164.5" y="-2424.5" font-family="Helvetica,sans-Serif" font-size="10.00">PlasticityModel&lt; TElasticityModel,</text>
<text text-anchor="middle" x="261.5" y="-2413.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TYieldSurface &gt;</text>
<polyline fill="none" stroke="black" points="156.5,-2406.5 366.5,-2406.5 "/>
<text text-anchor="start" x="164.5" y="-2394.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInternal</text>
<text text-anchor="start" x="164.5" y="-2383.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mPreviousInternal</text>
<polyline fill="none" stroke="black" points="156.5,-2376.5 366.5,-2376.5 "/>
<text text-anchor="start" x="164.5" y="-2364.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NonLinearAssociativePlasticity</text>
<text text-anchor="start" x="164.5" y="-2353.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="164.5" y="-2342.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NonLinearAssociativePlasticity</text>
<text text-anchor="start" x="164.5" y="-2331.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="164.5" y="-2320.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="164.5" y="-2309.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="164.5" y="-2298.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NonLinearAssociativePlasticity</text>
<text text-anchor="start" x="164.5" y="-2287.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="164.5" y="-2276.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressTensor()</text>
<text text-anchor="start" x="164.5" y="-2265.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricStress</text>
<text text-anchor="start" x="164.5" y="-2254.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="164.5" y="-2243.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="164.5" y="-2232.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressAndConstitutive</text>
<text text-anchor="start" x="164.5" y="-2221.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="164.5" y="-2210.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Has()</text>
<text text-anchor="start" x="164.5" y="-2199.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="164.5" y="-2188.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="164.5" y="-2177.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="164.5" y="-2166.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="164.5" y="-2155.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="164.5" y="-2144.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetWorkingMeasures()</text>
<text text-anchor="start" x="164.5" y="-2133.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetWorkingMeasures()</text>
<text text-anchor="start" x="164.5" y="-2122.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateAndAddIsochoric</text>
<text text-anchor="start" x="164.5" y="-2111.5" font-family="Helvetica,sans-Serif" font-size="10.00">StressTensor()</text>
<text text-anchor="start" x="164.5" y="-2100.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateAndAddPlasticConstitutive</text>
<text text-anchor="start" x="164.5" y="-2089.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="164.5" y="-2078.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AddPlasticConstitutiveComponent()</text>
<text text-anchor="start" x="164.5" y="-2067.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateReturnMapping()</text>
<text text-anchor="start" x="164.5" y="-2056.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateImplexReturnMapping()</text>
<text text-anchor="start" x="164.5" y="-2045.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeVariables()</text>
<text text-anchor="start" x="164.5" y="-2034.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateStressConfiguration()</text>
<text text-anchor="start" x="164.5" y="-2023.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateInternalVariables()</text>
<text text-anchor="start" x="164.5" y="-2012.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateScalingFactors()</text>
<text text-anchor="start" x="164.5" y="-2001.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateThermalDissipation()</text>
<text text-anchor="start" x="164.5" y="-1990.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateImplexThermalDissipation()</text>
<text text-anchor="start" x="164.5" y="-1979.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElasticityModelType</text>
<text text-anchor="start" x="164.5" y="-1968.5" font-family="Helvetica,sans-Serif" font-size="10.00">* YieldSurfaceType</text>
<text text-anchor="start" x="164.5" y="-1957.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="164.5" y="-1946.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseTypePointer</text>
<text text-anchor="start" x="164.5" y="-1935.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="164.5" y="-1924.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VoigtIndexType</text>
<text text-anchor="start" x="164.5" y="-1913.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MatrixType</text>
<text text-anchor="start" x="164.5" y="-1902.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ModelDataType</text>
<text text-anchor="start" x="164.5" y="-1891.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaterialDataType</text>
<text text-anchor="start" x="164.5" y="-1880.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticDataType</text>
<text text-anchor="start" x="164.5" y="-1869.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InternalVariablesType</text>
<text text-anchor="start" x="164.5" y="-1858.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StrainMeasureType</text>
<text text-anchor="start" x="164.5" y="-1847.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StressMeasureType</text>
<text text-anchor="start" x="164.5" y="-1836.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="164.5" y="-1825.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="164.5" y="-1814.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInternal</text>
<text text-anchor="start" x="164.5" y="-1803.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPreviousInternal</text>
<text text-anchor="start" x="164.5" y="-1792.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="164.5" y="-1781.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="164.5" y="-1770.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="164.5" y="-1759.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NonLinearAssociativePlasticity</text>
<text text-anchor="start" x="164.5" y="-1748.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="164.5" y="-1737.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NonLinearAssociativePlasticity</text>
<text text-anchor="start" x="164.5" y="-1726.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="164.5" y="-1715.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="164.5" y="-1704.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="164.5" y="-1693.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~NonLinearAssociativePlasticity</text>
<text text-anchor="start" x="164.5" y="-1682.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="164.5" y="-1671.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressTensor()</text>
<text text-anchor="start" x="164.5" y="-1660.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricStress</text>
<text text-anchor="start" x="164.5" y="-1649.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="164.5" y="-1638.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="164.5" y="-1627.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressAndConstitutive</text>
<text text-anchor="start" x="164.5" y="-1616.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="164.5" y="-1605.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Has()</text>
<text text-anchor="start" x="164.5" y="-1594.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="164.5" y="-1583.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="164.5" y="-1572.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="164.5" y="-1561.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="164.5" y="-1550.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="164.5" y="-1539.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetWorkingMeasures()</text>
<text text-anchor="start" x="164.5" y="-1528.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetWorkingMeasures()</text>
<text text-anchor="start" x="164.5" y="-1517.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateAndAddIsochoric</text>
<text text-anchor="start" x="164.5" y="-1506.5" font-family="Helvetica,sans-Serif" font-size="10.00">StressTensor()</text>
<text text-anchor="start" x="164.5" y="-1495.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateAndAddPlasticConstitutive</text>
<text text-anchor="start" x="164.5" y="-1484.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="164.5" y="-1473.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddPlasticConstitutiveComponent()</text>
<text text-anchor="start" x="164.5" y="-1462.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateReturnMapping()</text>
<text text-anchor="start" x="164.5" y="-1451.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateImplexReturnMapping()</text>
<text text-anchor="start" x="164.5" y="-1440.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeVariables()</text>
<text text-anchor="start" x="164.5" y="-1429.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateStressConfiguration()</text>
<text text-anchor="start" x="164.5" y="-1418.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateInternalVariables()</text>
<text text-anchor="start" x="164.5" y="-1407.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateScalingFactors()</text>
<text text-anchor="start" x="164.5" y="-1396.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateThermalDissipation()</text>
<text text-anchor="start" x="164.5" y="-1385.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateImplexThermalDissipation()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M261.5,-1368.21C261.5,-1359 261.5,-1349.83 261.5,-1340.71"/>
<polygon fill="none" stroke="midnightblue" points="258,-1368.22 261.5,-1378.22 265,-1368.22 258,-1368.22"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../d6/d39/class_kratos_1_1_plasticity_model.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="61,-2495.5 61,-3487.5 254,-3487.5 254,-2495.5 61,-2495.5"/>
<text text-anchor="start" x="69" y="-3475.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::PlasticityModel</text>
<text text-anchor="middle" x="157.5" y="-3464.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TElasticityModel, TYieldSurface &gt;</text>
<polyline fill="none" stroke="black" points="61,-3457.5 254,-3457.5 "/>
<text text-anchor="start" x="69" y="-3445.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mElasticityModel</text>
<text text-anchor="start" x="69" y="-3434.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mYieldSurface</text>
<polyline fill="none" stroke="black" points="61,-3427.5 254,-3427.5 "/>
<text text-anchor="start" x="69" y="-3415.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PlasticityModel()</text>
<text text-anchor="start" x="69" y="-3404.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PlasticityModel()</text>
<text text-anchor="start" x="69" y="-3393.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="69" y="-3382.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="69" y="-3371.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~PlasticityModel()</text>
<text text-anchor="start" x="69" y="-3360.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeMaterial()</text>
<text text-anchor="start" x="69" y="-3349.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeModel()</text>
<text text-anchor="start" x="69" y="-3338.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeModel()</text>
<text text-anchor="start" x="69" y="-3327.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressTensor()</text>
<text text-anchor="start" x="69" y="-3316.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricStress</text>
<text text-anchor="start" x="69" y="-3305.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-3294.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricStress</text>
<text text-anchor="start" x="69" y="-3283.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-3272.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="69" y="-3261.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricConstitutive</text>
<text text-anchor="start" x="69" y="-3250.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-3239.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricConstitutive</text>
<text text-anchor="start" x="69" y="-3228.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-3217.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressAndConstitutive</text>
<text text-anchor="start" x="69" y="-3206.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="69" y="-3195.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricStress</text>
<text text-anchor="start" x="69" y="-3184.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="69" y="-3173.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricStress</text>
<text text-anchor="start" x="69" y="-3162.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="69" y="-3151.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="69" y="-3140.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDomainVariablesList()</text>
<text text-anchor="start" x="69" y="-3129.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Has()</text>
<text text-anchor="start" x="69" y="-3118.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="69" y="-3107.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="69" y="-3096.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetElasticityModel()</text>
<text text-anchor="start" x="69" y="-3085.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="69" y="-3074.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="69" y="-3063.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="69" y="-3052.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetInternalVariables()</text>
<text text-anchor="start" x="69" y="-3041.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElasticityModelType</text>
<text text-anchor="start" x="69" y="-3030.5" font-family="Helvetica,sans-Serif" font-size="10.00">* YieldSurfaceType</text>
<text text-anchor="start" x="69" y="-3019.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="69" y="-3008.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VoigtIndexType</text>
<text text-anchor="start" x="69" y="-2997.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MatrixType</text>
<text text-anchor="start" x="69" y="-2986.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="69" y="-2975.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ModelDataType</text>
<text text-anchor="start" x="69" y="-2964.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticDataType</text>
<text text-anchor="start" x="69" y="-2953.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InternalVariablesType</text>
<text text-anchor="start" x="69" y="-2942.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="69" y="-2931.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="69" y="-2920.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mElasticityModel</text>
<text text-anchor="start" x="69" y="-2909.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mYieldSurface</text>
<text text-anchor="start" x="69" y="-2898.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="69" y="-2887.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="69" y="-2876.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="69" y="-2865.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticityModel()</text>
<text text-anchor="start" x="69" y="-2854.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticityModel()</text>
<text text-anchor="start" x="69" y="-2843.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="69" y="-2832.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="69" y="-2821.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~PlasticityModel()</text>
<text text-anchor="start" x="69" y="-2810.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeMaterial()</text>
<text text-anchor="start" x="69" y="-2799.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeModel()</text>
<text text-anchor="start" x="69" y="-2788.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeModel()</text>
<text text-anchor="start" x="69" y="-2777.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressTensor()</text>
<text text-anchor="start" x="69" y="-2766.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricStress</text>
<text text-anchor="start" x="69" y="-2755.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-2744.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricStress</text>
<text text-anchor="start" x="69" y="-2733.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-2722.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="69" y="-2711.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricConstitutive</text>
<text text-anchor="start" x="69" y="-2700.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-2689.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricConstitutive</text>
<text text-anchor="start" x="69" y="-2678.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-2667.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressAndConstitutive</text>
<text text-anchor="start" x="69" y="-2656.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="69" y="-2645.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricStress</text>
<text text-anchor="start" x="69" y="-2634.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="69" y="-2623.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricStress</text>
<text text-anchor="start" x="69" y="-2612.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="69" y="-2601.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="69" y="-2590.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDomainVariablesList()</text>
<text text-anchor="start" x="69" y="-2579.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Has()</text>
<text text-anchor="start" x="69" y="-2568.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="69" y="-2557.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="69" y="-2546.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetElasticityModel()</text>
<text text-anchor="start" x="69" y="-2535.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="69" y="-2524.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="69" y="-2513.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="69" y="-2502.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetInternalVariables()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M206.31,-2485.22C207.52,-2472.79 208.72,-2460.34 209.92,-2447.89"/>
<polygon fill="none" stroke="midnightblue" points="202.83,-2484.89 205.35,-2495.18 209.8,-2485.56 202.83,-2484.89"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../d0/dbd/class_kratos_1_1_constitutive_model.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="65,-3525.5 65,-4539.5 250,-4539.5 250,-3525.5 65,-3525.5"/>
<text text-anchor="middle" x="157.5" y="-4527.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ConstitutiveModel</text>
<polyline fill="none" stroke="black" points="65,-4520.5 250,-4520.5 "/>
<text text-anchor="middle" x="157.5" y="-4508.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="65,-4501.5 250,-4501.5 "/>
<text text-anchor="start" x="73" y="-4489.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="73" y="-4478.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="73" y="-4467.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="73" y="-4456.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="73" y="-4445.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="73" y="-4434.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="73" y="-4423.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-4412.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-4401.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="73" y="-4390.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="73" y="-4379.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-4368.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeMaterial()</text>
<text text-anchor="start" x="73" y="-4357.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeModel()</text>
<text text-anchor="start" x="73" y="-4346.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeModel()</text>
<text text-anchor="start" x="73" y="-4335.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStrainEnergy()</text>
<text text-anchor="start" x="73" y="-4324.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressTensor()</text>
<text text-anchor="start" x="73" y="-4313.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricStress</text>
<text text-anchor="start" x="73" y="-4302.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-4291.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricStress</text>
<text text-anchor="start" x="73" y="-4280.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-4269.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="73" y="-4258.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricConstitutive</text>
<text text-anchor="start" x="73" y="-4247.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-4236.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricConstitutive</text>
<text text-anchor="start" x="73" y="-4225.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-4214.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressAndConstitutive</text>
<text text-anchor="start" x="73" y="-4203.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="73" y="-4192.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricStress</text>
<text text-anchor="start" x="73" y="-4181.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="73" y="-4170.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricStress</text>
<text text-anchor="start" x="73" y="-4159.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="73" y="-4148.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="73" y="-4137.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Has()</text>
<text text-anchor="start" x="73" y="-4126.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="73" y="-4115.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="73" y="-4104.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="73" y="-4093.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="73" y="-4082.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDomainVariablesList()</text>
<text text-anchor="start" x="73" y="-4071.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="73" y="-4060.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="73" y="-4049.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="73" y="-4038.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="73" y="-4027.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="73" y="-4016.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MatrixType</text>
<text text-anchor="start" x="73" y="-4005.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ModelDataType</text>
<text text-anchor="start" x="73" y="-3994.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaterialDataType</text>
<text text-anchor="start" x="73" y="-3983.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StrainMeasureType</text>
<text text-anchor="start" x="73" y="-3972.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StressMeasureType</text>
<text text-anchor="start" x="73" y="-3961.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="73" y="-3950.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="73" y="-3939.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="73" y="-3928.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="73" y="-3917.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="73" y="-3906.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-3895.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-3884.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="73" y="-3873.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="73" y="-3862.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-3851.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeMaterial()</text>
<text text-anchor="start" x="73" y="-3840.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeModel()</text>
<text text-anchor="start" x="73" y="-3829.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeModel()</text>
<text text-anchor="start" x="73" y="-3818.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStrainEnergy()</text>
<text text-anchor="start" x="73" y="-3807.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressTensor()</text>
<text text-anchor="start" x="73" y="-3796.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricStress</text>
<text text-anchor="start" x="73" y="-3785.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-3774.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricStress</text>
<text text-anchor="start" x="73" y="-3763.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-3752.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="73" y="-3741.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricConstitutive</text>
<text text-anchor="start" x="73" y="-3730.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-3719.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricConstitutive</text>
<text text-anchor="start" x="73" y="-3708.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-3697.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressAndConstitutive</text>
<text text-anchor="start" x="73" y="-3686.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="73" y="-3675.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricStress</text>
<text text-anchor="start" x="73" y="-3664.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="73" y="-3653.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricStress</text>
<text text-anchor="start" x="73" y="-3642.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="73" y="-3631.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="73" y="-3620.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Has()</text>
<text text-anchor="start" x="73" y="-3609.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="73" y="-3598.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="73" y="-3587.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="73" y="-3576.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="73" y="-3565.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDomainVariablesList()</text>
<text text-anchor="start" x="73" y="-3554.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="73" y="-3543.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="73" y="-3532.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M157.5,-3515.05C157.5,-3505.96 157.5,-3496.87 157.5,-3487.79"/>
<polygon fill="none" stroke="midnightblue" points="154,-3515.32 157.5,-3525.32 161,-3515.32 154,-3515.32"/>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="../../d4/ddc/class_kratos_1_1array__1d.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="0,-4615 0,-5431 149,-5431 149,-4615 0,-4615"/>
<text text-anchor="middle" x="74.5" y="-5419" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::array_1d&lt; T, N &gt;</text>
<polyline fill="none" stroke="black" points="0,-5412 149,-5412 "/>
<text text-anchor="middle" x="74.5" y="-5400" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-5393 149,-5393 "/>
<text text-anchor="start" x="8" y="-5381" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-5370" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-5359" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-5348" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-5337" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-5326" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-5315" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-5304" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="8" y="-5293" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="8" y="-5282" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="8" y="-5271" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="8" y="-5260" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-5249" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-5238" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator+=()</text>
<text text-anchor="start" x="8" y="-5227" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator&#45;=()</text>
<text text-anchor="start" x="8" y="-5216" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator/=()</text>
<text text-anchor="start" x="8" y="-5205" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator==()</text>
<text text-anchor="start" x="8" y="-5194" font-family="Helvetica,sans-Serif" font-size="10.00">* size_type</text>
<text text-anchor="start" x="8" y="-5183" font-family="Helvetica,sans-Serif" font-size="10.00">* difference_type</text>
<text text-anchor="start" x="8" y="-5172" font-family="Helvetica,sans-Serif" font-size="10.00">* value_type</text>
<text text-anchor="start" x="8" y="-5161" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reference</text>
<text text-anchor="start" x="8" y="-5150" font-family="Helvetica,sans-Serif" font-size="10.00">* reference</text>
<text text-anchor="start" x="8" y="-5139" font-family="Helvetica,sans-Serif" font-size="10.00">* array_type</text>
<text text-anchor="start" x="8" y="-5128" font-family="Helvetica,sans-Serif" font-size="10.00">* pointer</text>
<text text-anchor="start" x="8" y="-5117" font-family="Helvetica,sans-Serif" font-size="10.00">* self_type</text>
<text text-anchor="start" x="8" y="-5106" font-family="Helvetica,sans-Serif" font-size="10.00">* const_closure_type</text>
<text text-anchor="start" x="8" y="-5095" font-family="Helvetica,sans-Serif" font-size="10.00">* closure_type</text>
<text text-anchor="start" x="8" y="-5084" font-family="Helvetica,sans-Serif" font-size="10.00">* vector_temporary_type</text>
<text text-anchor="start" x="8" y="-5073" font-family="Helvetica,sans-Serif" font-size="10.00">* storage_category</text>
<text text-anchor="start" x="8" y="-5062" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-5051" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-5040" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reverse_iterator</text>
<text text-anchor="start" x="8" y="-5029" font-family="Helvetica,sans-Serif" font-size="10.00">* reverse_iterator</text>
<text text-anchor="start" x="8" y="-5018" font-family="Helvetica,sans-Serif" font-size="10.00">* const_iterator_type</text>
<text text-anchor="start" x="8" y="-5007" font-family="Helvetica,sans-Serif" font-size="10.00">* iterator_type</text>
<text text-anchor="start" x="8" y="-4996" font-family="Helvetica,sans-Serif" font-size="10.00">* find()</text>
<text text-anchor="start" x="8" y="-4985" font-family="Helvetica,sans-Serif" font-size="10.00">* find()</text>
<text text-anchor="start" x="8" y="-4974" font-family="Helvetica,sans-Serif" font-size="10.00">* size()</text>
<text text-anchor="start" x="8" y="-4963" font-family="Helvetica,sans-Serif" font-size="10.00">* minus_assign()</text>
<text text-anchor="start" x="8" y="-4952" font-family="Helvetica,sans-Serif" font-size="10.00">* data()</text>
<text text-anchor="start" x="8" y="-4941" font-family="Helvetica,sans-Serif" font-size="10.00">* data()</text>
<text text-anchor="start" x="8" y="-4930" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="8" y="-4919" font-family="Helvetica,sans-Serif" font-size="10.00">* data_</text>
<text text-anchor="start" x="8" y="-4908" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4897" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4886" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4875" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4864" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4853" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4842" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4831" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="8" y="-4820" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="8" y="-4809" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="8" y="-4798" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="8" y="-4787" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-4776" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-4765" font-family="Helvetica,sans-Serif" font-size="10.00">* operator+=()</text>
<text text-anchor="start" x="8" y="-4754" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&#45;=()</text>
<text text-anchor="start" x="8" y="-4743" font-family="Helvetica,sans-Serif" font-size="10.00">* operator/=()</text>
<text text-anchor="start" x="8" y="-4732" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==()</text>
<text text-anchor="start" x="8" y="-4721" font-family="Helvetica,sans-Serif" font-size="10.00">* resize()</text>
<text text-anchor="start" x="8" y="-4710" font-family="Helvetica,sans-Serif" font-size="10.00">* assign_temporary()</text>
<text text-anchor="start" x="8" y="-4699" font-family="Helvetica,sans-Serif" font-size="10.00">* operator*=()</text>
<text text-anchor="start" x="8" y="-4688" font-family="Helvetica,sans-Serif" font-size="10.00">* plus_assign()</text>
<text text-anchor="start" x="8" y="-4677" font-family="Helvetica,sans-Serif" font-size="10.00">* assign()</text>
<text text-anchor="start" x="8" y="-4666" font-family="Helvetica,sans-Serif" font-size="10.00">* swap()</text>
<text text-anchor="start" x="8" y="-4655" font-family="Helvetica,sans-Serif" font-size="10.00">* insert_element()</text>
<text text-anchor="start" x="8" y="-4644" font-family="Helvetica,sans-Serif" font-size="10.00">* erase_element()</text>
<text text-anchor="start" x="8" y="-4633" font-family="Helvetica,sans-Serif" font-size="10.00">* clear()</text>
<text text-anchor="start" x="8" y="-4622" font-family="Helvetica,sans-Serif" font-size="10.00">* swap</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node5</title>
<path fill="none" stroke="#404040" d="M108.68,-4614.95C110.43,-4594.05 112.21,-4572.94 113.98,-4551.78"/>
<polygon fill="none" stroke="#404040" points="114,-4551.62 110.51,-4545.3 115,-4539.66 118.48,-4545.97 114,-4551.62"/>
<text text-anchor="middle" x="157.5" y="-4561" font-family="Helvetica,sans-Serif" font-size="10.00"> #mHistoryVector</text>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:title=" ">
<polygon fill="none" stroke="#bfbfbf" points="13.5,-5496.5 13.5,-5575.5 135.5,-5575.5 135.5,-5496.5 13.5,-5496.5"/>
<text text-anchor="start" x="21.5" y="-5563.5" font-family="Helvetica,sans-Serif" font-size="10.00">boost::numeric::ublas</text>
<text text-anchor="start" x="21.5" y="-5552.5" font-family="Helvetica,sans-Serif" font-size="10.00">::vector_expression&lt;</text>
<text text-anchor="middle" x="74.5" y="-5541.5" font-family="Helvetica,sans-Serif" font-size="10.00"> array_1d&lt; T, N &gt; &gt;</text>
<polyline fill="none" stroke="#bfbfbf" points="13.5,-5534.5 135.5,-5534.5 "/>
<text text-anchor="middle" x="74.5" y="-5522.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#bfbfbf" points="13.5,-5515.5 135.5,-5515.5 "/>
<text text-anchor="middle" x="74.5" y="-5503.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node6 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node6</title>
<path fill="none" stroke="midnightblue" d="M74.5,-5485.9C74.5,-5470.35 74.5,-5451.75 74.5,-5431.08"/>
<polygon fill="none" stroke="midnightblue" points="71,-5486.17 74.5,-5496.17 78,-5486.17 71,-5486.17"/>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="167,-4587.5 167,-5458.5 316,-5458.5 316,-4587.5 167,-4587.5"/>
<text text-anchor="middle" x="241.5" y="-5446.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="167,-5439.5 316,-5439.5 "/>
<text text-anchor="middle" x="241.5" y="-5427.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="167,-5420.5 316,-5420.5 "/>
<text text-anchor="start" x="175" y="-5408.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="175" y="-5397.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="175" y="-5386.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="175" y="-5375.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="175" y="-5364.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="175" y="-5353.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="175" y="-5342.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="175" y="-5331.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="175" y="-5320.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="175" y="-5309.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="175" y="-5298.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="175" y="-5287.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="175" y="-5276.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="175" y="-5265.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="175" y="-5254.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="175" y="-5243.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="175" y="-5232.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="175" y="-5221.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="175" y="-5210.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="175" y="-5199.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="175" y="-5188.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="175" y="-5177.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="175" y="-5166.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="175" y="-5155.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="175" y="-5144.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="175" y="-5133.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="175" y="-5122.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="175" y="-5111.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="175" y="-5100.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="175" y="-5089.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="175" y="-5078.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="175" y="-5067.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="175" y="-5056.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="175" y="-5045.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="175" y="-5034.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="175" y="-5023.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="175" y="-5012.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="175" y="-5001.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="175" y="-4990.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="175" y="-4979.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="175" y="-4968.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="175" y="-4957.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="175" y="-4946.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="175" y="-4935.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="175" y="-4924.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="175" y="-4913.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="175" y="-4902.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="175" y="-4891.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="175" y="-4880.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="175" y="-4869.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="175" y="-4858.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="175" y="-4847.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="175" y="-4836.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="175" y="-4825.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="175" y="-4814.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="175" y="-4803.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="175" y="-4792.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="175" y="-4781.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="175" y="-4770.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="175" y="-4759.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="175" y="-4748.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="175" y="-4737.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="175" y="-4726.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="175" y="-4715.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="175" y="-4704.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="175" y="-4693.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="175" y="-4682.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="175" y="-4671.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="175" y="-4660.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="175" y="-4649.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="175" y="-4638.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="175" y="-4627.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="175" y="-4616.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="175" y="-4605.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="175" y="-4594.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node5 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node5</title>
<path fill="none" stroke="#404040" d="M207.96,-4587.29C207.14,-4577.44 206.32,-4567.66 205.5,-4558 205.32,-4555.93 205.15,-4553.85 204.97,-4551.76"/>
<polygon fill="none" stroke="#404040" points="204.97,-4551.74 200.48,-4546.1 203.95,-4539.78 208.45,-4545.42 204.97,-4551.74"/>
<text text-anchor="middle" x="235" y="-4561" font-family="Helvetica,sans-Serif" font-size="10.00"> #mOptions</text>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="../../d1/d7a/struct_kratos_1_1_non_linear_associative_plasticity_model_1_1_thermal_variables.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="272,-2946.5 272,-3036.5 461,-3036.5 461,-2946.5 272,-2946.5"/>
<text text-anchor="start" x="280" y="-3024.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NonLinearAssociative</text>
<text text-anchor="start" x="280" y="-3013.5" font-family="Helvetica,sans-Serif" font-size="10.00">PlasticityModel&lt; TElasticityModel,</text>
<text text-anchor="middle" x="366.5" y="-3002.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TYieldSurface &gt;::ThermalVariables</text>
<polyline fill="none" stroke="black" points="272,-2995.5 461,-2995.5 "/>
<text text-anchor="start" x="280" y="-2983.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PlasticDissipation</text>
<text text-anchor="start" x="280" y="-2972.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ DeltaPlasticDissipation</text>
<polyline fill="none" stroke="black" points="272,-2965.5 461,-2965.5 "/>
<text text-anchor="middle" x="366.5" y="-2953.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node9&#45;&gt;Node3 -->
<g id="edge8" class="edge">
<title>Node9&#45;&gt;Node3</title>
<path fill="none" stroke="#404040" d="M362.19,-2946.29C353.79,-2860.18 334.33,-2660.71 314.74,-2459.84"/>
<polygon fill="none" stroke="#404040" points="314.73,-2459.78 310.17,-2454.19 313.57,-2447.83 318.13,-2453.42 314.73,-2459.78"/>
<text text-anchor="middle" x="370" y="-2469" font-family="Helvetica,sans-Serif" font-size="10.00"> #mThermalVariables</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_baker_johnson_cook_j2_thermo_plasticity_model__coll__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
