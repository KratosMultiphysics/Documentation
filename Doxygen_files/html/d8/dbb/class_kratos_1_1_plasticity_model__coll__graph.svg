<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::PlasticityModel&lt; TElasticityModel, TYieldSurface &gt; Pages: 1 -->
<!--zoomable 3089 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 324;
var viewHeight = 3089;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::PlasticityModel&lt; TElasticityModel, TYieldSurface &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Short class definition.">
<polygon fill="#bfbfbf" stroke="black" points="61,-0.5 61,-992.5 254,-992.5 254,-0.5 61,-0.5"/>
<text text-anchor="start" x="69" y="-980.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::PlasticityModel</text>
<text text-anchor="middle" x="157.5" y="-969.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TElasticityModel, TYieldSurface &gt;</text>
<polyline fill="none" stroke="black" points="61,-962.5 254,-962.5 "/>
<text text-anchor="start" x="69" y="-950.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mElasticityModel</text>
<text text-anchor="start" x="69" y="-939.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mYieldSurface</text>
<polyline fill="none" stroke="black" points="61,-932.5 254,-932.5 "/>
<text text-anchor="start" x="69" y="-920.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PlasticityModel()</text>
<text text-anchor="start" x="69" y="-909.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PlasticityModel()</text>
<text text-anchor="start" x="69" y="-898.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="69" y="-887.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="69" y="-876.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~PlasticityModel()</text>
<text text-anchor="start" x="69" y="-865.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeMaterial()</text>
<text text-anchor="start" x="69" y="-854.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeModel()</text>
<text text-anchor="start" x="69" y="-843.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeModel()</text>
<text text-anchor="start" x="69" y="-832.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressTensor()</text>
<text text-anchor="start" x="69" y="-821.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricStress</text>
<text text-anchor="start" x="69" y="-810.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-799.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricStress</text>
<text text-anchor="start" x="69" y="-788.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-777.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="69" y="-766.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricConstitutive</text>
<text text-anchor="start" x="69" y="-755.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-744.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricConstitutive</text>
<text text-anchor="start" x="69" y="-733.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-722.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressAndConstitutive</text>
<text text-anchor="start" x="69" y="-711.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="69" y="-700.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricStress</text>
<text text-anchor="start" x="69" y="-689.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="69" y="-678.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricStress</text>
<text text-anchor="start" x="69" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="69" y="-656.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="69" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDomainVariablesList()</text>
<text text-anchor="start" x="69" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Has()</text>
<text text-anchor="start" x="69" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="69" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="69" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetElasticityModel()</text>
<text text-anchor="start" x="69" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="69" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="69" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="69" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetInternalVariables()</text>
<text text-anchor="start" x="69" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElasticityModelType</text>
<text text-anchor="start" x="69" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">* YieldSurfaceType</text>
<text text-anchor="start" x="69" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="69" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VoigtIndexType</text>
<text text-anchor="start" x="69" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MatrixType</text>
<text text-anchor="start" x="69" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="69" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ModelDataType</text>
<text text-anchor="start" x="69" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticDataType</text>
<text text-anchor="start" x="69" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InternalVariablesType</text>
<text text-anchor="start" x="69" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="69" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="69" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mElasticityModel</text>
<text text-anchor="start" x="69" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mYieldSurface</text>
<text text-anchor="start" x="69" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="69" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="69" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="69" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticityModel()</text>
<text text-anchor="start" x="69" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticityModel()</text>
<text text-anchor="start" x="69" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="69" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="69" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~PlasticityModel()</text>
<text text-anchor="start" x="69" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeMaterial()</text>
<text text-anchor="start" x="69" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeModel()</text>
<text text-anchor="start" x="69" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeModel()</text>
<text text-anchor="start" x="69" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressTensor()</text>
<text text-anchor="start" x="69" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricStress</text>
<text text-anchor="start" x="69" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricStress</text>
<text text-anchor="start" x="69" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="69" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricConstitutive</text>
<text text-anchor="start" x="69" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricConstitutive</text>
<text text-anchor="start" x="69" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="69" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressAndConstitutive</text>
<text text-anchor="start" x="69" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="69" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricStress</text>
<text text-anchor="start" x="69" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="69" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricStress</text>
<text text-anchor="start" x="69" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="69" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="69" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDomainVariablesList()</text>
<text text-anchor="start" x="69" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Has()</text>
<text text-anchor="start" x="69" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="69" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="69" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetElasticityModel()</text>
<text text-anchor="start" x="69" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="69" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="69" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="69" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetInternalVariables()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d0/dbd/class_kratos_1_1_constitutive_model.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="65,-1030.5 65,-2044.5 250,-2044.5 250,-1030.5 65,-1030.5"/>
<text text-anchor="middle" x="157.5" y="-2032.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ConstitutiveModel</text>
<polyline fill="none" stroke="black" points="65,-2025.5 250,-2025.5 "/>
<text text-anchor="middle" x="157.5" y="-2013.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="65,-2006.5 250,-2006.5 "/>
<text text-anchor="start" x="73" y="-1994.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="73" y="-1983.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="73" y="-1972.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="73" y="-1961.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="73" y="-1950.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="73" y="-1939.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="73" y="-1928.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-1917.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-1906.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="73" y="-1895.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="73" y="-1884.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-1873.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeMaterial()</text>
<text text-anchor="start" x="73" y="-1862.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeModel()</text>
<text text-anchor="start" x="73" y="-1851.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeModel()</text>
<text text-anchor="start" x="73" y="-1840.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStrainEnergy()</text>
<text text-anchor="start" x="73" y="-1829.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressTensor()</text>
<text text-anchor="start" x="73" y="-1818.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricStress</text>
<text text-anchor="start" x="73" y="-1807.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-1796.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricStress</text>
<text text-anchor="start" x="73" y="-1785.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-1774.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="73" y="-1763.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricConstitutive</text>
<text text-anchor="start" x="73" y="-1752.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-1741.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricConstitutive</text>
<text text-anchor="start" x="73" y="-1730.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-1719.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressAndConstitutive</text>
<text text-anchor="start" x="73" y="-1708.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="73" y="-1697.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricStress</text>
<text text-anchor="start" x="73" y="-1686.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="73" y="-1675.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricStress</text>
<text text-anchor="start" x="73" y="-1664.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="73" y="-1653.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="73" y="-1642.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Has()</text>
<text text-anchor="start" x="73" y="-1631.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="73" y="-1620.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="73" y="-1609.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="73" y="-1598.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="73" y="-1587.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDomainVariablesList()</text>
<text text-anchor="start" x="73" y="-1576.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="73" y="-1565.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="73" y="-1554.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="73" y="-1543.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="73" y="-1532.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="73" y="-1521.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MatrixType</text>
<text text-anchor="start" x="73" y="-1510.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ModelDataType</text>
<text text-anchor="start" x="73" y="-1499.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaterialDataType</text>
<text text-anchor="start" x="73" y="-1488.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StrainMeasureType</text>
<text text-anchor="start" x="73" y="-1477.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StressMeasureType</text>
<text text-anchor="start" x="73" y="-1466.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="73" y="-1455.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="73" y="-1444.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="73" y="-1433.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="73" y="-1422.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="73" y="-1411.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-1400.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-1389.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="73" y="-1378.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="73" y="-1367.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-1356.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeMaterial()</text>
<text text-anchor="start" x="73" y="-1345.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeModel()</text>
<text text-anchor="start" x="73" y="-1334.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeModel()</text>
<text text-anchor="start" x="73" y="-1323.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStrainEnergy()</text>
<text text-anchor="start" x="73" y="-1312.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressTensor()</text>
<text text-anchor="start" x="73" y="-1301.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricStress</text>
<text text-anchor="start" x="73" y="-1290.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-1279.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricStress</text>
<text text-anchor="start" x="73" y="-1268.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-1257.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="73" y="-1246.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricConstitutive</text>
<text text-anchor="start" x="73" y="-1235.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-1224.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricConstitutive</text>
<text text-anchor="start" x="73" y="-1213.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-1202.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressAndConstitutive</text>
<text text-anchor="start" x="73" y="-1191.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="73" y="-1180.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricStress</text>
<text text-anchor="start" x="73" y="-1169.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="73" y="-1158.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricStress</text>
<text text-anchor="start" x="73" y="-1147.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="73" y="-1136.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="73" y="-1125.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Has()</text>
<text text-anchor="start" x="73" y="-1114.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="73" y="-1103.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="73" y="-1092.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="73" y="-1081.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="73" y="-1070.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDomainVariablesList()</text>
<text text-anchor="start" x="73" y="-1059.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="73" y="-1048.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="73" y="-1037.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M157.5,-1020.05C157.5,-1010.96 157.5,-1001.87 157.5,-992.79"/>
<polygon fill="none" stroke="midnightblue" points="154,-1020.32 157.5,-1030.32 161,-1020.32 154,-1020.32"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d4/ddc/class_kratos_1_1array__1d.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="0,-2120 0,-2936 149,-2936 149,-2120 0,-2120"/>
<text text-anchor="middle" x="74.5" y="-2924" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::array_1d&lt; T, N &gt;</text>
<polyline fill="none" stroke="black" points="0,-2917 149,-2917 "/>
<text text-anchor="middle" x="74.5" y="-2905" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-2898 149,-2898 "/>
<text text-anchor="start" x="8" y="-2886" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-2875" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-2864" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-2853" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-2842" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-2831" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-2820" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-2809" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="8" y="-2798" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="8" y="-2787" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="8" y="-2776" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="8" y="-2765" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-2754" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-2743" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator+=()</text>
<text text-anchor="start" x="8" y="-2732" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator&#45;=()</text>
<text text-anchor="start" x="8" y="-2721" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator/=()</text>
<text text-anchor="start" x="8" y="-2710" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator==()</text>
<text text-anchor="start" x="8" y="-2699" font-family="Helvetica,sans-Serif" font-size="10.00">* size_type</text>
<text text-anchor="start" x="8" y="-2688" font-family="Helvetica,sans-Serif" font-size="10.00">* difference_type</text>
<text text-anchor="start" x="8" y="-2677" font-family="Helvetica,sans-Serif" font-size="10.00">* value_type</text>
<text text-anchor="start" x="8" y="-2666" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reference</text>
<text text-anchor="start" x="8" y="-2655" font-family="Helvetica,sans-Serif" font-size="10.00">* reference</text>
<text text-anchor="start" x="8" y="-2644" font-family="Helvetica,sans-Serif" font-size="10.00">* array_type</text>
<text text-anchor="start" x="8" y="-2633" font-family="Helvetica,sans-Serif" font-size="10.00">* pointer</text>
<text text-anchor="start" x="8" y="-2622" font-family="Helvetica,sans-Serif" font-size="10.00">* self_type</text>
<text text-anchor="start" x="8" y="-2611" font-family="Helvetica,sans-Serif" font-size="10.00">* const_closure_type</text>
<text text-anchor="start" x="8" y="-2600" font-family="Helvetica,sans-Serif" font-size="10.00">* closure_type</text>
<text text-anchor="start" x="8" y="-2589" font-family="Helvetica,sans-Serif" font-size="10.00">* vector_temporary_type</text>
<text text-anchor="start" x="8" y="-2578" font-family="Helvetica,sans-Serif" font-size="10.00">* storage_category</text>
<text text-anchor="start" x="8" y="-2567" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-2556" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-2545" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reverse_iterator</text>
<text text-anchor="start" x="8" y="-2534" font-family="Helvetica,sans-Serif" font-size="10.00">* reverse_iterator</text>
<text text-anchor="start" x="8" y="-2523" font-family="Helvetica,sans-Serif" font-size="10.00">* const_iterator_type</text>
<text text-anchor="start" x="8" y="-2512" font-family="Helvetica,sans-Serif" font-size="10.00">* iterator_type</text>
<text text-anchor="start" x="8" y="-2501" font-family="Helvetica,sans-Serif" font-size="10.00">* find()</text>
<text text-anchor="start" x="8" y="-2490" font-family="Helvetica,sans-Serif" font-size="10.00">* find()</text>
<text text-anchor="start" x="8" y="-2479" font-family="Helvetica,sans-Serif" font-size="10.00">* size()</text>
<text text-anchor="start" x="8" y="-2468" font-family="Helvetica,sans-Serif" font-size="10.00">* minus_assign()</text>
<text text-anchor="start" x="8" y="-2457" font-family="Helvetica,sans-Serif" font-size="10.00">* data()</text>
<text text-anchor="start" x="8" y="-2446" font-family="Helvetica,sans-Serif" font-size="10.00">* data()</text>
<text text-anchor="start" x="8" y="-2435" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="8" y="-2424" font-family="Helvetica,sans-Serif" font-size="10.00">* data_</text>
<text text-anchor="start" x="8" y="-2413" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-2402" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-2391" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-2380" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-2369" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-2358" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-2347" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-2336" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="8" y="-2325" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="8" y="-2314" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="8" y="-2303" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="8" y="-2292" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-2281" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-2270" font-family="Helvetica,sans-Serif" font-size="10.00">* operator+=()</text>
<text text-anchor="start" x="8" y="-2259" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&#45;=()</text>
<text text-anchor="start" x="8" y="-2248" font-family="Helvetica,sans-Serif" font-size="10.00">* operator/=()</text>
<text text-anchor="start" x="8" y="-2237" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==()</text>
<text text-anchor="start" x="8" y="-2226" font-family="Helvetica,sans-Serif" font-size="10.00">* resize()</text>
<text text-anchor="start" x="8" y="-2215" font-family="Helvetica,sans-Serif" font-size="10.00">* assign_temporary()</text>
<text text-anchor="start" x="8" y="-2204" font-family="Helvetica,sans-Serif" font-size="10.00">* operator*=()</text>
<text text-anchor="start" x="8" y="-2193" font-family="Helvetica,sans-Serif" font-size="10.00">* plus_assign()</text>
<text text-anchor="start" x="8" y="-2182" font-family="Helvetica,sans-Serif" font-size="10.00">* assign()</text>
<text text-anchor="start" x="8" y="-2171" font-family="Helvetica,sans-Serif" font-size="10.00">* swap()</text>
<text text-anchor="start" x="8" y="-2160" font-family="Helvetica,sans-Serif" font-size="10.00">* insert_element()</text>
<text text-anchor="start" x="8" y="-2149" font-family="Helvetica,sans-Serif" font-size="10.00">* erase_element()</text>
<text text-anchor="start" x="8" y="-2138" font-family="Helvetica,sans-Serif" font-size="10.00">* clear()</text>
<text text-anchor="start" x="8" y="-2127" font-family="Helvetica,sans-Serif" font-size="10.00">* swap</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M108.68,-2119.95C110.43,-2099.05 112.21,-2077.94 113.98,-2056.78"/>
<polygon fill="none" stroke="#404040" points="114,-2056.62 110.51,-2050.3 115,-2044.66 118.48,-2050.97 114,-2056.62"/>
<text text-anchor="middle" x="157.5" y="-2066" font-family="Helvetica,sans-Serif" font-size="10.00"> #mHistoryVector</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:title=" ">
<polygon fill="none" stroke="#bfbfbf" points="13.5,-3001.5 13.5,-3080.5 135.5,-3080.5 135.5,-3001.5 13.5,-3001.5"/>
<text text-anchor="start" x="21.5" y="-3068.5" font-family="Helvetica,sans-Serif" font-size="10.00">boost::numeric::ublas</text>
<text text-anchor="start" x="21.5" y="-3057.5" font-family="Helvetica,sans-Serif" font-size="10.00">::vector_expression&lt;</text>
<text text-anchor="middle" x="74.5" y="-3046.5" font-family="Helvetica,sans-Serif" font-size="10.00"> array_1d&lt; T, N &gt; &gt;</text>
<polyline fill="none" stroke="#bfbfbf" points="13.5,-3039.5 135.5,-3039.5 "/>
<text text-anchor="middle" x="74.5" y="-3027.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#bfbfbf" points="13.5,-3020.5 135.5,-3020.5 "/>
<text text-anchor="middle" x="74.5" y="-3008.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M74.5,-2990.9C74.5,-2975.35 74.5,-2956.75 74.5,-2936.08"/>
<polygon fill="none" stroke="midnightblue" points="71,-2991.17 74.5,-3001.17 78,-2991.17 71,-2991.17"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="167,-2092.5 167,-2963.5 316,-2963.5 316,-2092.5 167,-2092.5"/>
<text text-anchor="middle" x="241.5" y="-2951.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="167,-2944.5 316,-2944.5 "/>
<text text-anchor="middle" x="241.5" y="-2932.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="167,-2925.5 316,-2925.5 "/>
<text text-anchor="start" x="175" y="-2913.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="175" y="-2902.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="175" y="-2891.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="175" y="-2880.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="175" y="-2869.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="175" y="-2858.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="175" y="-2847.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="175" y="-2836.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="175" y="-2825.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="175" y="-2814.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="175" y="-2803.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="175" y="-2792.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="175" y="-2781.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="175" y="-2770.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="175" y="-2759.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="175" y="-2748.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="175" y="-2737.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="175" y="-2726.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="175" y="-2715.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="175" y="-2704.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="175" y="-2693.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="175" y="-2682.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="175" y="-2671.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="175" y="-2660.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="175" y="-2649.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="175" y="-2638.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="175" y="-2627.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="175" y="-2616.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="175" y="-2605.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="175" y="-2594.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="175" y="-2583.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="175" y="-2572.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="175" y="-2561.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="175" y="-2550.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="175" y="-2539.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="175" y="-2528.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="175" y="-2517.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="175" y="-2506.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="175" y="-2495.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="175" y="-2484.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="175" y="-2473.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="175" y="-2462.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="175" y="-2451.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="175" y="-2440.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="175" y="-2429.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="175" y="-2418.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="175" y="-2407.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="175" y="-2396.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="175" y="-2385.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="175" y="-2374.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="175" y="-2363.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="175" y="-2352.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="175" y="-2341.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="175" y="-2330.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="175" y="-2319.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="175" y="-2308.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="175" y="-2297.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="175" y="-2286.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="175" y="-2275.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="175" y="-2264.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="175" y="-2253.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="175" y="-2242.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="175" y="-2231.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="175" y="-2220.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="175" y="-2209.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="175" y="-2198.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="175" y="-2187.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="175" y="-2176.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="175" y="-2165.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="175" y="-2154.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="175" y="-2143.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="175" y="-2132.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="175" y="-2121.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="175" y="-2110.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="175" y="-2099.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M207.96,-2092.29C207.14,-2082.44 206.32,-2072.66 205.5,-2063 205.32,-2060.93 205.15,-2058.85 204.97,-2056.76"/>
<polygon fill="none" stroke="#404040" points="204.97,-2056.74 200.48,-2051.1 203.95,-2044.78 208.45,-2050.42 204.97,-2056.74"/>
<text text-anchor="middle" x="235" y="-2066" font-family="Helvetica,sans-Serif" font-size="10.00"> #mOptions</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_plasticity_model__coll__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
