<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::FindGlobalNodalNeighboursProcess Pages: 1 -->
<!--zoomable 2240 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 202;
var viewHeight = 2240;
var sectionId = 'dynsection-0';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::FindGlobalNodalNeighboursProcess</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Short class definition.">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-233.5 194,-233.5 194,-0.5 0,-0.5"/>
<text text-anchor="start" x="8" y="-221.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::FindGlobalNodalNeighbours</text>
<text text-anchor="middle" x="97" y="-210.5" font-family="Helvetica,sans-Serif" font-size="10.00">Process</text>
<polyline fill="none" stroke="black" points="0,-203.5 194,-203.5 "/>
<text text-anchor="middle" x="97" y="-191.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-184.5 194,-184.5 "/>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* rModelPart</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* avg_nodes</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* rModelPart</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FindGlobalNodalNeighbours</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">Process()</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_DEPRECATED_MESSAGE()</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d6/de4/class_kratos_1_1_find_nodal_neighbours_for_entities_process.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="1,-270.5 1,-745.5 193,-745.5 193,-270.5 1,-270.5"/>
<text text-anchor="start" x="9" y="-733.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::FindNodalNeighbours</text>
<text text-anchor="start" x="9" y="-722.5" font-family="Helvetica,sans-Serif" font-size="10.00">ForEntitiesProcess&lt; ModelPart</text>
<text text-anchor="middle" x="97" y="-711.5" font-family="Helvetica,sans-Serif" font-size="10.00">::ElementsContainerType &gt;</text>
<polyline fill="none" stroke="black" points="1,-704.5 193,-704.5 "/>
<text text-anchor="middle" x="97" y="-692.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="1,-685.5 193,-685.5 "/>
<text text-anchor="start" x="9" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FindNodalNeighboursForEntities</text>
<text text-anchor="start" x="9" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">Process()</text>
<text text-anchor="start" x="9" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FindNodalNeighboursForEntities</text>
<text text-anchor="start" x="9" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">Process()</text>
<text text-anchor="start" x="9" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~FindNodalNeighboursForEntities</text>
<text text-anchor="start" x="9" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">Process()</text>
<text text-anchor="start" x="9" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="9" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="9" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="9" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="9" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="9" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="9" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodesContainerType</text>
<text text-anchor="start" x="9" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="9" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="9" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mrModelPart</text>
<text text-anchor="start" x="9" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mrDataCommunicator</text>
<text text-anchor="start" x="9" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mrOutputVariable</text>
<text text-anchor="start" x="9" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FindNodalNeighboursForEntities</text>
<text text-anchor="start" x="9" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00">Process()</text>
<text text-anchor="start" x="9" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FindNodalNeighboursForEntities</text>
<text text-anchor="start" x="9" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10.00">Process()</text>
<text text-anchor="start" x="9" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~FindNodalNeighboursForEntities</text>
<text text-anchor="start" x="9" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10.00">Process()</text>
<text text-anchor="start" x="9" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="9" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="9" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Execute()</text>
<text text-anchor="start" x="9" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearNeighbours()</text>
<text text-anchor="start" x="9" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetNeighbourIds()</text>
<text text-anchor="start" x="9" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetNodalNeighbourIdsMap()</text>
<text text-anchor="start" x="9" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="9" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="9" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="9" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetContainer()</text>
<text text-anchor="start" x="9" y="-299.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddHangingNodeIds()</text>
<text text-anchor="start" x="9" y="-288.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddUnique()</text>
<text text-anchor="start" x="9" y="-277.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddUniqueGlobalPointer()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M97,-260.11C97,-251.1 97,-242.26 97,-233.66"/>
<polygon fill="none" stroke="midnightblue" points="93.5,-260.35 97,-270.35 100.5,-260.35 93.5,-260.35"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d2/d8c/class_kratos_1_1_process.html" target="_top" xlink:title="The base class for all processes in Kratos.">
<polygon fill="none" stroke="black" points="10.5,-782.5 10.5,-1323.5 183.5,-1323.5 183.5,-782.5 10.5,-782.5"/>
<text text-anchor="middle" x="97" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Process</text>
<polyline fill="none" stroke="black" points="10.5,-1304.5 183.5,-1304.5 "/>
<text text-anchor="middle" x="97" y="-1292.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="10.5,-1285.5 183.5,-1285.5 "/>
<text text-anchor="start" x="18.5" y="-1273.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="18.5" y="-1262.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="18.5" y="-1251.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Process()</text>
<text text-anchor="start" x="18.5" y="-1240.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Process()</text>
<text text-anchor="start" x="18.5" y="-1229.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~Process()</text>
<text text-anchor="start" x="18.5" y="-1218.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="18.5" y="-1207.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="18.5" y="-1196.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Execute()</text>
<text text-anchor="start" x="18.5" y="-1185.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteInitialize()</text>
<text text-anchor="start" x="18.5" y="-1174.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteBeforeSolutionLoop()</text>
<text text-anchor="start" x="18.5" y="-1163.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteInitializeSolution</text>
<text text-anchor="start" x="18.5" y="-1152.5" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="18.5" y="-1141.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteFinalizeSolutionStep()</text>
<text text-anchor="start" x="18.5" y="-1130.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteBeforeOutputStep()</text>
<text text-anchor="start" x="18.5" y="-1119.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteAfterOutputStep()</text>
<text text-anchor="start" x="18.5" y="-1108.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteFinalize()</text>
<text text-anchor="start" x="18.5" y="-1097.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="18.5" y="-1086.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="18.5" y="-1075.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDefaultParameters()</text>
<text text-anchor="start" x="18.5" y="-1064.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="18.5" y="-1053.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="18.5" y="-1042.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="18.5" y="-1031.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="18.5" y="-1020.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="18.5" y="-1009.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Process()</text>
<text text-anchor="start" x="18.5" y="-998.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Process()</text>
<text text-anchor="start" x="18.5" y="-987.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Process()</text>
<text text-anchor="start" x="18.5" y="-976.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="18.5" y="-965.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="18.5" y="-954.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Execute()</text>
<text text-anchor="start" x="18.5" y="-943.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteInitialize()</text>
<text text-anchor="start" x="18.5" y="-932.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteBeforeSolutionLoop()</text>
<text text-anchor="start" x="18.5" y="-921.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteInitializeSolution</text>
<text text-anchor="start" x="18.5" y="-910.5" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="18.5" y="-899.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteFinalizeSolutionStep()</text>
<text text-anchor="start" x="18.5" y="-888.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteBeforeOutputStep()</text>
<text text-anchor="start" x="18.5" y="-877.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteAfterOutputStep()</text>
<text text-anchor="start" x="18.5" y="-866.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteFinalize()</text>
<text text-anchor="start" x="18.5" y="-855.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="18.5" y="-844.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="18.5" y="-833.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="18.5" y="-822.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="18.5" y="-811.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="18.5" y="-800.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="18.5" y="-789.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M97,-772.44C97,-763.53 97,-754.65 97,-745.81"/>
<polygon fill="none" stroke="midnightblue" points="93.5,-772.49 97,-782.49 100.5,-772.49 93.5,-772.49"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="22.5,-1360.5 22.5,-2231.5 171.5,-2231.5 171.5,-1360.5 22.5,-1360.5"/>
<text text-anchor="middle" x="97" y="-2219.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="22.5,-2212.5 171.5,-2212.5 "/>
<text text-anchor="middle" x="97" y="-2200.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="22.5,-2193.5 171.5,-2193.5 "/>
<text text-anchor="start" x="30.5" y="-2181.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="30.5" y="-2170.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="30.5" y="-2159.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="30.5" y="-2148.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="30.5" y="-2137.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="30.5" y="-2126.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="30.5" y="-2115.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="30.5" y="-2104.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="30.5" y="-2093.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="30.5" y="-2082.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="30.5" y="-2071.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="30.5" y="-2060.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="30.5" y="-2049.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="30.5" y="-2038.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="30.5" y="-2027.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="30.5" y="-2016.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="30.5" y="-2005.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="30.5" y="-1994.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="30.5" y="-1983.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="30.5" y="-1972.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="30.5" y="-1961.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="30.5" y="-1950.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="30.5" y="-1939.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="30.5" y="-1928.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="30.5" y="-1917.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="30.5" y="-1906.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="30.5" y="-1895.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="30.5" y="-1884.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="30.5" y="-1873.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="30.5" y="-1862.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="30.5" y="-1851.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="30.5" y="-1840.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="30.5" y="-1829.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="30.5" y="-1818.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="30.5" y="-1807.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="30.5" y="-1796.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="30.5" y="-1785.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="30.5" y="-1774.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="30.5" y="-1763.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="30.5" y="-1752.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="30.5" y="-1741.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="30.5" y="-1730.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="30.5" y="-1719.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="30.5" y="-1708.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="30.5" y="-1697.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="30.5" y="-1686.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="30.5" y="-1675.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="30.5" y="-1664.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="30.5" y="-1653.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="30.5" y="-1642.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="30.5" y="-1631.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="30.5" y="-1620.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="30.5" y="-1609.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="30.5" y="-1598.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="30.5" y="-1587.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="30.5" y="-1576.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="30.5" y="-1565.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="30.5" y="-1554.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="30.5" y="-1543.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="30.5" y="-1532.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="30.5" y="-1521.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="30.5" y="-1510.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="30.5" y="-1499.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="30.5" y="-1488.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="30.5" y="-1477.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="30.5" y="-1466.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="30.5" y="-1455.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="30.5" y="-1444.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="30.5" y="-1433.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="30.5" y="-1422.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="30.5" y="-1411.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="30.5" y="-1400.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="30.5" y="-1389.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="30.5" y="-1378.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="30.5" y="-1367.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M97,-1350.4C97,-1341.5 97,-1332.65 97,-1323.89"/>
<polygon fill="none" stroke="midnightblue" points="93.5,-1350.47 97,-1360.47 100.5,-1350.47 93.5,-1350.47"/>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_find_global_nodal_neighbours_process__inherit__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
