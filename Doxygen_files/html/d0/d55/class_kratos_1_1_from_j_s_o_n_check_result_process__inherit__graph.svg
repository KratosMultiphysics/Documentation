<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::FromJSONCheckResultProcess Pages: 1 -->
<!--zoomable 2641 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 199;
var viewHeight = 2641;
var sectionId = 'dynsection-0';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::FromJSONCheckResultProcess</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="This class is used in order to check results using a json file containing the solution a given model ...">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-1146.5 191,-1146.5 191,-0.5 0,-0.5"/>
<text text-anchor="start" x="8" y="-1134.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::FromJSONCheckResult</text>
<text text-anchor="middle" x="95.5" y="-1123.5" font-family="Helvetica,sans-Serif" font-size="10.00">Process</text>
<polyline fill="none" stroke="black" points="0,-1116.5 191,-1116.5 "/>
<text text-anchor="middle" x="95.5" y="-1104.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-1097.5 191,-1097.5 "/>
<text text-anchor="start" x="8" y="-1085.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FromJSONCheckResultProcess()</text>
<text text-anchor="start" x="8" y="-1074.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FromJSONCheckResultProcess()</text>
<text text-anchor="start" x="8" y="-1063.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~FromJSONCheckResultProcess()</text>
<text text-anchor="start" x="8" y="-1052.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="8" y="-1041.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteInitialize()</text>
<text text-anchor="start" x="8" y="-1030.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteFinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1019.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteFinalize()</text>
<text text-anchor="start" x="8" y="-1008.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="8" y="-997.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsCorrectResult()</text>
<text text-anchor="start" x="8" y="-986.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetErrorMessage()</text>
<text text-anchor="start" x="8" y="-975.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-964.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-953.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-942.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeDatabases()</text>
<text text-anchor="start" x="8" y="-931.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FillVariablesList()</text>
<text text-anchor="start" x="8" y="-920.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckFlag()</text>
<text text-anchor="start" x="8" y="-909.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckValues()</text>
<text text-anchor="start" x="8" y="-898.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FailMessage()</text>
<text text-anchor="start" x="8" y="-887.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckNodeValues()</text>
<text text-anchor="start" x="8" y="-876.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckNodeHistoricalValues()</text>
<text text-anchor="start" x="8" y="-865.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckGPValues()</text>
<text text-anchor="start" x="8" y="-854.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SizeDatabase()</text>
<text text-anchor="start" x="8" y="-843.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FillDatabase()</text>
<text text-anchor="start" x="8" y="-832.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetNodeIdentifier()</text>
<text text-anchor="start" x="8" y="-821.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetNodes()</text>
<text text-anchor="start" x="8" y="-810.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetElements()</text>
<text text-anchor="start" x="8" y="-799.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeRelevantDigits()</text>
<text text-anchor="start" x="8" y="-788.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetDefaultParameters()</text>
<text text-anchor="start" x="8" y="-777.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetModelPart()</text>
<text text-anchor="start" x="8" y="-766.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetSettings()</text>
<text text-anchor="start" x="8" y="-755.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetNodeDatabase()</text>
<text text-anchor="start" x="8" y="-744.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetGPDatabase()</text>
<text text-anchor="start" x="8" y="-733.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FromJSONCheckResultProcess()</text>
<text text-anchor="start" x="8" y="-722.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodesArrayType</text>
<text text-anchor="start" x="8" y="-711.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementsArrayType</text>
<text text-anchor="start" x="8" y="-700.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="8" y="-689.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="8" y="-678.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="8" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-656.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="8" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="8" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="8" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="8" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="8" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="8" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="8" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="8" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="8" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="8" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="8" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="8" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="8" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="8" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mrModelPart</text>
<text text-anchor="start" x="8" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mThisParameters</text>
<text text-anchor="start" x="8" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFrequency</text>
<text text-anchor="start" x="8" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mRelativeTolerance</text>
<text text-anchor="start" x="8" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mAbsoluteTolerance</text>
<text text-anchor="start" x="8" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mRelevantDigits</text>
<text text-anchor="start" x="8" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mTimeCounter</text>
<text text-anchor="start" x="8" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNodesArray</text>
<text text-anchor="start" x="8" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mElementsArray</text>
<text text-anchor="start" x="8" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpNodalVariableDoubleList</text>
<text text-anchor="start" x="8" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="8" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FromJSONCheckResultProcess()</text>
<text text-anchor="start" x="8" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FromJSONCheckResultProcess()</text>
<text text-anchor="start" x="8" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~FromJSONCheckResultProcess()</text>
<text text-anchor="start" x="8" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="8" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteInitialize()</text>
<text text-anchor="start" x="8" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteFinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteFinalize()</text>
<text text-anchor="start" x="8" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="8" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsCorrectResult()</text>
<text text-anchor="start" x="8" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetErrorMessage()</text>
<text text-anchor="start" x="8" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeDatabases()</text>
<text text-anchor="start" x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FillVariablesList()</text>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckFlag()</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckValues()</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FailMessage()</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckNodeValues()</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckNodeHistoricalValues()</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckGPValues()</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeDatabase()</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FillDatabase()</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetNodeIdentifier()</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetNodes()</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetElements()</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeRelevantDigits()</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetModelPart()</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSettings()</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetNodeDatabase()</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetGPDatabase()</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FromJSONCheckResultProcess()</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d2/d8c/class_kratos_1_1_process.html" target="_top" xlink:title="The base class for all processes in Kratos.">
<polygon fill="none" stroke="black" points="9,-1183.5 9,-1724.5 182,-1724.5 182,-1183.5 9,-1183.5"/>
<text text-anchor="middle" x="95.5" y="-1712.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Process</text>
<polyline fill="none" stroke="black" points="9,-1705.5 182,-1705.5 "/>
<text text-anchor="middle" x="95.5" y="-1693.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="9,-1686.5 182,-1686.5 "/>
<text text-anchor="start" x="17" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="17" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="17" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Process()</text>
<text text-anchor="start" x="17" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Process()</text>
<text text-anchor="start" x="17" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~Process()</text>
<text text-anchor="start" x="17" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="17" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="17" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Execute()</text>
<text text-anchor="start" x="17" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteInitialize()</text>
<text text-anchor="start" x="17" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteBeforeSolutionLoop()</text>
<text text-anchor="start" x="17" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteInitializeSolution</text>
<text text-anchor="start" x="17" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="17" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteFinalizeSolutionStep()</text>
<text text-anchor="start" x="17" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteBeforeOutputStep()</text>
<text text-anchor="start" x="17" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteAfterOutputStep()</text>
<text text-anchor="start" x="17" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteFinalize()</text>
<text text-anchor="start" x="17" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="17" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="17" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDefaultParameters()</text>
<text text-anchor="start" x="17" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="17" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="17" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="17" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="17" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="17" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Process()</text>
<text text-anchor="start" x="17" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Process()</text>
<text text-anchor="start" x="17" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Process()</text>
<text text-anchor="start" x="17" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="17" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="17" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Execute()</text>
<text text-anchor="start" x="17" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteInitialize()</text>
<text text-anchor="start" x="17" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteBeforeSolutionLoop()</text>
<text text-anchor="start" x="17" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteInitializeSolution</text>
<text text-anchor="start" x="17" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="17" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteFinalizeSolutionStep()</text>
<text text-anchor="start" x="17" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteBeforeOutputStep()</text>
<text text-anchor="start" x="17" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteAfterOutputStep()</text>
<text text-anchor="start" x="17" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteFinalize()</text>
<text text-anchor="start" x="17" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="17" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="17" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="17" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="17" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="17" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="17" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M95.5,-1173.19C95.5,-1164.41 95.5,-1155.53 95.5,-1146.57"/>
<polygon fill="none" stroke="midnightblue" points="92,-1173.45 95.5,-1183.45 99,-1173.45 92,-1173.45"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="21,-1761.5 21,-2632.5 170,-2632.5 170,-1761.5 21,-1761.5"/>
<text text-anchor="middle" x="95.5" y="-2620.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="21,-2613.5 170,-2613.5 "/>
<text text-anchor="middle" x="95.5" y="-2601.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="21,-2594.5 170,-2594.5 "/>
<text text-anchor="start" x="29" y="-2582.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="29" y="-2571.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="29" y="-2560.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="29" y="-2549.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="29" y="-2538.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="29" y="-2527.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="29" y="-2516.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="29" y="-2505.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="29" y="-2494.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="29" y="-2483.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="29" y="-2472.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="29" y="-2461.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="29" y="-2450.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="29" y="-2439.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="29" y="-2428.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="29" y="-2417.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="29" y="-2406.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="29" y="-2395.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="29" y="-2384.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="29" y="-2373.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="29" y="-2362.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="29" y="-2351.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="29" y="-2340.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="29" y="-2329.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="29" y="-2318.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="29" y="-2307.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="29" y="-2296.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="29" y="-2285.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="29" y="-2274.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="29" y="-2263.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="29" y="-2252.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="29" y="-2241.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="29" y="-2230.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="29" y="-2219.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="29" y="-2208.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="29" y="-2197.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="29" y="-2186.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="29" y="-2175.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="29" y="-2164.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="29" y="-2153.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="29" y="-2142.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="29" y="-2131.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="29" y="-2120.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="29" y="-2109.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="29" y="-2098.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="29" y="-2087.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="29" y="-2076.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="29" y="-2065.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="29" y="-2054.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="29" y="-2043.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="29" y="-2032.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="29" y="-2021.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="29" y="-2010.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="29" y="-1999.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="29" y="-1988.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="29" y="-1977.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="29" y="-1966.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="29" y="-1955.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="29" y="-1944.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="29" y="-1933.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="29" y="-1922.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="29" y="-1911.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="29" y="-1900.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="29" y="-1889.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="29" y="-1878.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="29" y="-1867.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="29" y="-1856.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="29" y="-1845.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="29" y="-1834.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="29" y="-1823.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="29" y="-1812.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="29" y="-1801.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="29" y="-1790.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="29" y="-1779.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="29" y="-1768.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M95.5,-1751.4C95.5,-1742.5 95.5,-1733.65 95.5,-1724.89"/>
<polygon fill="none" stroke="midnightblue" points="92,-1751.47 95.5,-1761.47 99,-1751.47 92,-1751.47"/>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_from_j_s_o_n_check_result_process__inherit__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
