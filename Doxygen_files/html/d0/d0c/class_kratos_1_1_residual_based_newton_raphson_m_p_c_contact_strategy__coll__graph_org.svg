<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::ResidualBasedNewtonRaphsonMPCContactStrategy&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt; Pages: 1 -->
<svg width="376pt" height="2682pt"
 viewBox="0.00 0.00 375.50 2682.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2678)">
<title>Kratos::ResidualBasedNewtonRaphsonMPCContactStrategy&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Contact Newton Raphson class.">
<polygon fill="#bfbfbf" stroke="black" points="99.5,-0.5 99.5,-398.5 278.5,-398.5 278.5,-0.5 99.5,-0.5"/>
<text text-anchor="start" x="107.5" y="-386.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedNewton</text>
<text text-anchor="start" x="107.5" y="-375.5" font-family="Helvetica,sans-Serif" font-size="10.00">RaphsonMPCContactStrategy</text>
<text text-anchor="start" x="107.5" y="-364.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="189" y="-353.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="99.5,-346.5 278.5,-346.5 "/>
<text text-anchor="start" x="107.5" y="-334.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpMPCContactCriteria</text>
<polyline fill="none" stroke="black" points="99.5,-327.5 278.5,-327.5 "/>
<text text-anchor="start" x="107.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="107.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="107.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">MPCContactStrategy()</text>
<text text-anchor="start" x="107.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategyType</text>
<text text-anchor="start" x="107.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StrategyBaseType</text>
<text text-anchor="start" x="107.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="107.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="107.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TConvergenceCriteriaType</text>
<text text-anchor="start" x="107.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TMPCContactCriteriaType</text>
<text text-anchor="start" x="107.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="107.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="107.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="107.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="107.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 20 more...</text>
<text text-anchor="start" x="107.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpMPCContactCriteria</text>
<text text-anchor="start" x="107.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="107.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Predict()</text>
<text text-anchor="start" x="107.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="107.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="107.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="107.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="107.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="107.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AuxiliarySolveSolutionStep()</text>
<text text-anchor="start" x="107.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="107.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="107.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="107.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="107.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">MPCContactStrategy()</text>
<text text-anchor="start" x="107.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeNodalWeights()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d4/dcd/class_kratos_1_1_residual_based_newton_raphson_strategy.html" target="_top" xlink:title="This is the base Newton Raphson strategy.">
<polygon fill="none" stroke="black" points="0,-446.5 0,-1515.5 186,-1515.5 186,-446.5 0,-446.5"/>
<text text-anchor="start" x="8" y="-1503.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedNewton</text>
<text text-anchor="start" x="8" y="-1492.5" font-family="Helvetica,sans-Serif" font-size="10.00">RaphsonStrategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="93" y="-1481.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="0,-1474.5 186,-1474.5 "/>
<text text-anchor="start" x="8" y="-1462.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpScheme</text>
<text text-anchor="start" x="8" y="-1451.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpBuilderAndSolver</text>
<text text-anchor="start" x="8" y="-1440.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpConvergenceCriteria</text>
<text text-anchor="start" x="8" y="-1429.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpDx</text>
<text text-anchor="start" x="8" y="-1418.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpb</text>
<text text-anchor="start" x="8" y="-1407.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpA</text>
<text text-anchor="start" x="8" y="-1396.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mReformDofSetAtEachStep</text>
<text text-anchor="start" x="8" y="-1385.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCalculateReactionsFlag</text>
<text text-anchor="start" x="8" y="-1374.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mUseOldStiffnessInFirstIteration</text>
<text text-anchor="start" x="8" y="-1363.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxIterationNumber</text>
<text text-anchor="start" x="8" y="-1352.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInitializeWasPerformed</text>
<text text-anchor="start" x="8" y="-1341.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mKeepSystemConstantDuring</text>
<text text-anchor="start" x="8" y="-1330.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations</text>
<polyline fill="none" stroke="black" points="0,-1323.5 186,-1323.5 "/>
<text text-anchor="start" x="8" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSystemMatrix()</text>
<text text-anchor="start" x="8" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSystemVector()</text>
<text text-anchor="start" x="8" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSolutionVector()</text>
<text text-anchor="start" x="8" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetKeepSystemConstantDuring</text>
<text text-anchor="start" x="8" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="8" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetKeepSystemConstantDuring</text>
<text text-anchor="start" x="8" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="8" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateDatabase()</text>
<text text-anchor="start" x="8" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00"># EchoInfo()</text>
<text text-anchor="start" x="8" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00"># MaxIterationsExceeded()</text>
<text text-anchor="start" x="8" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="8" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00"># WriteDofInfo()</text>
<text text-anchor="start" x="8" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="8" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="8" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TConvergenceCriteriaType</text>
<text text-anchor="start" x="8" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategyType</text>
<text text-anchor="start" x="8" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="8" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="8" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="8" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="8" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="8" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="8" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="8" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="8" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="8" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="8" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="8" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpConvergenceCriteria</text>
<text text-anchor="start" x="8" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDx</text>
<text text-anchor="start" x="8" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpb</text>
<text text-anchor="start" x="8" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpA</text>
<text text-anchor="start" x="8" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSetAtEachStep</text>
<text text-anchor="start" x="8" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="8" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mUseOldStiffnessInFirstIteration</text>
<text text-anchor="start" x="8" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxIterationNumber</text>
<text text-anchor="start" x="8" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="8" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mKeepSystemConstantDuring</text>
<text text-anchor="start" x="8" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations</text>
<text text-anchor="start" x="8" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="8" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="8" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="8" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="8" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="8" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="8" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="8" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="8" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="8" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="8" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="8" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="8" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="8" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="8" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="8" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="8" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="8" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="8" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="8" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="8" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 27 more...</text>
<text text-anchor="start" x="8" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSystemMatrix()</text>
<text text-anchor="start" x="8" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSystemVector()</text>
<text text-anchor="start" x="8" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSolutionVector()</text>
<text text-anchor="start" x="8" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetKeepSystemConstantDuring</text>
<text text-anchor="start" x="8" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="8" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetKeepSystemConstantDuring</text>
<text text-anchor="start" x="8" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="8" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateDatabase()</text>
<text text-anchor="start" x="8" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EchoInfo()</text>
<text text-anchor="start" x="8" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaxIterationsExceeded()</text>
<text text-anchor="start" x="8" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="8" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00">* WriteDofInfo()</text>
<text text-anchor="start" x="8" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="8" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M159.99,-436.09C161.55,-423.38 163.08,-410.92 164.58,-398.8"/>
<polygon fill="none" stroke="midnightblue" points="156.47,-435.98 158.72,-446.34 163.42,-436.84 156.47,-435.98"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d8/df2/class_kratos_1_1_implicit_solving_strategy.html" target="_top" xlink:title="Implicit solving strategy base class This is the base class from which we will derive all the implici...">
<polygon fill="none" stroke="black" points="7.5,-1553.5 7.5,-2050.5 178.5,-2050.5 178.5,-1553.5 7.5,-1553.5"/>
<text text-anchor="start" x="15.5" y="-2038.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ImplicitSolvingStrategy</text>
<text text-anchor="start" x="15.5" y="-2027.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="93" y="-2016.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="7.5,-2009.5 178.5,-2009.5 "/>
<text text-anchor="start" x="15.5" y="-1997.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mRebuildLevel</text>
<text text-anchor="start" x="15.5" y="-1986.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mStiffnessMatrixIsBuilt</text>
<polyline fill="none" stroke="black" points="7.5,-1979.5 178.5,-1979.5 "/>
<text text-anchor="start" x="15.5" y="-1967.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="15.5" y="-1956.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="15.5" y="-1945.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="15.5" y="-1934.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="15.5" y="-1923.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="15.5" y="-1912.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetRebuildLevel()</text>
<text text-anchor="start" x="15.5" y="-1901.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetRebuildLevel()</text>
<text text-anchor="start" x="15.5" y="-1890.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="15.5" y="-1879.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="15.5" y="-1868.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="15.5" y="-1857.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="15.5" y="-1846.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="15.5" y="-1835.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="15.5" y="-1824.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="15.5" y="-1813.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="15.5" y="-1802.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="15.5" y="-1791.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="15.5" y="-1780.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="15.5" y="-1769.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="15.5" y="-1758.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="15.5" y="-1747.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="15.5" y="-1736.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="15.5" y="-1725.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mRebuildLevel</text>
<text text-anchor="start" x="15.5" y="-1714.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mStiffnessMatrixIsBuilt</text>
<text text-anchor="start" x="15.5" y="-1703.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="15.5" y="-1692.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="15.5" y="-1681.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="15.5" y="-1670.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="15.5" y="-1659.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="15.5" y="-1648.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="15.5" y="-1637.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="15.5" y="-1626.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetRebuildLevel()</text>
<text text-anchor="start" x="15.5" y="-1615.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetRebuildLevel()</text>
<text text-anchor="start" x="15.5" y="-1604.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="15.5" y="-1593.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="15.5" y="-1582.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="15.5" y="-1571.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="15.5" y="-1560.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M93,-1543.14C93,-1534.07 93,-1524.88 93,-1515.6"/>
<polygon fill="none" stroke="midnightblue" points="89.5,-1543.33 93,-1553.33 96.5,-1543.33 89.5,-1543.33"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../de/d0a/class_kratos_1_1_solving_strategy.html" target="_top" xlink:title="Solving strategy base class This is the base class from which we will derive all the strategies (impl...">
<polygon fill="none" stroke="black" points="2,-2088.5 2,-2673.5 184,-2673.5 184,-2088.5 2,-2088.5"/>
<text text-anchor="start" x="10" y="-2661.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::SolvingStrategy</text>
<text text-anchor="middle" x="93" y="-2650.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace &gt;</text>
<polyline fill="none" stroke="black" points="2,-2643.5 184,-2643.5 "/>
<text text-anchor="start" x="10" y="-2631.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<polyline fill="none" stroke="black" points="2,-2624.5 184,-2624.5 "/>
<text text-anchor="start" x="10" y="-2612.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolvingStrategy()</text>
<text text-anchor="start" x="10" y="-2601.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolvingStrategy()</text>
<text text-anchor="start" x="10" y="-2590.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolvingStrategy()</text>
<text text-anchor="start" x="10" y="-2579.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SolvingStrategy()</text>
<text text-anchor="start" x="10" y="-2568.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="10" y="-2557.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="10" y="-2546.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="10" y="-2535.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ValidateAndAssignParameters()</text>
<text text-anchor="start" x="10" y="-2524.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="10" y="-2513.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="10" y="-2502.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="10" y="-2491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="10" y="-2480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="10" y="-2469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="10" y="-2458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="10" y="-2447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="10" y="-2436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="10" y="-2425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDofType</text>
<text text-anchor="start" x="10" y="-2414.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="10" y="-2403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodesArrayType</text>
<text text-anchor="start" x="10" y="-2392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementsArrayType</text>
<text text-anchor="start" x="10" y="-2381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConditionsArrayType</text>
<text text-anchor="start" x="10" y="-2370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="10" y="-2359.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="10" y="-2348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="10" y="-2337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpModelPart</text>
<text text-anchor="start" x="10" y="-2326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMoveMeshFlag</text>
<text text-anchor="start" x="10" y="-2315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
<text text-anchor="start" x="10" y="-2304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
<text text-anchor="start" x="10" y="-2293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
<text text-anchor="start" x="10" y="-2282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~SolvingStrategy()</text>
<text text-anchor="start" x="10" y="-2271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="10" y="-2260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Predict()</text>
<text text-anchor="start" x="10" y="-2249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="10" y="-2238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="10" y="-2227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="10" y="-2216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsConverged()</text>
<text text-anchor="start" x="10" y="-2205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateOutputData()</text>
<text text-anchor="start" x="10" y="-2194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="10" y="-2183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="10" y="-2172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="10" y="-2161.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 17 more...</text>
<text text-anchor="start" x="10" y="-2150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="10" y="-2139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="10" y="-2128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="10" y="-2117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ValidateAndAssignParameters()</text>
<text text-anchor="start" x="10" y="-2106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="10" y="-2095.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M93,-2078.1C93,-2068.87 93,-2059.66 93,-2050.51"/>
<polygon fill="none" stroke="midnightblue" points="89.5,-2078.12 93,-2088.12 96.5,-2078.12 89.5,-2078.12"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../dd/da0/class_kratos_1_1_parameters.html" target="_top" xlink:title="This class provides to Kratos a data structure for I/O based on the standard of JSON.">
<polygon fill="none" stroke="black" points="204.5,-512.5 204.5,-1449.5 367.5,-1449.5 367.5,-512.5 204.5,-512.5"/>
<text text-anchor="middle" x="286" y="-1437.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Parameters</text>
<polyline fill="none" stroke="black" points="204.5,-1430.5 367.5,-1430.5 "/>
<text text-anchor="middle" x="286" y="-1418.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="204.5,-1411.5 367.5,-1411.5 "/>
<text text-anchor="start" x="212.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="212.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Parameters()</text>
<text text-anchor="start" x="212.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Parameters()</text>
<text text-anchor="start" x="212.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Parameters()</text>
<text text-anchor="start" x="212.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Parameters()</text>
<text text-anchor="start" x="212.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Parameters()</text>
<text text-anchor="start" x="212.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~Parameters()</text>
<text text-anchor="start" x="212.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="212.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="212.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="212.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="212.5" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="212.5" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="212.5" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="212.5" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ WriteJsonString()</text>
<text text-anchor="start" x="212.5" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrettyPrintJsonString()</text>
<text text-anchor="start" x="212.5" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="212.5" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="212.5" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="212.5" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AddValue()</text>
<text text-anchor="start" x="212.5" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AddEmptyValue()</text>
<text text-anchor="start" x="212.5" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ RemoveValue()</text>
<text text-anchor="start" x="212.5" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ RemoveValues()</text>
<text text-anchor="start" x="212.5" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 66 more...</text>
<text text-anchor="start" x="212.5" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="212.5" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="212.5" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="212.5" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="212.5" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="212.5" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">* iterator</text>
<text text-anchor="start" x="212.5" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_iterator</text>
<text text-anchor="start" x="212.5" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">* json_iterator</text>
<text text-anchor="start" x="212.5" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">* json_const_iterator</text>
<text text-anchor="start" x="212.5" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">* json_iteration_proxy</text>
<text text-anchor="start" x="212.5" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">* json_const_iteration</text>
<text text-anchor="start" x="212.5" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">_proxy</text>
<text text-anchor="start" x="212.5" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="212.5" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="212.5" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="212.5" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="212.5" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="212.5" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpValue</text>
<text text-anchor="start" x="212.5" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpRoot</text>
<text text-anchor="start" x="212.5" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Parameters()</text>
<text text-anchor="start" x="212.5" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Parameters()</text>
<text text-anchor="start" x="212.5" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Parameters()</text>
<text text-anchor="start" x="212.5" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Parameters()</text>
<text text-anchor="start" x="212.5" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Parameters()</text>
<text text-anchor="start" x="212.5" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Parameters()</text>
<text text-anchor="start" x="212.5" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="212.5" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="212.5" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="212.5" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="212.5" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="212.5" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="212.5" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="212.5" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">* WriteJsonString()</text>
<text text-anchor="start" x="212.5" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrettyPrintJsonString()</text>
<text text-anchor="start" x="212.5" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="212.5" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="212.5" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="212.5" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddValue()</text>
<text text-anchor="start" x="212.5" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddEmptyValue()</text>
<text text-anchor="start" x="212.5" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RemoveValue()</text>
<text text-anchor="start" x="212.5" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RemoveValues()</text>
<text text-anchor="start" x="212.5" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 66 more...</text>
<text text-anchor="start" x="212.5" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="212.5" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="212.5" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="212.5" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Parameters()</text>
<text text-anchor="start" x="212.5" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Parameters()</text>
<text text-anchor="start" x="212.5" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Parameters()</text>
<text text-anchor="start" x="212.5" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetUnderlyingStorage()</text>
<text text-anchor="start" x="212.5" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetUnderlyingStorage()</text>
<text text-anchor="start" x="212.5" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUnderlyingSotrage()</text>
<text text-anchor="start" x="212.5" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetUnderlyingRootStorage()</text>
<text text-anchor="start" x="212.5" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetUnderlyingRootStorage()</text>
<text text-anchor="start" x="212.5" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUnderlyingRootStorage()</text>
<text text-anchor="start" x="212.5" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InternalSetValue()</text>
<text text-anchor="start" x="212.5" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveIncludes()</text>
<text text-anchor="start" x="212.5" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadFile()</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node1 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M227.79,-512.22C223.43,-477.22 219.19,-443.09 215.2,-411.03"/>
<polygon fill="none" stroke="#404040" points="215.16,-410.75 210.45,-405.29 213.68,-398.85 218.39,-404.31 215.16,-410.75"/>
<text text-anchor="middle" x="265.5" y="-420" font-family="Helvetica,sans-Serif" font-size="10.00"> #mThisParameters</text>
</g>
</g>
</svg>
