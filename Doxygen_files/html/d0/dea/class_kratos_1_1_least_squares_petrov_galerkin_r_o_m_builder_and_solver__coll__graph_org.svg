<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::LeastSquaresPetrovGalerkinROMBuilderAndSolver&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt; Pages: 1 -->
<svg width="457pt" height="4767pt"
 viewBox="0.00 0.00 457.00 4767.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 4763)">
<title>Kratos::LeastSquaresPetrovGalerkinROMBuilderAndSolver&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="This class provides an implementation for the LeastSquaresPetrovGalerkinROM builder and solver operat...">
<polygon fill="#bfbfbf" stroke="black" points="10.5,-0.5 10.5,-794.5 208.5,-794.5 208.5,-0.5 10.5,-0.5"/>
<text text-anchor="start" x="18.5" y="-782.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::LeastSquaresPetrov</text>
<text text-anchor="start" x="18.5" y="-771.5" font-family="Helvetica,sans-Serif" font-size="10.00">GalerkinROMBuilderAndSolver</text>
<text text-anchor="start" x="18.5" y="-760.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="109.5" y="-749.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="10.5,-742.5 208.5,-742.5 "/>
<text text-anchor="start" x="18.5" y="-730.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mNeighbouringAndSelected</text>
<text text-anchor="start" x="18.5" y="-719.5" font-family="Helvetica,sans-Serif" font-size="10.00">Elements</text>
<text text-anchor="start" x="18.5" y="-708.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mNeighbouringAndSelected</text>
<text text-anchor="start" x="18.5" y="-697.5" font-family="Helvetica,sans-Serif" font-size="10.00">Conditions</text>
<polyline fill="none" stroke="black" points="10.5,-690.5 208.5,-690.5 "/>
<text text-anchor="start" x="18.5" y="-678.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LeastSquaresPetrovGalerkin</text>
<text text-anchor="start" x="18.5" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00">ROMBuilderAndSolver()</text>
<text text-anchor="start" x="18.5" y="-656.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~LeastSquaresPetrovGalerkin</text>
<text text-anchor="start" x="18.5" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10.00">ROMBuilderAndSolver()</text>
<text text-anchor="start" x="18.5" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="18.5" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="18.5" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="18.5" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="18.5" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00"># BuildWithComplementaryMesh()</text>
<text text-anchor="start" x="18.5" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FindNeighbouringElements</text>
<text text-anchor="start" x="18.5" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConditions()</text>
<text text-anchor="start" x="18.5" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="18.5" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="18.5" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="18.5" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseBuilderAndSolverType</text>
<text text-anchor="start" x="18.5" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="18.5" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="18.5" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="18.5" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="18.5" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementsArrayType</text>
<text text-anchor="start" x="18.5" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConditionsArrayType</text>
<text text-anchor="start" x="18.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="18.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNeighbouringAndSelected</text>
<text text-anchor="start" x="18.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">Elements</text>
<text text-anchor="start" x="18.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNeighbouringAndSelected</text>
<text text-anchor="start" x="18.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">Conditions</text>
<text text-anchor="start" x="18.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNodalUnknowns</text>
<text text-anchor="start" x="18.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mTrainPetrovGalerkinFlag</text>
<text text-anchor="start" x="18.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mBasisStrategy</text>
<text text-anchor="start" x="18.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSolvingTechnique</text>
<text text-anchor="start" x="18.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEigenRomA</text>
<text text-anchor="start" x="18.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEigenRomB</text>
<text text-anchor="start" x="18.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPhiGlobal</text>
<text text-anchor="start" x="18.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mRightRomBasisInitialized</text>
<text text-anchor="start" x="18.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSelectedDofs</text>
<text text-anchor="start" x="18.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsSelectedDofsInitialized</text>
<text text-anchor="start" x="18.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LeastSquaresPetrovGalerkin</text>
<text text-anchor="start" x="18.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">ROMBuilderAndSolver()</text>
<text text-anchor="start" x="18.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~LeastSquaresPetrovGalerkin</text>
<text text-anchor="start" x="18.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">ROMBuilderAndSolver()</text>
<text text-anchor="start" x="18.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpDofSet()</text>
<text text-anchor="start" x="18.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndProjectROM()</text>
<text text-anchor="start" x="18.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndApplyDirichletConditions()</text>
<text text-anchor="start" x="18.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildWithComplementaryMesh</text>
<text text-anchor="start" x="18.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndApplyDirichletConditions()</text>
<text text-anchor="start" x="18.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSelectedDofs()</text>
<text text-anchor="start" x="18.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ZeroOutUnselectedComplementary</text>
<text text-anchor="start" x="18.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">MeshRows()</text>
<text text-anchor="start" x="18.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetRightROMBasis()</text>
<text text-anchor="start" x="18.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ProjectROM()</text>
<text text-anchor="start" x="18.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* WriteReactionDataToMatrix</text>
<text text-anchor="start" x="18.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">Market()</text>
<text text-anchor="start" x="18.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndSolve()</text>
<text text-anchor="start" x="18.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="18.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="18.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="18.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="18.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="18.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="18.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildWithComplementaryMesh()</text>
<text text-anchor="start" x="18.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FindNeighbouringElements</text>
<text text-anchor="start" x="18.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConditions()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../da/da9/class_kratos_1_1_global_r_o_m_builder_and_solver.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="18.5,-832.5 18.5,-1560.5 200.5,-1560.5 200.5,-832.5 18.5,-832.5"/>
<text text-anchor="start" x="26.5" y="-1548.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::GlobalROMBuilder</text>
<text text-anchor="start" x="26.5" y="-1537.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver&lt; TSparseSpace,</text>
<text text-anchor="middle" x="109.5" y="-1526.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="18.5,-1519.5 200.5,-1519.5 "/>
<text text-anchor="start" x="26.5" y="-1507.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mNodalDofs</text>
<text text-anchor="start" x="26.5" y="-1496.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMapPhi</text>
<text text-anchor="start" x="26.5" y="-1485.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mHromSimulation</text>
<text text-anchor="start" x="26.5" y="-1474.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mHromWeightsInitialized</text>
<text text-anchor="start" x="26.5" y="-1463.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mRightRomBasisInitialized</text>
<polyline fill="none" stroke="black" points="18.5,-1456.5 200.5,-1456.5 "/>
<text text-anchor="start" x="26.5" y="-1444.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GlobalROMBuilderAndSolver()</text>
<text text-anchor="start" x="26.5" y="-1433.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GlobalROMBuilderAndSolver()</text>
<text text-anchor="start" x="26.5" y="-1422.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~GlobalROMBuilderAndSolver()</text>
<text text-anchor="start" x="26.5" y="-1411.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="26.5" y="-1400.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="26.5" y="-1389.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="26.5" y="-1378.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="26.5" y="-1367.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="26.5" y="-1356.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="26.5" y="-1345.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseBuilderAndSolverType</text>
<text text-anchor="start" x="26.5" y="-1334.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="26.5" y="-1323.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="26.5" y="-1312.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="26.5" y="-1301.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="26.5" y="-1290.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="26.5" y="-1279.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="26.5" y="-1268.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 18 more...</text>
<text text-anchor="start" x="26.5" y="-1257.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNodalDofs</text>
<text text-anchor="start" x="26.5" y="-1246.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMapPhi</text>
<text text-anchor="start" x="26.5" y="-1235.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mHromSimulation</text>
<text text-anchor="start" x="26.5" y="-1224.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mHromWeightsInitialized</text>
<text text-anchor="start" x="26.5" y="-1213.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mRightRomBasisInitialized</text>
<text text-anchor="start" x="26.5" y="-1202.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNumberOfRomModes</text>
<text text-anchor="start" x="26.5" y="-1191.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEigenRomA</text>
<text text-anchor="start" x="26.5" y="-1180.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEigenRomB</text>
<text text-anchor="start" x="26.5" y="-1169.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPhiGlobal</text>
<text text-anchor="start" x="26.5" y="-1158.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMonotonicityPreservingFlag</text>
<text text-anchor="start" x="26.5" y="-1147.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GlobalROMBuilderAndSolver()</text>
<text text-anchor="start" x="26.5" y="-1136.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GlobalROMBuilderAndSolver()</text>
<text text-anchor="start" x="26.5" y="-1125.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~GlobalROMBuilderAndSolver()</text>
<text text-anchor="start" x="26.5" y="-1114.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="26.5" y="-1103.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpDofSet()</text>
<text text-anchor="start" x="26.5" y="-1092.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpSystem()</text>
<text text-anchor="start" x="26.5" y="-1081.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetNumberOfROMModes()</text>
<text text-anchor="start" x="26.5" y="-1070.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMonotonicityPreserving</text>
<text text-anchor="start" x="26.5" y="-1059.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="26.5" y="-1048.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ProjectToFineBasis()</text>
<text text-anchor="start" x="26.5" y="-1037.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRightROMBasis()</text>
<text text-anchor="start" x="26.5" y="-1026.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MonotonicityPreserving()</text>
<text text-anchor="start" x="26.5" y="-1015.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="26.5" y="-1004.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndSolve()</text>
<text text-anchor="start" x="26.5" y="-993.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResizeAndInitializeVectors()</text>
<text text-anchor="start" x="26.5" y="-982.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="26.5" y="-971.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="26.5" y="-960.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="26.5" y="-949.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="26.5" y="-938.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="26.5" y="-927.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="26.5" y="-916.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeHROMWeights()</text>
<text text-anchor="start" x="26.5" y="-905.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndProjectROM()</text>
<text text-anchor="start" x="26.5" y="-894.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Build()</text>
<text text-anchor="start" x="26.5" y="-883.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ProjectROM()</text>
<text text-anchor="start" x="26.5" y="-872.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveROM()</text>
<text text-anchor="start" x="26.5" y="-861.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExtractDofSet()</text>
<text text-anchor="start" x="26.5" y="-850.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SortAndRemoveDuplicateDofs()</text>
<text text-anchor="start" x="26.5" y="-839.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResizeIfNeeded()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M109.5,-821.99C109.5,-812.87 109.5,-803.74 109.5,-794.6"/>
<polygon fill="none" stroke="midnightblue" points="106,-822.28 109.5,-832.28 113,-822.28 106,-822.28"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d9/d26/class_kratos_1_1_residual_based_block_builder_and_solver.html" target="_top" xlink:title="Current class provides an implementation for standard builder and solving operations.">
<polygon fill="none" stroke="black" points="105,-1598.5 105,-2678.5 298,-2678.5 298,-1598.5 105,-1598.5"/>
<text text-anchor="start" x="113" y="-2666.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedBlock</text>
<text text-anchor="start" x="113" y="-2655.5" font-family="Helvetica,sans-Serif" font-size="10.00">BuilderAndSolver&lt; TSparseSpace,</text>
<text text-anchor="middle" x="201.5" y="-2644.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="105,-2637.5 298,-2637.5 "/>
<text text-anchor="start" x="113" y="-2625.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mT</text>
<text text-anchor="start" x="113" y="-2614.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mConstantVector</text>
<text text-anchor="start" x="113" y="-2603.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mSlaveIds</text>
<text text-anchor="start" x="113" y="-2592.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMasterIds</text>
<text text-anchor="start" x="113" y="-2581.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInactiveSlaveDofs</text>
<text text-anchor="start" x="113" y="-2570.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mScaleFactor</text>
<text text-anchor="start" x="113" y="-2559.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mScalingDiagonal</text>
<polyline fill="none" stroke="black" points="105,-2552.5 298,-2552.5 "/>
<text text-anchor="start" x="113" y="-2540.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="113" y="-2529.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="113" y="-2518.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="113" y="-2507.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="113" y="-2496.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="113" y="-2485.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="113" y="-2474.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="113" y="-2463.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="113" y="-2452.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="113" y="-2441.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConstraintRelationMatrix()</text>
<text text-anchor="start" x="113" y="-2430.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConstraintConstantVector()</text>
<text text-anchor="start" x="113" y="-2419.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetScaleFactor()</text>
<text text-anchor="start" x="113" y="-2408.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScaleFactor()</text>
<text text-anchor="start" x="113" y="-2397.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="113" y="-2386.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="113" y="-2375.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="113" y="-2364.5" font-family="Helvetica,sans-Serif" font-size="10.00"># BuildRHSNoDirichlet()</text>
<text text-anchor="start" x="113" y="-2353.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ConstructMasterSlaveConstraints</text>
<text text-anchor="start" x="113" y="-2342.5" font-family="Helvetica,sans-Serif" font-size="10.00">Structure()</text>
<text text-anchor="start" x="113" y="-2331.5" font-family="Helvetica,sans-Serif" font-size="10.00"># BuildMasterSlaveConstraints()</text>
<text text-anchor="start" x="113" y="-2320.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ConstructMatrixStructure()</text>
<text text-anchor="start" x="113" y="-2309.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Assemble()</text>
<text text-anchor="start" x="113" y="-2298.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssembleLHS()</text>
<text text-anchor="start" x="113" y="-2287.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssembleRHS()</text>
<text text-anchor="start" x="113" y="-2276.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssembleRowContribution()</text>
<text text-anchor="start" x="113" y="-2265.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="113" y="-2254.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="113" y="-2243.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="113" y="-2232.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="113" y="-2221.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="113" y="-2210.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="113" y="-2199.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="113" y="-2188.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="113" y="-2177.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="113" y="-2166.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="113" y="-2155.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="113" y="-2144.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 15 more...</text>
<text text-anchor="start" x="113" y="-2133.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mT</text>
<text text-anchor="start" x="113" y="-2122.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mConstantVector</text>
<text text-anchor="start" x="113" y="-2111.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSlaveIds</text>
<text text-anchor="start" x="113" y="-2100.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMasterIds</text>
<text text-anchor="start" x="113" y="-2089.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInactiveSlaveDofs</text>
<text text-anchor="start" x="113" y="-2078.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mScaleFactor</text>
<text text-anchor="start" x="113" y="-2067.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mScalingDiagonal</text>
<text text-anchor="start" x="113" y="-2056.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="113" y="-2045.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="113" y="-2034.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="113" y="-2023.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="113" y="-2012.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="113" y="-2001.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="113" y="-1990.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ResidualBasedBlockBuilder</text>
<text text-anchor="start" x="113" y="-1979.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndSolver()</text>
<text text-anchor="start" x="113" y="-1968.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="113" y="-1957.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Build()</text>
<text text-anchor="start" x="113" y="-1946.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildLHS()</text>
<text text-anchor="start" x="113" y="-1935.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildLHS_CompleteOnFreeRows()</text>
<text text-anchor="start" x="113" y="-1924.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemSolve()</text>
<text text-anchor="start" x="113" y="-1913.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemSolveWithPhysics()</text>
<text text-anchor="start" x="113" y="-1902.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InternalSystemSolveWithPhysics()</text>
<text text-anchor="start" x="113" y="-1891.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndSolve()</text>
<text text-anchor="start" x="113" y="-1880.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAndSolveLinearizedOn</text>
<text text-anchor="start" x="113" y="-1869.5" font-family="Helvetica,sans-Serif" font-size="10.00">PreviousIteration()</text>
<text text-anchor="start" x="113" y="-1858.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHSAndSolve()</text>
<text text-anchor="start" x="113" y="-1847.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHS()</text>
<text text-anchor="start" x="113" y="-1836.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 11 more...</text>
<text text-anchor="start" x="113" y="-1825.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConstraintRelationMatrix()</text>
<text text-anchor="start" x="113" y="-1814.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConstraintConstantVector()</text>
<text text-anchor="start" x="113" y="-1803.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetScaleFactor()</text>
<text text-anchor="start" x="113" y="-1792.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScaleFactor()</text>
<text text-anchor="start" x="113" y="-1781.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="113" y="-1770.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="113" y="-1759.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="113" y="-1748.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildRHSNoDirichlet()</text>
<text text-anchor="start" x="113" y="-1737.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstructMasterSlaveConstraints</text>
<text text-anchor="start" x="113" y="-1726.5" font-family="Helvetica,sans-Serif" font-size="10.00">Structure()</text>
<text text-anchor="start" x="113" y="-1715.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildMasterSlaveConstraints()</text>
<text text-anchor="start" x="113" y="-1704.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstructMatrixStructure()</text>
<text text-anchor="start" x="113" y="-1693.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Assemble()</text>
<text text-anchor="start" x="113" y="-1682.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleLHS()</text>
<text text-anchor="start" x="113" y="-1671.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleRHS()</text>
<text text-anchor="start" x="113" y="-1660.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssembleRowContribution()</text>
<text text-anchor="start" x="113" y="-1649.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="113" y="-1638.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddUnique()</text>
<text text-anchor="start" x="113" y="-1627.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CreatePartition()</text>
<text text-anchor="start" x="113" y="-1616.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ForwardFind()</text>
<text text-anchor="start" x="113" y="-1605.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BackwardFind()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M147.74,-1588.17C146.83,-1578.94 145.93,-1569.76 145.04,-1560.64"/>
<polygon fill="none" stroke="midnightblue" points="144.26,-1588.58 148.72,-1598.19 151.23,-1587.9 144.26,-1588.58"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../d2/d88/class_kratos_1_1_builder_and_solver.html" target="_top" xlink:title="Current class provides an implementation for the base builder and solving operations.">
<polygon fill="none" stroke="black" points="99.5,-2792.5 99.5,-3553.5 281.5,-3553.5 281.5,-2792.5 99.5,-2792.5"/>
<text text-anchor="start" x="107.5" y="-3541.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::BuilderAndSolver</text>
<text text-anchor="start" x="107.5" y="-3530.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="190.5" y="-3519.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="99.5,-3512.5 281.5,-3512.5 "/>
<text text-anchor="start" x="107.5" y="-3500.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpLinearSystemSolver</text>
<text text-anchor="start" x="107.5" y="-3489.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mReshapeMatrixFlag</text>
<text text-anchor="start" x="107.5" y="-3478.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mDofSetIsInitialized</text>
<text text-anchor="start" x="107.5" y="-3467.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCalculateReactionsFlag</text>
<text text-anchor="start" x="107.5" y="-3456.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEquationSystemSize</text>
<text text-anchor="start" x="107.5" y="-3445.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<text text-anchor="start" x="107.5" y="-3434.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpReactionsVector</text>
<polyline fill="none" stroke="black" points="99.5,-3427.5 281.5,-3427.5 "/>
<text text-anchor="start" x="107.5" y="-3415.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-3404.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-3393.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-3382.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-3371.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="107.5" y="-3360.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="107.5" y="-3349.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetEchoLevel()</text>
<text text-anchor="start" x="107.5" y="-3338.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConstraintRelationMatrix()</text>
<text text-anchor="start" x="107.5" y="-3327.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConstraintConstantVector()</text>
<text text-anchor="start" x="107.5" y="-3316.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="107.5" y="-3305.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="107.5" y="-3294.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="107.5" y="-3283.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ValidateAndAssignParameters()</text>
<text text-anchor="start" x="107.5" y="-3272.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="107.5" y="-3261.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="107.5" y="-3250.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="107.5" y="-3239.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="107.5" y="-3228.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="107.5" y="-3217.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="107.5" y="-3206.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="107.5" y="-3195.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="107.5" y="-3184.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="107.5" y="-3173.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="107.5" y="-3162.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="107.5" y="-3151.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="107.5" y="-3140.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpLinearSystemSolver</text>
<text text-anchor="start" x="107.5" y="-3129.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReshapeMatrixFlag</text>
<text text-anchor="start" x="107.5" y="-3118.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mDofSetIsInitialized</text>
<text text-anchor="start" x="107.5" y="-3107.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="107.5" y="-3096.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEquationSystemSize</text>
<text text-anchor="start" x="107.5" y="-3085.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="107.5" y="-3074.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpReactionsVector</text>
<text text-anchor="start" x="107.5" y="-3063.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-3052.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-3041.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-3030.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~BuilderAndSolver()</text>
<text text-anchor="start" x="107.5" y="-3019.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="107.5" y="-3008.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetCalculateReactionsFlag()</text>
<text text-anchor="start" x="107.5" y="-2997.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="107.5" y="-2986.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDofSetIsInitializedFlag()</text>
<text text-anchor="start" x="107.5" y="-2975.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDofSetIsInitializedFlag()</text>
<text text-anchor="start" x="107.5" y="-2964.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetReshapeMatrixFlag()</text>
<text text-anchor="start" x="107.5" y="-2953.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetReshapeMatrixFlag()</text>
<text text-anchor="start" x="107.5" y="-2942.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetEquationSystemSize()</text>
<text text-anchor="start" x="107.5" y="-2931.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetLinearSystemSolver()</text>
<text text-anchor="start" x="107.5" y="-2920.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetLinearSystemSolver()</text>
<text text-anchor="start" x="107.5" y="-2909.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildLHS()</text>
<text text-anchor="start" x="107.5" y="-2898.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 25 more...</text>
<text text-anchor="start" x="107.5" y="-2887.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="107.5" y="-2876.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetEchoLevel()</text>
<text text-anchor="start" x="107.5" y="-2865.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConstraintRelationMatrix()</text>
<text text-anchor="start" x="107.5" y="-2854.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConstraintConstantVector()</text>
<text text-anchor="start" x="107.5" y="-2843.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="107.5" y="-2832.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="107.5" y="-2821.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="107.5" y="-2810.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ValidateAndAssignParameters()</text>
<text text-anchor="start" x="107.5" y="-2799.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M194.65,-2782.28C195.01,-2748.35 195.38,-2713.66 195.75,-2678.82"/>
<polygon fill="none" stroke="midnightblue" points="191.15,-2782.26 194.55,-2792.3 198.15,-2782.34 191.15,-2782.26"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../db/dc6/class_kratos_1_1_pointer_vector_set.html" target="_top" xlink:title="A sorted associative container similar to an STL set, but uses a vector to store pointers to its data...">
<polygon fill="none" stroke="black" points="0,-3656.5 0,-4758.5 175,-4758.5 175,-3656.5 0,-3656.5"/>
<text text-anchor="start" x="8" y="-4746.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::PointerVectorSet</text>
<text text-anchor="start" x="8" y="-4735.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TDataType, TGetKeyType,</text>
<text text-anchor="start" x="8" y="-4724.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TCompareType, TEqualType,</text>
<text text-anchor="middle" x="87.5" y="-4713.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TPointerType, TContainerType &gt;</text>
<polyline fill="none" stroke="black" points="0,-4706.5 175,-4706.5 "/>
<text text-anchor="middle" x="87.5" y="-4694.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-4687.5 175,-4687.5 "/>
<text text-anchor="start" x="8" y="-4675.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-4664.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-4653.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-4642.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-4631.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-4620.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-4609.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="8" y="-4598.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="8" y="-4587.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator==()</text>
<text text-anchor="start" x="8" y="-4576.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator&lt;()</text>
<text text-anchor="start" x="8" y="-4565.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ begin()</text>
<text text-anchor="start" x="8" y="-4554.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ begin()</text>
<text text-anchor="start" x="8" y="-4543.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cbegin()</text>
<text text-anchor="start" x="8" y="-4532.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cbegin()</text>
<text text-anchor="start" x="8" y="-4521.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ end()</text>
<text text-anchor="start" x="8" y="-4510.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ end()</text>
<text text-anchor="start" x="8" y="-4499.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cend()</text>
<text text-anchor="start" x="8" y="-4488.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ cend()</text>
<text text-anchor="start" x="8" y="-4477.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ rbegin()</text>
<text text-anchor="start" x="8" y="-4466.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ rbegin()</text>
<text text-anchor="start" x="8" y="-4455.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 33 more...</text>
<text text-anchor="start" x="8" y="-4444.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetContainer()</text>
<text text-anchor="start" x="8" y="-4433.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetContainer()</text>
<text text-anchor="start" x="8" y="-4422.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMaxBufferSize()</text>
<text text-anchor="start" x="8" y="-4411.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetMaxBufferSize()</text>
<text text-anchor="start" x="8" y="-4400.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSortedPartSize()</text>
<text text-anchor="start" x="8" y="-4389.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetSortedPartSize()</text>
<text text-anchor="start" x="8" y="-4378.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ empty()</text>
<text text-anchor="start" x="8" y="-4367.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsSorted()</text>
<text text-anchor="start" x="8" y="-4356.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-4345.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-4334.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-4323.5" font-family="Helvetica,sans-Serif" font-size="10.00">* key_type</text>
<text text-anchor="start" x="8" y="-4312.5" font-family="Helvetica,sans-Serif" font-size="10.00">* data_type</text>
<text text-anchor="start" x="8" y="-4301.5" font-family="Helvetica,sans-Serif" font-size="10.00">* value_type</text>
<text text-anchor="start" x="8" y="-4290.5" font-family="Helvetica,sans-Serif" font-size="10.00">* key_compare</text>
<text text-anchor="start" x="8" y="-4279.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pointer</text>
<text text-anchor="start" x="8" y="-4268.5" font-family="Helvetica,sans-Serif" font-size="10.00">* reference</text>
<text text-anchor="start" x="8" y="-4257.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reference</text>
<text text-anchor="start" x="8" y="-4246.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ContainerType</text>
<text text-anchor="start" x="8" y="-4235.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-4224.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-4213.5" font-family="Helvetica,sans-Serif" font-size="10.00">* iterator</text>
<text text-anchor="start" x="8" y="-4202.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_iterator</text>
<text text-anchor="start" x="8" y="-4191.5" font-family="Helvetica,sans-Serif" font-size="10.00">* reverse_iterator</text>
<text text-anchor="start" x="8" y="-4180.5" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reverse_iterator</text>
<text text-anchor="start" x="8" y="-4169.5" font-family="Helvetica,sans-Serif" font-size="10.00">* size_type</text>
<text text-anchor="start" x="8" y="-4158.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_iterator</text>
<text text-anchor="start" x="8" y="-4147.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_const_iterator</text>
<text text-anchor="start" x="8" y="-4136.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_reverse_iterator</text>
<text text-anchor="start" x="8" y="-4125.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ptr_const_reverse_iterator</text>
<text text-anchor="start" x="8" y="-4114.5" font-family="Helvetica,sans-Serif" font-size="10.00">* difference_type</text>
<text text-anchor="start" x="8" y="-4103.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mData</text>
<text text-anchor="start" x="8" y="-4092.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSortedPartSize</text>
<text text-anchor="start" x="8" y="-4081.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxBufferSize</text>
<text text-anchor="start" x="8" y="-4070.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="8" y="-4059.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="8" y="-4048.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="8" y="-4037.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-4026.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-4015.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-4004.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-3993.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~PointerVectorSet()</text>
<text text-anchor="start" x="8" y="-3982.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-3971.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="8" y="-3960.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="8" y="-3949.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==()</text>
<text text-anchor="start" x="8" y="-3938.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&lt;()</text>
<text text-anchor="start" x="8" y="-3927.5" font-family="Helvetica,sans-Serif" font-size="10.00">* begin()</text>
<text text-anchor="start" x="8" y="-3916.5" font-family="Helvetica,sans-Serif" font-size="10.00">* begin()</text>
<text text-anchor="start" x="8" y="-3905.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cbegin()</text>
<text text-anchor="start" x="8" y="-3894.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cbegin()</text>
<text text-anchor="start" x="8" y="-3883.5" font-family="Helvetica,sans-Serif" font-size="10.00">* end()</text>
<text text-anchor="start" x="8" y="-3872.5" font-family="Helvetica,sans-Serif" font-size="10.00">* end()</text>
<text text-anchor="start" x="8" y="-3861.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cend()</text>
<text text-anchor="start" x="8" y="-3850.5" font-family="Helvetica,sans-Serif" font-size="10.00">* cend()</text>
<text text-anchor="start" x="8" y="-3839.5" font-family="Helvetica,sans-Serif" font-size="10.00">* rbegin()</text>
<text text-anchor="start" x="8" y="-3828.5" font-family="Helvetica,sans-Serif" font-size="10.00">* rbegin()</text>
<text text-anchor="start" x="8" y="-3817.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 33 more...</text>
<text text-anchor="start" x="8" y="-3806.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetContainer()</text>
<text text-anchor="start" x="8" y="-3795.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetContainer()</text>
<text text-anchor="start" x="8" y="-3784.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMaxBufferSize()</text>
<text text-anchor="start" x="8" y="-3773.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetMaxBufferSize()</text>
<text text-anchor="start" x="8" y="-3762.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSortedPartSize()</text>
<text text-anchor="start" x="8" y="-3751.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSortedPartSize()</text>
<text text-anchor="start" x="8" y="-3740.5" font-family="Helvetica,sans-Serif" font-size="10.00">* empty()</text>
<text text-anchor="start" x="8" y="-3729.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsSorted()</text>
<text text-anchor="start" x="8" y="-3718.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-3707.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-3696.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-3685.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyOf()</text>
<text text-anchor="start" x="8" y="-3674.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyOf()</text>
<text text-anchor="start" x="8" y="-3663.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyOf()</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge6" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M82.46,-3656.38C80.14,-3375.84 77.65,-3029.23 76.5,-2719 74.66,-2220.71 82.49,-2096.12 95.5,-1598 95.72,-1589.67 95.95,-1581.24 96.18,-1572.74"/>
<polygon fill="none" stroke="#404040" points="96.18,-1572.68 92.36,-1566.57 96.52,-1560.68 100.35,-1566.79 96.18,-1572.68"/>
<text text-anchor="middle" x="134" y="-2711" font-family="Helvetica,sans-Serif" font-size="10.00"> #mSelectedConditions</text>
<text text-anchor="middle" x="134" y="-2700" font-family="Helvetica,sans-Serif" font-size="10.00">#mSelectedElements</text>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M142.39,-3656.24C145.43,-3625.8 148.45,-3595.52 151.41,-3565.82"/>
<polygon fill="none" stroke="#404040" points="151.44,-3565.51 148.06,-3559.15 152.63,-3553.57 156.02,-3559.94 151.44,-3565.51"/>
<text text-anchor="middle" x="173" y="-3630" font-family="Helvetica,sans-Serif" font-size="10.00"> #mDofSet</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="300,-2737.5 300,-3608.5 449,-3608.5 449,-2737.5 300,-2737.5"/>
<text text-anchor="middle" x="374.5" y="-3596.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="300,-3589.5 449,-3589.5 "/>
<text text-anchor="middle" x="374.5" y="-3577.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="300,-3570.5 449,-3570.5 "/>
<text text-anchor="start" x="308" y="-3558.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="308" y="-3547.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="308" y="-3536.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="308" y="-3525.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="308" y="-3514.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="308" y="-3503.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="308" y="-3492.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="308" y="-3481.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="308" y="-3470.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="308" y="-3459.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="308" y="-3448.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="308" y="-3437.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="308" y="-3426.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="308" y="-3415.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="308" y="-3404.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="308" y="-3393.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="308" y="-3382.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="308" y="-3371.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="308" y="-3360.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="308" y="-3349.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="308" y="-3338.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="308" y="-3327.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="308" y="-3316.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="308" y="-3305.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="308" y="-3294.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="308" y="-3283.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="308" y="-3272.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="308" y="-3261.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="308" y="-3250.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="308" y="-3239.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="308" y="-3228.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="308" y="-3217.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="308" y="-3206.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="308" y="-3195.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="308" y="-3184.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="308" y="-3173.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="308" y="-3162.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="308" y="-3151.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="308" y="-3140.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="308" y="-3129.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="308" y="-3118.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="308" y="-3107.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="308" y="-3096.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="308" y="-3085.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="308" y="-3074.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="308" y="-3063.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="308" y="-3052.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="308" y="-3041.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="308" y="-3030.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="308" y="-3019.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="308" y="-3008.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="308" y="-2997.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="308" y="-2986.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="308" y="-2975.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="308" y="-2964.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="308" y="-2953.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="308" y="-2942.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="308" y="-2931.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="308" y="-2920.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="308" y="-2909.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="308" y="-2898.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="308" y="-2887.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="308" y="-2876.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="308" y="-2865.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="308" y="-2854.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="308" y="-2843.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="308" y="-2832.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="308" y="-2821.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="308" y="-2810.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="308" y="-2799.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="308" y="-2788.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="308" y="-2777.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="308" y="-2766.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="308" y="-2755.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="308" y="-2744.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node3 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node3</title>
<path fill="none" stroke="#404040" d="M301.7,-2737.49C299.1,-2722.01 296.49,-2706.42 293.87,-2690.79"/>
<polygon fill="none" stroke="#404040" points="293.85,-2690.67 288.91,-2685.41 291.87,-2678.83 296.8,-2684.09 293.85,-2690.67"/>
<text text-anchor="middle" x="328" y="-2705.5" font-family="Helvetica,sans-Serif" font-size="10.00"> #mOptions</text>
</g>
</g>
</svg>
