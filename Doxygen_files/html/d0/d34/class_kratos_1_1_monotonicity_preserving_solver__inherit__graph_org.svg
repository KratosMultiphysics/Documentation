<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::MonotonicityPreservingSolver&lt; TSparseSpaceType, TDenseSpaceType, TReordererType &gt; Pages: 1 -->
<svg width="210pt" height="1370pt"
 viewBox="0.00 0.00 210.00 1370.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1366)">
<title>Kratos::MonotonicityPreservingSolver&lt; TSparseSpaceType, TDenseSpaceType, TReordererType &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-508.5 202,-508.5 202,-0.5 0,-0.5"/>
<text text-anchor="start" x="8" y="-496.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::MonotonicityPreserving</text>
<text text-anchor="start" x="8" y="-485.5" font-family="Helvetica,sans-Serif" font-size="10.00">Solver&lt; TSparseSpaceType,</text>
<text text-anchor="middle" x="101" y="-474.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpaceType, TReordererType &gt;</text>
<polyline fill="none" stroke="black" points="0,-467.5 202,-467.5 "/>
<text text-anchor="middle" x="101" y="-455.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-448.5 202,-448.5 "/>
<text text-anchor="start" x="8" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ MonotonicityPreservingSolver()</text>
<text text-anchor="start" x="8" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ MonotonicityPreservingSolver()</text>
<text text-anchor="start" x="8" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ MonotonicityPreservingSolver()</text>
<text text-anchor="start" x="8" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ MonotonicityPreservingSolver()</text>
<text text-anchor="start" x="8" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~MonotonicityPreservingSolver()</text>
<text text-anchor="start" x="8" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AdditionalPhysicalDataIs</text>
<text text-anchor="start" x="8" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">Needed()</text>
<text text-anchor="start" x="8" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ProvideAdditionalData()</text>
<text text-anchor="start" x="8" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="8" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="8" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="8" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixType</text>
<text text-anchor="start" x="8" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolverFactoryType</text>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpLinearSolver</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MonotonicityPreservingSolver()</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MonotonicityPreservingSolver()</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MonotonicityPreservingSolver()</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MonotonicityPreservingSolver()</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~MonotonicityPreservingSolver()</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AdditionalPhysicalDataIs</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">Needed()</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ProvideAdditionalData()</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d1/df6/class_kratos_1_1_linear_solver.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="2,-545.5 2,-1361.5 200,-1361.5 200,-545.5 2,-545.5"/>
<text text-anchor="start" x="10" y="-1349.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::LinearSolver</text>
<text text-anchor="start" x="10" y="-1338.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpaceType, TDenseSpace</text>
<text text-anchor="start" x="10" y="-1327.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type, Reorderer&lt; TSparseSpaceType,</text>
<text text-anchor="middle" x="101" y="-1316.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpaceType &gt; &gt;</text>
<polyline fill="none" stroke="black" points="2,-1309.5 200,-1309.5 "/>
<text text-anchor="middle" x="101" y="-1297.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="2,-1290.5 200,-1290.5 "/>
<text text-anchor="start" x="10" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearSolver()</text>
<text text-anchor="start" x="10" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearSolver()</text>
<text text-anchor="start" x="10" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearSolver()</text>
<text text-anchor="start" x="10" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~LinearSolver()</text>
<text text-anchor="start" x="10" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="10" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="10" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="10" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PerformSolutionStep()</text>
<text text-anchor="start" x="10" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="10" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="10" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="10" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="10" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="10" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AdditionalPhysicalDataIs</text>
<text text-anchor="start" x="10" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">Needed()</text>
<text text-anchor="start" x="10" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ProvideAdditionalData()</text>
<text text-anchor="start" x="10" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetReorderer()</text>
<text text-anchor="start" x="10" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetReorderer()</text>
<text text-anchor="start" x="10" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetTolerance()</text>
<text text-anchor="start" x="10" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetTolerance()</text>
<text text-anchor="start" x="10" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetIterationsNumber()</text>
<text text-anchor="start" x="10" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsConsistent()</text>
<text text-anchor="start" x="10" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsConsistent()</text>
<text text-anchor="start" x="10" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotConsistent()</text>
<text text-anchor="start" x="10" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotConsistent()</text>
<text text-anchor="start" x="10" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="10" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="10" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="10" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixType</text>
<text text-anchor="start" x="10" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixPointerType</text>
<text text-anchor="start" x="10" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="10" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorPointerType</text>
<text text-anchor="start" x="10" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="10" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseVectorType</text>
<text text-anchor="start" x="10" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="10" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="10" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="10" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="10" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpReorderer</text>
<text text-anchor="start" x="10" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolver()</text>
<text text-anchor="start" x="10" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolver()</text>
<text text-anchor="start" x="10" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolver()</text>
<text text-anchor="start" x="10" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~LinearSolver()</text>
<text text-anchor="start" x="10" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="10" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="10" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="10" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PerformSolutionStep()</text>
<text text-anchor="start" x="10" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="10" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="10" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="10" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="10" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="10" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AdditionalPhysicalDataIs</text>
<text text-anchor="start" x="10" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">Needed()</text>
<text text-anchor="start" x="10" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ProvideAdditionalData()</text>
<text text-anchor="start" x="10" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetReorderer()</text>
<text text-anchor="start" x="10" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetReorderer()</text>
<text text-anchor="start" x="10" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetTolerance()</text>
<text text-anchor="start" x="10" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetTolerance()</text>
<text text-anchor="start" x="10" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetIterationsNumber()</text>
<text text-anchor="start" x="10" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsConsistent()</text>
<text text-anchor="start" x="10" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsConsistent()</text>
<text text-anchor="start" x="10" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotConsistent()</text>
<text text-anchor="start" x="10" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotConsistent()</text>
<text text-anchor="start" x="10" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="10" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="10" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M101,-535.16C101,-526.22 101,-517.34 101,-508.54"/>
<polygon fill="none" stroke="midnightblue" points="97.5,-535.29 101,-545.29 104.5,-535.29 97.5,-535.29"/>
</g>
</g>
</svg>
