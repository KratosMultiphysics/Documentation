<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::MPMBoundaryRotationUtility&lt; TLocalMatrixType, TLocalVectorType &gt; Pages: 1 -->
<svg width="212pt" height="1590pt"
 viewBox="0.00 0.00 212.00 1590.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1586)">
<title>Kratos::MPMBoundaryRotationUtility&lt; TLocalMatrixType, TLocalVectorType &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#bfbfbf" stroke="black" points="8,-0.5 8,-596.5 196,-596.5 196,-0.5 8,-0.5"/>
<text text-anchor="start" x="16" y="-584.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::MPMBoundaryRotation</text>
<text text-anchor="start" x="16" y="-573.5" font-family="Helvetica,sans-Serif" font-size="10.00">Utility&lt; TLocalMatrixType,</text>
<text text-anchor="middle" x="102" y="-562.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLocalVectorType &gt;</text>
<polyline fill="none" stroke="black" points="8,-555.5 196,-555.5 "/>
<text text-anchor="middle" x="102" y="-543.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="8,-536.5 196,-536.5 "/>
<text text-anchor="start" x="16" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ MPMBoundaryRotationUtility()</text>
<text text-anchor="start" x="16" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~MPMBoundaryRotationUtility()</text>
<text text-anchor="start" x="16" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="16" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Rotate()</text>
<text text-anchor="start" x="16" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ RevertRotate()</text>
<text text-anchor="start" x="16" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ApplySlipCondition()</text>
<text text-anchor="start" x="16" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ApplySlipCondition()</text>
<text text-anchor="start" x="16" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsParticleBasedSlip()</text>
<text text-anchor="start" x="16" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsParticleBasedSlip()</text>
<text text-anchor="start" x="16" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsConformingSlip()</text>
<text text-anchor="start" x="16" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ RotateDisplacements()</text>
<text text-anchor="start" x="16" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ RotateVelocities()</text>
<text text-anchor="start" x="16" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ RecoverDisplacements()</text>
<text text-anchor="start" x="16" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ RecoverVelocities()</text>
<text text-anchor="start" x="16" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateReactionForces()</text>
<text text-anchor="start" x="16" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ RotateVector()</text>
<text text-anchor="start" x="16" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ComputeFrictionAndResetFlags()</text>
<text text-anchor="start" x="16" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSlidingState()</text>
<text text-anchor="start" x="16" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="16" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="16" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="16" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="16" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GeometryType</text>
<text text-anchor="start" x="16" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="16" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="16" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SLIDING</text>
<text text-anchor="start" x="16" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* STICK</text>
<text text-anchor="start" x="16" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPMBoundaryRotationUtility()</text>
<text text-anchor="start" x="16" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~MPMBoundaryRotationUtility()</text>
<text text-anchor="start" x="16" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="16" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Rotate()</text>
<text text-anchor="start" x="16" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RevertRotate()</text>
<text text-anchor="start" x="16" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ApplySlipCondition()</text>
<text text-anchor="start" x="16" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ApplySlipCondition()</text>
<text text-anchor="start" x="16" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsParticleBasedSlip()</text>
<text text-anchor="start" x="16" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsParticleBasedSlip()</text>
<text text-anchor="start" x="16" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsConformingSlip()</text>
<text text-anchor="start" x="16" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RotateDisplacements()</text>
<text text-anchor="start" x="16" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RotateVelocities()</text>
<text text-anchor="start" x="16" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RecoverDisplacements()</text>
<text text-anchor="start" x="16" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RecoverVelocities()</text>
<text text-anchor="start" x="16" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateReactionForces()</text>
<text text-anchor="start" x="16" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RotateVector()</text>
<text text-anchor="start" x="16" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeFrictionAndResetFlags()</text>
<text text-anchor="start" x="16" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSlidingState()</text>
<text text-anchor="start" x="16" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="16" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="16" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../dd/db2/class_kratos_1_1_coordinate_transformation_utils.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="0,-633.5 0,-1581.5 204,-1581.5 204,-633.5 0,-633.5"/>
<text text-anchor="start" x="8" y="-1569.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::CoordinateTransformation</text>
<text text-anchor="start" x="8" y="-1558.5" font-family="Helvetica,sans-Serif" font-size="10.00">Utils&lt; TLocalMatrixType, TLocalVector</text>
<text text-anchor="middle" x="102" y="-1547.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type, double &gt;</text>
<polyline fill="none" stroke="black" points="0,-1540.5 204,-1540.5 "/>
<text text-anchor="middle" x="102" y="-1528.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-1521.5 204,-1521.5 "/>
<text text-anchor="start" x="8" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CoordinateTransformation</text>
<text text-anchor="start" x="8" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">Utils()</text>
<text text-anchor="start" x="8" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~CoordinateTransformation</text>
<text text-anchor="start" x="8" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">Utils()</text>
<text text-anchor="start" x="8" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateRotationOperator</text>
<text text-anchor="start" x="8" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">Pure()</text>
<text text-anchor="start" x="8" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LocalRotationOperatorPure()</text>
<text text-anchor="start" x="8" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LocalRotationOperatorPure()</text>
<text text-anchor="start" x="8" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateRotationOperator</text>
<text text-anchor="start" x="8" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">PureShapeSensitivities()</text>
<text text-anchor="start" x="8" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateRotationOperator</text>
<text text-anchor="start" x="8" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">PureShapeSensitivities()</text>
<text text-anchor="start" x="8" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateRotationOperator</text>
<text text-anchor="start" x="8" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">PureShapeSensitivities()</text>
<text text-anchor="start" x="8" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Rotate()</text>
<text text-anchor="start" x="8" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Rotate()</text>
<text text-anchor="start" x="8" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ RevertRotate()</text>
<text text-anchor="start" x="8" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ApplySlipCondition()</text>
<text text-anchor="start" x="8" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ApplySlipCondition()</text>
<text text-anchor="start" x="8" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ RotateVelocities()</text>
<text text-anchor="start" x="8" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ RecoverVelocities()</text>
<text text-anchor="start" x="8" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00"># RotateAux()</text>
<text text-anchor="start" x="8" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00"># RotateAuxPure()</text>
<text text-anchor="start" x="8" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00"># LocalRotationOperator2D()</text>
<text text-anchor="start" x="8" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00"># LocalRotationOperator3D()</text>
<text text-anchor="start" x="8" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00"># IsSlip()</text>
<text text-anchor="start" x="8" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Normalize()</text>
<text text-anchor="start" x="8" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetDomainSize()</text>
<text text-anchor="start" x="8" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetBlockSize()</text>
<text text-anchor="start" x="8" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="8" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GeometryType</text>
<text text-anchor="start" x="8" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mDomainSize</text>
<text text-anchor="start" x="8" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mBlockSize</text>
<text text-anchor="start" x="8" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mrFlag</text>
<text text-anchor="start" x="8" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CoordinateTransformation</text>
<text text-anchor="start" x="8" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">Utils()</text>
<text text-anchor="start" x="8" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~CoordinateTransformation</text>
<text text-anchor="start" x="8" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">Utils()</text>
<text text-anchor="start" x="8" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateRotationOperator</text>
<text text-anchor="start" x="8" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">Pure()</text>
<text text-anchor="start" x="8" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalRotationOperatorPure()</text>
<text text-anchor="start" x="8" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalRotationOperatorPure()</text>
<text text-anchor="start" x="8" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateRotationOperator</text>
<text text-anchor="start" x="8" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">PureShapeSensitivities()</text>
<text text-anchor="start" x="8" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateRotationOperator</text>
<text text-anchor="start" x="8" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">PureShapeSensitivities()</text>
<text text-anchor="start" x="8" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateRotationOperator</text>
<text text-anchor="start" x="8" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">PureShapeSensitivities()</text>
<text text-anchor="start" x="8" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Rotate()</text>
<text text-anchor="start" x="8" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Rotate()</text>
<text text-anchor="start" x="8" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RevertRotate()</text>
<text text-anchor="start" x="8" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ApplySlipCondition()</text>
<text text-anchor="start" x="8" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ApplySlipCondition()</text>
<text text-anchor="start" x="8" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RotateVelocities()</text>
<text text-anchor="start" x="8" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RecoverVelocities()</text>
<text text-anchor="start" x="8" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CoordinateTransformation</text>
<text text-anchor="start" x="8" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">Utils()</text>
<text text-anchor="start" x="8" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RotateRHSAux()</text>
<text text-anchor="start" x="8" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Dot()</text>
<text text-anchor="start" x="8" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorNormDerivative()</text>
<text text-anchor="start" x="8" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UnitVectorDerivative()</text>
<text text-anchor="start" x="8" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReadBlockMatrix()</text>
<text text-anchor="start" x="8" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">* WriteBlockMatrix()</text>
<text text-anchor="start" x="8" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RotateAux()</text>
<text text-anchor="start" x="8" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RotateAuxPure()</text>
<text text-anchor="start" x="8" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalRotationOperator2D()</text>
<text text-anchor="start" x="8" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalRotationOperator3D()</text>
<text text-anchor="start" x="8" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsSlip()</text>
<text text-anchor="start" x="8" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Normalize()</text>
<text text-anchor="start" x="8" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDomainSize()</text>
<text text-anchor="start" x="8" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetBlockSize()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M102,-623.21C102,-614.32 102,-605.48 102,-596.72"/>
<polygon fill="none" stroke="midnightblue" points="98.5,-623.27 102,-633.27 105.5,-623.27 98.5,-623.27"/>
</g>
</g>
</svg>
