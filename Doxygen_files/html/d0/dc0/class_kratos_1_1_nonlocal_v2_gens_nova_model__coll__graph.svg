<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::NonlocalV2GensNovaModel Pages: 1 -->
<!--zoomable 5419 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 626;
var viewHeight = 5419;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::NonlocalV2GensNovaModel</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Short class definition.">
<polygon fill="#bfbfbf" stroke="black" points="163.5,-0.5 163.5,-486.5 345.5,-486.5 345.5,-0.5 163.5,-0.5"/>
<text text-anchor="start" x="171.5" y="-474.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NonlocalV2GensNova</text>
<text text-anchor="middle" x="254.5" y="-463.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model</text>
<polyline fill="none" stroke="black" points="163.5,-456.5 345.5,-456.5 "/>
<text text-anchor="middle" x="254.5" y="-444.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="163.5,-437.5 345.5,-437.5 "/>
<text text-anchor="start" x="171.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NonlocalV2GensNovaModel()</text>
<text text-anchor="start" x="171.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NonlocalV2GensNovaModel()</text>
<text text-anchor="start" x="171.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="171.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="171.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NonlocalV2GensNovaModel()</text>
<text text-anchor="start" x="171.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="171.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="171.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="171.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateStressAndConstitutive</text>
<text text-anchor="start" x="171.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="171.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElasticityModelType</text>
<text text-anchor="start" x="171.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElasticityModelPointer</text>
<text text-anchor="start" x="171.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HardeningRuleType</text>
<text text-anchor="start" x="171.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* YieldSurfaceType</text>
<text text-anchor="start" x="171.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* YieldSurfacePointer</text>
<text text-anchor="start" x="171.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="171.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseTypePointer</text>
<text text-anchor="start" x="171.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="171.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VoigtIndexType</text>
<text text-anchor="start" x="171.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MatrixType</text>
<text text-anchor="start" x="171.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ModelDataType</text>
<text text-anchor="start" x="171.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaterialDataType</text>
<text text-anchor="start" x="171.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticDataType</text>
<text text-anchor="start" x="171.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InternalVariablesType</text>
<text text-anchor="start" x="171.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="171.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="171.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="171.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="171.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="171.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NonlocalV2GensNovaModel()</text>
<text text-anchor="start" x="171.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NonlocalV2GensNovaModel()</text>
<text text-anchor="start" x="171.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="171.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="171.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~NonlocalV2GensNovaModel()</text>
<text text-anchor="start" x="171.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="171.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="171.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="171.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressAndConstitutive</text>
<text text-anchor="start" x="171.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d6/dd0/class_kratos_1_1_structured_soil_model.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="150,-524.5 150,-1219.5 359,-1219.5 359,-524.5 150,-524.5"/>
<text text-anchor="start" x="158" y="-1207.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::StructuredSoilModel</text>
<text text-anchor="start" x="158" y="-1196.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TamagniniModel, GensNovaYield</text>
<text text-anchor="middle" x="254.5" y="-1185.5" font-family="Helvetica,sans-Serif" font-size="10.00">Surface&lt; GensNovaHardeningRule &gt; &gt;</text>
<polyline fill="none" stroke="black" points="150,-1178.5 359,-1178.5 "/>
<text text-anchor="start" x="158" y="-1166.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInitialized</text>
<polyline fill="none" stroke="black" points="150,-1159.5 359,-1159.5 "/>
<text text-anchor="start" x="158" y="-1147.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ StructuredSoilModel()</text>
<text text-anchor="start" x="158" y="-1136.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ StructuredSoilModel()</text>
<text text-anchor="start" x="158" y="-1125.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="158" y="-1114.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="158" y="-1103.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~StructuredSoilModel()</text>
<text text-anchor="start" x="158" y="-1092.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeModel()</text>
<text text-anchor="start" x="158" y="-1081.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="158" y="-1070.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Has()</text>
<text text-anchor="start" x="158" y="-1059.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="158" y="-1048.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="158" y="-1037.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="158" y="-1026.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="158" y="-1015.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="158" y="-1004.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeElastoPlasticTangent</text>
<text text-anchor="start" x="158" y="-993.5" font-family="Helvetica,sans-Serif" font-size="10.00">Matrix()</text>
<text text-anchor="start" x="158" y="-982.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeOneStepElastoPlastic</text>
<text text-anchor="start" x="158" y="-971.5" font-family="Helvetica,sans-Serif" font-size="10.00">Problem()</text>
<text text-anchor="start" x="158" y="-960.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateInternalVariables()</text>
<text text-anchor="start" x="158" y="-949.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ReturnStressToYieldSurface()</text>
<text text-anchor="start" x="158" y="-938.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElasticityModelType</text>
<text text-anchor="start" x="158" y="-927.5" font-family="Helvetica,sans-Serif" font-size="10.00">* YieldSurfaceType</text>
<text text-anchor="start" x="158" y="-916.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DerivedType</text>
<text text-anchor="start" x="158" y="-905.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="158" y="-894.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseTypePointer</text>
<text text-anchor="start" x="158" y="-883.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="158" y="-872.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VoigtIndexType</text>
<text text-anchor="start" x="158" y="-861.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MatrixType</text>
<text text-anchor="start" x="158" y="-850.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="158" y="-839.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ModelDataType</text>
<text text-anchor="start" x="158" y="-828.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaterialDataType</text>
<text text-anchor="start" x="158" y="-817.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticDataType</text>
<text text-anchor="start" x="158" y="-806.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InternalVariablesType</text>
<text text-anchor="start" x="158" y="-795.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="158" y="-784.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="158" y="-773.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitialized</text>
<text text-anchor="start" x="158" y="-762.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="158" y="-751.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="158" y="-740.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="158" y="-729.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StructuredSoilModel()</text>
<text text-anchor="start" x="158" y="-718.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StructuredSoilModel()</text>
<text text-anchor="start" x="158" y="-707.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="158" y="-696.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="158" y="-685.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~StructuredSoilModel()</text>
<text text-anchor="start" x="158" y="-674.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeModel()</text>
<text text-anchor="start" x="158" y="-663.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="158" y="-652.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Has()</text>
<text text-anchor="start" x="158" y="-641.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="158" y="-630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="158" y="-619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="158" y="-608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="158" y="-597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="158" y="-586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeElastoPlasticTangent</text>
<text text-anchor="start" x="158" y="-575.5" font-family="Helvetica,sans-Serif" font-size="10.00">Matrix()</text>
<text text-anchor="start" x="158" y="-564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeOneStepElastoPlastic</text>
<text text-anchor="start" x="158" y="-553.5" font-family="Helvetica,sans-Serif" font-size="10.00">Problem()</text>
<text text-anchor="start" x="158" y="-542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateInternalVariables()</text>
<text text-anchor="start" x="158" y="-531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReturnStressToYieldSurface()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M254.5,-514.3C254.5,-505.1 254.5,-495.95 254.5,-486.88"/>
<polygon fill="none" stroke="midnightblue" points="251,-514.31 254.5,-524.31 258,-514.31 251,-514.31"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d8/db3/class_kratos_1_1_non_associative_plasticity_model.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="143,-1257.5 143,-2282.5 366,-2282.5 366,-1257.5 143,-1257.5"/>
<text text-anchor="start" x="151" y="-2270.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NonAssociativePlasticity</text>
<text text-anchor="middle" x="254.5" y="-2259.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model&lt; TElasticityModel, TYieldSurface &gt;</text>
<polyline fill="none" stroke="black" points="143,-2252.5 366,-2252.5 "/>
<text text-anchor="start" x="151" y="-2240.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInternal</text>
<text text-anchor="start" x="151" y="-2229.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mPreviousInternal</text>
<polyline fill="none" stroke="black" points="143,-2222.5 366,-2222.5 "/>
<text text-anchor="start" x="151" y="-2210.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NonAssociativePlasticity</text>
<text text-anchor="start" x="151" y="-2199.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="151" y="-2188.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NonAssociativePlasticity</text>
<text text-anchor="start" x="151" y="-2177.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="151" y="-2166.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="151" y="-2155.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="151" y="-2144.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NonAssociativePlasticity</text>
<text text-anchor="start" x="151" y="-2133.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="151" y="-2122.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="151" y="-2111.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="151" y="-2100.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressTensor()</text>
<text text-anchor="start" x="151" y="-2089.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="151" y="-2078.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressAndConstitutive</text>
<text text-anchor="start" x="151" y="-2067.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="151" y="-2056.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="151" y="-2045.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="151" y="-2034.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="151" y="-2023.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AuxiliarCompressTensor()</text>
<text text-anchor="start" x="151" y="-2012.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetConstitutiveMatrixToThe</text>
<text text-anchor="start" x="151" y="-2001.5" font-family="Helvetica,sans-Serif" font-size="10.00">ApropiateSize()</text>
<text text-anchor="start" x="151" y="-1990.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ReturnStressToYieldSurface()</text>
<text text-anchor="start" x="151" y="-1979.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeElastoPlasticTangent</text>
<text text-anchor="start" x="151" y="-1968.5" font-family="Helvetica,sans-Serif" font-size="10.00">Matrix()</text>
<text text-anchor="start" x="151" y="-1957.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeSolutionWithChange()</text>
<text text-anchor="start" x="151" y="-1946.5" font-family="Helvetica,sans-Serif" font-size="10.00"># EvaluateUnloadingCondition()</text>
<text text-anchor="start" x="151" y="-1935.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeSubsteppingElasto</text>
<text text-anchor="start" x="151" y="-1924.5" font-family="Helvetica,sans-Serif" font-size="10.00">PlasticProblem()</text>
<text text-anchor="start" x="151" y="-1913.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeElastoPlasticProblem()</text>
<text text-anchor="start" x="151" y="-1902.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeOneStepElastoPlastic</text>
<text text-anchor="start" x="151" y="-1891.5" font-family="Helvetica,sans-Serif" font-size="10.00">Problem()</text>
<text text-anchor="start" x="151" y="-1880.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ConvertHenckyVectorToCauchy</text>
<text text-anchor="start" x="151" y="-1869.5" font-family="Helvetica,sans-Serif" font-size="10.00">GreenTensor()</text>
<text text-anchor="start" x="151" y="-1858.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 9 more...</text>
<text text-anchor="start" x="151" y="-1847.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElasticityModelType</text>
<text text-anchor="start" x="151" y="-1836.5" font-family="Helvetica,sans-Serif" font-size="10.00">* YieldSurfaceType</text>
<text text-anchor="start" x="151" y="-1825.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="151" y="-1814.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseTypePointer</text>
<text text-anchor="start" x="151" y="-1803.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="151" y="-1792.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VoigtIndexType</text>
<text text-anchor="start" x="151" y="-1781.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MatrixType</text>
<text text-anchor="start" x="151" y="-1770.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="151" y="-1759.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ModelDataType</text>
<text text-anchor="start" x="151" y="-1748.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaterialDataType</text>
<text text-anchor="start" x="151" y="-1737.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticDataType</text>
<text text-anchor="start" x="151" y="-1726.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InternalVariablesType</text>
<text text-anchor="start" x="151" y="-1715.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StrainMeasureType</text>
<text text-anchor="start" x="151" y="-1704.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StressMeasureType</text>
<text text-anchor="start" x="151" y="-1693.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="151" y="-1682.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="151" y="-1671.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInternal</text>
<text text-anchor="start" x="151" y="-1660.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPreviousInternal</text>
<text text-anchor="start" x="151" y="-1649.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="151" y="-1638.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="151" y="-1627.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="151" y="-1616.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NonAssociativePlasticity</text>
<text text-anchor="start" x="151" y="-1605.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="151" y="-1594.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NonAssociativePlasticity</text>
<text text-anchor="start" x="151" y="-1583.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="151" y="-1572.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="151" y="-1561.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="151" y="-1550.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~NonAssociativePlasticity</text>
<text text-anchor="start" x="151" y="-1539.5" font-family="Helvetica,sans-Serif" font-size="10.00">Model()</text>
<text text-anchor="start" x="151" y="-1528.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="151" y="-1517.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="151" y="-1506.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressTensor()</text>
<text text-anchor="start" x="151" y="-1495.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="151" y="-1484.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressAndConstitutive</text>
<text text-anchor="start" x="151" y="-1473.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="151" y="-1462.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="151" y="-1451.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="151" y="-1440.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="151" y="-1429.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AuxiliarCompressTensor()</text>
<text text-anchor="start" x="151" y="-1418.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetConstitutiveMatrixToThe</text>
<text text-anchor="start" x="151" y="-1407.5" font-family="Helvetica,sans-Serif" font-size="10.00">ApropiateSize()</text>
<text text-anchor="start" x="151" y="-1396.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReturnStressToYieldSurface()</text>
<text text-anchor="start" x="151" y="-1385.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeElastoPlasticTangent</text>
<text text-anchor="start" x="151" y="-1374.5" font-family="Helvetica,sans-Serif" font-size="10.00">Matrix()</text>
<text text-anchor="start" x="151" y="-1363.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeSolutionWithChange()</text>
<text text-anchor="start" x="151" y="-1352.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EvaluateUnloadingCondition()</text>
<text text-anchor="start" x="151" y="-1341.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeSubsteppingElasto</text>
<text text-anchor="start" x="151" y="-1330.5" font-family="Helvetica,sans-Serif" font-size="10.00">PlasticProblem()</text>
<text text-anchor="start" x="151" y="-1319.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeElastoPlasticProblem()</text>
<text text-anchor="start" x="151" y="-1308.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeOneStepElastoPlastic</text>
<text text-anchor="start" x="151" y="-1297.5" font-family="Helvetica,sans-Serif" font-size="10.00">Problem()</text>
<text text-anchor="start" x="151" y="-1286.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConvertHenckyVectorToCauchy</text>
<text text-anchor="start" x="151" y="-1275.5" font-family="Helvetica,sans-Serif" font-size="10.00">GreenTensor()</text>
<text text-anchor="start" x="151" y="-1264.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 9 more...</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M254.5,-1247.14C254.5,-1237.88 254.5,-1228.67 254.5,-1219.51"/>
<polygon fill="none" stroke="midnightblue" points="251,-1247.21 254.5,-1257.21 258,-1247.21 251,-1247.21"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../d6/d39/class_kratos_1_1_plasticity_model.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="63,-2330.5 63,-3322.5 256,-3322.5 256,-2330.5 63,-2330.5"/>
<text text-anchor="start" x="71" y="-3310.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::PlasticityModel</text>
<text text-anchor="middle" x="159.5" y="-3299.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TElasticityModel, TYieldSurface &gt;</text>
<polyline fill="none" stroke="black" points="63,-3292.5 256,-3292.5 "/>
<text text-anchor="start" x="71" y="-3280.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mElasticityModel</text>
<text text-anchor="start" x="71" y="-3269.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mYieldSurface</text>
<polyline fill="none" stroke="black" points="63,-3262.5 256,-3262.5 "/>
<text text-anchor="start" x="71" y="-3250.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PlasticityModel()</text>
<text text-anchor="start" x="71" y="-3239.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PlasticityModel()</text>
<text text-anchor="start" x="71" y="-3228.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="71" y="-3217.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="71" y="-3206.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~PlasticityModel()</text>
<text text-anchor="start" x="71" y="-3195.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeMaterial()</text>
<text text-anchor="start" x="71" y="-3184.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeModel()</text>
<text text-anchor="start" x="71" y="-3173.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeModel()</text>
<text text-anchor="start" x="71" y="-3162.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressTensor()</text>
<text text-anchor="start" x="71" y="-3151.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricStress</text>
<text text-anchor="start" x="71" y="-3140.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="71" y="-3129.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricStress</text>
<text text-anchor="start" x="71" y="-3118.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="71" y="-3107.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="71" y="-3096.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricConstitutive</text>
<text text-anchor="start" x="71" y="-3085.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="71" y="-3074.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricConstitutive</text>
<text text-anchor="start" x="71" y="-3063.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="71" y="-3052.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressAndConstitutive</text>
<text text-anchor="start" x="71" y="-3041.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="71" y="-3030.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricStress</text>
<text text-anchor="start" x="71" y="-3019.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="71" y="-3008.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricStress</text>
<text text-anchor="start" x="71" y="-2997.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="71" y="-2986.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="71" y="-2975.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDomainVariablesList()</text>
<text text-anchor="start" x="71" y="-2964.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Has()</text>
<text text-anchor="start" x="71" y="-2953.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="71" y="-2942.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="71" y="-2931.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetElasticityModel()</text>
<text text-anchor="start" x="71" y="-2920.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="71" y="-2909.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="71" y="-2898.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="71" y="-2887.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetInternalVariables()</text>
<text text-anchor="start" x="71" y="-2876.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElasticityModelType</text>
<text text-anchor="start" x="71" y="-2865.5" font-family="Helvetica,sans-Serif" font-size="10.00">* YieldSurfaceType</text>
<text text-anchor="start" x="71" y="-2854.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="71" y="-2843.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VoigtIndexType</text>
<text text-anchor="start" x="71" y="-2832.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MatrixType</text>
<text text-anchor="start" x="71" y="-2821.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="71" y="-2810.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ModelDataType</text>
<text text-anchor="start" x="71" y="-2799.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticDataType</text>
<text text-anchor="start" x="71" y="-2788.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InternalVariablesType</text>
<text text-anchor="start" x="71" y="-2777.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="71" y="-2766.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="71" y="-2755.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mElasticityModel</text>
<text text-anchor="start" x="71" y="-2744.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mYieldSurface</text>
<text text-anchor="start" x="71" y="-2733.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="71" y="-2722.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="71" y="-2711.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="71" y="-2700.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticityModel()</text>
<text text-anchor="start" x="71" y="-2689.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PlasticityModel()</text>
<text text-anchor="start" x="71" y="-2678.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="71" y="-2667.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="71" y="-2656.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~PlasticityModel()</text>
<text text-anchor="start" x="71" y="-2645.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeMaterial()</text>
<text text-anchor="start" x="71" y="-2634.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeModel()</text>
<text text-anchor="start" x="71" y="-2623.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeModel()</text>
<text text-anchor="start" x="71" y="-2612.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressTensor()</text>
<text text-anchor="start" x="71" y="-2601.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricStress</text>
<text text-anchor="start" x="71" y="-2590.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="71" y="-2579.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricStress</text>
<text text-anchor="start" x="71" y="-2568.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="71" y="-2557.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="71" y="-2546.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricConstitutive</text>
<text text-anchor="start" x="71" y="-2535.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="71" y="-2524.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricConstitutive</text>
<text text-anchor="start" x="71" y="-2513.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="71" y="-2502.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressAndConstitutive</text>
<text text-anchor="start" x="71" y="-2491.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="71" y="-2480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricStress</text>
<text text-anchor="start" x="71" y="-2469.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="71" y="-2458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricStress</text>
<text text-anchor="start" x="71" y="-2447.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="71" y="-2436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="71" y="-2425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDomainVariablesList()</text>
<text text-anchor="start" x="71" y="-2414.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Has()</text>
<text text-anchor="start" x="71" y="-2403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="71" y="-2392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="71" y="-2381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetElasticityModel()</text>
<text text-anchor="start" x="71" y="-2370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="71" y="-2359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="71" y="-2348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="71" y="-2337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetInternalVariables()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M205.01,-2320.29C206.14,-2307.83 207.26,-2295.36 208.38,-2282.89"/>
<polygon fill="none" stroke="midnightblue" points="201.53,-2320.01 204.11,-2330.28 208.5,-2320.64 201.53,-2320.01"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../d0/dbd/class_kratos_1_1_constitutive_model.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="65,-3360.5 65,-4374.5 250,-4374.5 250,-3360.5 65,-3360.5"/>
<text text-anchor="middle" x="157.5" y="-4362.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ConstitutiveModel</text>
<polyline fill="none" stroke="black" points="65,-4355.5 250,-4355.5 "/>
<text text-anchor="middle" x="157.5" y="-4343.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="65,-4336.5 250,-4336.5 "/>
<text text-anchor="start" x="73" y="-4324.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="73" y="-4313.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="73" y="-4302.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="73" y="-4291.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="73" y="-4280.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_DEFINE_LOCAL</text>
<text text-anchor="start" x="73" y="-4269.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FLAG()</text>
<text text-anchor="start" x="73" y="-4258.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-4247.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-4236.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clone()</text>
<text text-anchor="start" x="73" y="-4225.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="73" y="-4214.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-4203.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeMaterial()</text>
<text text-anchor="start" x="73" y="-4192.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeModel()</text>
<text text-anchor="start" x="73" y="-4181.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeModel()</text>
<text text-anchor="start" x="73" y="-4170.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStrainEnergy()</text>
<text text-anchor="start" x="73" y="-4159.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressTensor()</text>
<text text-anchor="start" x="73" y="-4148.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricStress</text>
<text text-anchor="start" x="73" y="-4137.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-4126.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricStress</text>
<text text-anchor="start" x="73" y="-4115.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-4104.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="73" y="-4093.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricConstitutive</text>
<text text-anchor="start" x="73" y="-4082.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-4071.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricConstitutive</text>
<text text-anchor="start" x="73" y="-4060.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-4049.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateStressAndConstitutive</text>
<text text-anchor="start" x="73" y="-4038.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="73" y="-4027.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsochoricStress</text>
<text text-anchor="start" x="73" y="-4016.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="73" y="-4005.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateVolumetricStress</text>
<text text-anchor="start" x="73" y="-3994.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="73" y="-3983.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="73" y="-3972.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Has()</text>
<text text-anchor="start" x="73" y="-3961.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="73" y="-3950.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="73" y="-3939.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetValue()</text>
<text text-anchor="start" x="73" y="-3928.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetValue()</text>
<text text-anchor="start" x="73" y="-3917.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDomainVariablesList()</text>
<text text-anchor="start" x="73" y="-3906.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="73" y="-3895.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="73" y="-3884.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="73" y="-3873.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="73" y="-3862.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="73" y="-3851.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MatrixType</text>
<text text-anchor="start" x="73" y="-3840.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ModelDataType</text>
<text text-anchor="start" x="73" y="-3829.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaterialDataType</text>
<text text-anchor="start" x="73" y="-3818.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StrainMeasureType</text>
<text text-anchor="start" x="73" y="-3807.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StressMeasureType</text>
<text text-anchor="start" x="73" y="-3796.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="73" y="-3785.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="73" y="-3774.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="73" y="-3763.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="73" y="-3752.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="73" y="-3741.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-3730.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-3719.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="73" y="-3708.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="73" y="-3697.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ConstitutiveModel()</text>
<text text-anchor="start" x="73" y="-3686.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeMaterial()</text>
<text text-anchor="start" x="73" y="-3675.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeModel()</text>
<text text-anchor="start" x="73" y="-3664.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeModel()</text>
<text text-anchor="start" x="73" y="-3653.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStrainEnergy()</text>
<text text-anchor="start" x="73" y="-3642.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressTensor()</text>
<text text-anchor="start" x="73" y="-3631.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricStress</text>
<text text-anchor="start" x="73" y="-3620.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-3609.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricStress</text>
<text text-anchor="start" x="73" y="-3598.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-3587.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateConstitutiveTensor()</text>
<text text-anchor="start" x="73" y="-3576.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricConstitutive</text>
<text text-anchor="start" x="73" y="-3565.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-3554.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricConstitutive</text>
<text text-anchor="start" x="73" y="-3543.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensor()</text>
<text text-anchor="start" x="73" y="-3532.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateStressAndConstitutive</text>
<text text-anchor="start" x="73" y="-3521.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tensors()</text>
<text text-anchor="start" x="73" y="-3510.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsochoricStress</text>
<text text-anchor="start" x="73" y="-3499.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="73" y="-3488.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateVolumetricStress</text>
<text text-anchor="start" x="73" y="-3477.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndConstitutiveTensors()</text>
<text text-anchor="start" x="73" y="-3466.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="73" y="-3455.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Has()</text>
<text text-anchor="start" x="73" y="-3444.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="73" y="-3433.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="73" y="-3422.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetValue()</text>
<text text-anchor="start" x="73" y="-3411.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="73" y="-3400.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDomainVariablesList()</text>
<text text-anchor="start" x="73" y="-3389.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="73" y="-3378.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="73" y="-3367.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M158.49,-3350.05C158.51,-3340.96 158.53,-3331.87 158.55,-3322.79"/>
<polygon fill="none" stroke="midnightblue" points="154.99,-3350.31 158.47,-3360.32 161.99,-3350.32 154.99,-3350.31"/>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="../../d4/ddc/class_kratos_1_1array__1d.html" target="_top" xlink:title="Short class definition.">
<polygon fill="none" stroke="black" points="0,-4450 0,-5266 149,-5266 149,-4450 0,-4450"/>
<text text-anchor="middle" x="74.5" y="-5254" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::array_1d&lt; T, N &gt;</text>
<polyline fill="none" stroke="black" points="0,-5247 149,-5247 "/>
<text text-anchor="middle" x="74.5" y="-5235" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-5228 149,-5228 "/>
<text text-anchor="start" x="8" y="-5216" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-5205" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-5194" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-5183" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-5172" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-5161" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-5150" font-family="Helvetica,sans-Serif" font-size="10.00">+ array_1d()</text>
<text text-anchor="start" x="8" y="-5139" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="8" y="-5128" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="8" y="-5117" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="8" y="-5106" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator[]()</text>
<text text-anchor="start" x="8" y="-5095" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-5084" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-5073" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator+=()</text>
<text text-anchor="start" x="8" y="-5062" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator&#45;=()</text>
<text text-anchor="start" x="8" y="-5051" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator/=()</text>
<text text-anchor="start" x="8" y="-5040" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator==()</text>
<text text-anchor="start" x="8" y="-5029" font-family="Helvetica,sans-Serif" font-size="10.00">* size_type</text>
<text text-anchor="start" x="8" y="-5018" font-family="Helvetica,sans-Serif" font-size="10.00">* difference_type</text>
<text text-anchor="start" x="8" y="-5007" font-family="Helvetica,sans-Serif" font-size="10.00">* value_type</text>
<text text-anchor="start" x="8" y="-4996" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reference</text>
<text text-anchor="start" x="8" y="-4985" font-family="Helvetica,sans-Serif" font-size="10.00">* reference</text>
<text text-anchor="start" x="8" y="-4974" font-family="Helvetica,sans-Serif" font-size="10.00">* array_type</text>
<text text-anchor="start" x="8" y="-4963" font-family="Helvetica,sans-Serif" font-size="10.00">* pointer</text>
<text text-anchor="start" x="8" y="-4952" font-family="Helvetica,sans-Serif" font-size="10.00">* self_type</text>
<text text-anchor="start" x="8" y="-4941" font-family="Helvetica,sans-Serif" font-size="10.00">* const_closure_type</text>
<text text-anchor="start" x="8" y="-4930" font-family="Helvetica,sans-Serif" font-size="10.00">* closure_type</text>
<text text-anchor="start" x="8" y="-4919" font-family="Helvetica,sans-Serif" font-size="10.00">* vector_temporary_type</text>
<text text-anchor="start" x="8" y="-4908" font-family="Helvetica,sans-Serif" font-size="10.00">* storage_category</text>
<text text-anchor="start" x="8" y="-4897" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-4886" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-4875" font-family="Helvetica,sans-Serif" font-size="10.00">* const_reverse_iterator</text>
<text text-anchor="start" x="8" y="-4864" font-family="Helvetica,sans-Serif" font-size="10.00">* reverse_iterator</text>
<text text-anchor="start" x="8" y="-4853" font-family="Helvetica,sans-Serif" font-size="10.00">* const_iterator_type</text>
<text text-anchor="start" x="8" y="-4842" font-family="Helvetica,sans-Serif" font-size="10.00">* iterator_type</text>
<text text-anchor="start" x="8" y="-4831" font-family="Helvetica,sans-Serif" font-size="10.00">* find()</text>
<text text-anchor="start" x="8" y="-4820" font-family="Helvetica,sans-Serif" font-size="10.00">* find()</text>
<text text-anchor="start" x="8" y="-4809" font-family="Helvetica,sans-Serif" font-size="10.00">* size()</text>
<text text-anchor="start" x="8" y="-4798" font-family="Helvetica,sans-Serif" font-size="10.00">* minus_assign()</text>
<text text-anchor="start" x="8" y="-4787" font-family="Helvetica,sans-Serif" font-size="10.00">* data()</text>
<text text-anchor="start" x="8" y="-4776" font-family="Helvetica,sans-Serif" font-size="10.00">* data()</text>
<text text-anchor="start" x="8" y="-4765" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="8" y="-4754" font-family="Helvetica,sans-Serif" font-size="10.00">* data_</text>
<text text-anchor="start" x="8" y="-4743" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4732" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4721" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4710" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4699" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4688" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4677" font-family="Helvetica,sans-Serif" font-size="10.00">* array_1d()</text>
<text text-anchor="start" x="8" y="-4666" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="8" y="-4655" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="8" y="-4644" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="8" y="-4633" font-family="Helvetica,sans-Serif" font-size="10.00">* operator[]()</text>
<text text-anchor="start" x="8" y="-4622" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-4611" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-4600" font-family="Helvetica,sans-Serif" font-size="10.00">* operator+=()</text>
<text text-anchor="start" x="8" y="-4589" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&#45;=()</text>
<text text-anchor="start" x="8" y="-4578" font-family="Helvetica,sans-Serif" font-size="10.00">* operator/=()</text>
<text text-anchor="start" x="8" y="-4567" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==()</text>
<text text-anchor="start" x="8" y="-4556" font-family="Helvetica,sans-Serif" font-size="10.00">* resize()</text>
<text text-anchor="start" x="8" y="-4545" font-family="Helvetica,sans-Serif" font-size="10.00">* assign_temporary()</text>
<text text-anchor="start" x="8" y="-4534" font-family="Helvetica,sans-Serif" font-size="10.00">* operator*=()</text>
<text text-anchor="start" x="8" y="-4523" font-family="Helvetica,sans-Serif" font-size="10.00">* plus_assign()</text>
<text text-anchor="start" x="8" y="-4512" font-family="Helvetica,sans-Serif" font-size="10.00">* assign()</text>
<text text-anchor="start" x="8" y="-4501" font-family="Helvetica,sans-Serif" font-size="10.00">* swap()</text>
<text text-anchor="start" x="8" y="-4490" font-family="Helvetica,sans-Serif" font-size="10.00">* insert_element()</text>
<text text-anchor="start" x="8" y="-4479" font-family="Helvetica,sans-Serif" font-size="10.00">* erase_element()</text>
<text text-anchor="start" x="8" y="-4468" font-family="Helvetica,sans-Serif" font-size="10.00">* clear()</text>
<text text-anchor="start" x="8" y="-4457" font-family="Helvetica,sans-Serif" font-size="10.00">* swap</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node5</title>
<path fill="none" stroke="#404040" d="M108.68,-4449.95C110.43,-4429.05 112.21,-4407.94 113.98,-4386.78"/>
<polygon fill="none" stroke="#404040" points="114,-4386.62 110.51,-4380.3 115,-4374.66 118.48,-4380.97 114,-4386.62"/>
<text text-anchor="middle" x="157.5" y="-4396" font-family="Helvetica,sans-Serif" font-size="10.00"> #mHistoryVector</text>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:title=" ">
<polygon fill="none" stroke="#bfbfbf" points="13.5,-5331.5 13.5,-5410.5 135.5,-5410.5 135.5,-5331.5 13.5,-5331.5"/>
<text text-anchor="start" x="21.5" y="-5398.5" font-family="Helvetica,sans-Serif" font-size="10.00">boost::numeric::ublas</text>
<text text-anchor="start" x="21.5" y="-5387.5" font-family="Helvetica,sans-Serif" font-size="10.00">::vector_expression&lt;</text>
<text text-anchor="middle" x="74.5" y="-5376.5" font-family="Helvetica,sans-Serif" font-size="10.00"> array_1d&lt; T, N &gt; &gt;</text>
<polyline fill="none" stroke="#bfbfbf" points="13.5,-5369.5 135.5,-5369.5 "/>
<text text-anchor="middle" x="74.5" y="-5357.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#bfbfbf" points="13.5,-5350.5 135.5,-5350.5 "/>
<text text-anchor="middle" x="74.5" y="-5338.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node6 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node6</title>
<path fill="none" stroke="midnightblue" d="M74.5,-5320.9C74.5,-5305.35 74.5,-5286.75 74.5,-5266.08"/>
<polygon fill="none" stroke="midnightblue" points="71,-5321.17 74.5,-5331.17 78,-5321.17 71,-5321.17"/>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="../../d9/d4f/class_kratos_1_1_flags.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="167,-4422.5 167,-5293.5 316,-5293.5 316,-4422.5 167,-4422.5"/>
<text text-anchor="middle" x="241.5" y="-5281.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Flags</text>
<polyline fill="none" stroke="black" points="167,-5274.5 316,-5274.5 "/>
<text text-anchor="middle" x="241.5" y="-5262.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="167,-5255.5 316,-5255.5 "/>
<text text-anchor="start" x="175" y="-5243.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="175" y="-5232.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="175" y="-5221.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator~()</text>
<text text-anchor="start" x="175" y="-5210.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator!()</text>
<text text-anchor="start" x="175" y="-5199.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignFlags()</text>
<text text-anchor="start" x="175" y="-5188.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="175" y="-5177.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Set()</text>
<text text-anchor="start" x="175" y="-5166.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Reset()</text>
<text text-anchor="start" x="175" y="-5155.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Flip()</text>
<text text-anchor="start" x="175" y="-5144.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPosition()</text>
<text text-anchor="start" x="175" y="-5133.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPosition()</text>
<text text-anchor="start" x="175" y="-5122.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FlipPosition()</text>
<text text-anchor="start" x="175" y="-5111.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearPosition()</text>
<text text-anchor="start" x="175" y="-5100.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="175" y="-5089.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AsFalse()</text>
<text text-anchor="start" x="175" y="-5078.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Is()</text>
<text text-anchor="start" x="175" y="-5067.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsDefined()</text>
<text text-anchor="start" x="175" y="-5056.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNot()</text>
<text text-anchor="start" x="175" y="-5045.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotDefined()</text>
<text text-anchor="start" x="175" y="-5034.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="175" y="-5023.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="175" y="-5012.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="175" y="-5001.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllDefined()</text>
<text text-anchor="start" x="175" y="-4990.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AllTrue()</text>
<text text-anchor="start" x="175" y="-4979.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagsList</text>
<text text-anchor="start" x="175" y="-4968.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BlockType</text>
<text text-anchor="start" x="175" y="-4957.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlagType</text>
<text text-anchor="start" x="175" y="-4946.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="175" y="-4935.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="175" y="-4924.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="175" y="-4913.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsDefined</text>
<text text-anchor="start" x="175" y="-4902.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFlags</text>
<text text-anchor="start" x="175" y="-4891.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPIDataCommunicator</text>
<text text-anchor="start" x="175" y="-4880.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefined()</text>
<text text-anchor="start" x="175" y="-4869.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetDefined()</text>
<text text-anchor="start" x="175" y="-4858.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetFlags()</text>
<text text-anchor="start" x="175" y="-4847.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetFlags()</text>
<text text-anchor="start" x="175" y="-4836.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="175" y="-4825.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="175" y="-4814.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="175" y="-4803.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator==</text>
<text text-anchor="start" x="175" y="-4792.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!=</text>
<text text-anchor="start" x="175" y="-4781.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|</text>
<text text-anchor="start" x="175" y="-4770.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;</text>
<text text-anchor="start" x="175" y="-4759.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator|=()</text>
<text text-anchor="start" x="175" y="-4748.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator&amp;=()</text>
<text text-anchor="start" x="175" y="-4737.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="175" y="-4726.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
<text text-anchor="start" x="175" y="-4715.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Flags()</text>
<text text-anchor="start" x="175" y="-4704.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="175" y="-4693.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="175" y="-4682.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator bool()</text>
<text text-anchor="start" x="175" y="-4671.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator~()</text>
<text text-anchor="start" x="175" y="-4660.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator!()</text>
<text text-anchor="start" x="175" y="-4649.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignFlags()</text>
<text text-anchor="start" x="175" y="-4638.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="175" y="-4627.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Set()</text>
<text text-anchor="start" x="175" y="-4616.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Reset()</text>
<text text-anchor="start" x="175" y="-4605.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flip()</text>
<text text-anchor="start" x="175" y="-4594.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPosition()</text>
<text text-anchor="start" x="175" y="-4583.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPosition()</text>
<text text-anchor="start" x="175" y="-4572.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FlipPosition()</text>
<text text-anchor="start" x="175" y="-4561.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearPosition()</text>
<text text-anchor="start" x="175" y="-4550.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="175" y="-4539.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AsFalse()</text>
<text text-anchor="start" x="175" y="-4528.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Is()</text>
<text text-anchor="start" x="175" y="-4517.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsDefined()</text>
<text text-anchor="start" x="175" y="-4506.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNot()</text>
<text text-anchor="start" x="175" y="-4495.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotDefined()</text>
<text text-anchor="start" x="175" y="-4484.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="175" y="-4473.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="175" y="-4462.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="175" y="-4451.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllDefined()</text>
<text text-anchor="start" x="175" y="-4440.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AllTrue()</text>
<text text-anchor="start" x="175" y="-4429.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Flags()</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node5 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node5</title>
<path fill="none" stroke="#404040" d="M207.96,-4422.29C207.14,-4412.44 206.32,-4402.66 205.5,-4393 205.32,-4390.93 205.15,-4388.85 204.97,-4386.76"/>
<polygon fill="none" stroke="#404040" points="204.97,-4386.74 200.48,-4381.1 203.95,-4374.78 208.45,-4380.42 204.97,-4386.74"/>
<text text-anchor="middle" x="235" y="-4396" font-family="Helvetica,sans-Serif" font-size="10.00"> #mOptions</text>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="../../d9/dbb/class_kratos_1_1_internals_1_1_matrix.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="274.5,-2732 274.5,-2921 426.5,-2921 426.5,-2732 274.5,-2732"/>
<text text-anchor="start" x="282.5" y="-2909" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Internals::</text>
<text text-anchor="start" x="282.5" y="-2898" font-family="Helvetica,sans-Serif" font-size="10.00">Matrix&lt; TDataType, TSize1,</text>
<text text-anchor="middle" x="350.5" y="-2887" font-family="Helvetica,sans-Serif" font-size="10.00"> TSize2 &gt;</text>
<polyline fill="none" stroke="black" points="274.5,-2880 426.5,-2880 "/>
<text text-anchor="middle" x="350.5" y="-2868" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="274.5,-2861 426.5,-2861 "/>
<text text-anchor="start" x="282.5" y="-2849" font-family="Helvetica,sans-Serif" font-size="10.00">+ Matrix()</text>
<text text-anchor="start" x="282.5" y="-2838" font-family="Helvetica,sans-Serif" font-size="10.00">+ Matrix()</text>
<text text-anchor="start" x="282.5" y="-2827" font-family="Helvetica,sans-Serif" font-size="10.00">+ Matrix()</text>
<text text-anchor="start" x="282.5" y="-2816" font-family="Helvetica,sans-Serif" font-size="10.00">+ Matrix()</text>
<text text-anchor="start" x="282.5" y="-2805" font-family="Helvetica,sans-Serif" font-size="10.00">+ Matrix()</text>
<text text-anchor="start" x="282.5" y="-2794" font-family="Helvetica,sans-Serif" font-size="10.00">+ Matrix()</text>
<text text-anchor="start" x="282.5" y="-2783" font-family="Helvetica,sans-Serif" font-size="10.00">+ Matrix()</text>
<text text-anchor="start" x="282.5" y="-2772" font-family="Helvetica,sans-Serif" font-size="10.00">+ Matrix()</text>
<text text-anchor="start" x="282.5" y="-2761" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="282.5" y="-2750" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="282.5" y="-2739" font-family="Helvetica,sans-Serif" font-size="10.00">and 30 more...</text>
</a>
</g>
</g>
<!-- Node9&#45;&gt;Node3 -->
<g id="edge8" class="edge">
<title>Node9&#45;&gt;Node3</title>
<path fill="none" stroke="#404040" d="M341.98,-2731.92C332.81,-2631.2 317.47,-2462.72 302.18,-2294.72"/>
<polygon fill="none" stroke="#404040" points="302.17,-2294.58 297.64,-2288.97 301.08,-2282.63 305.61,-2288.24 302.17,-2294.58"/>
<text text-anchor="middle" x="345" y="-2304" font-family="Helvetica,sans-Serif" font-size="10.00"> #mStressMatrix</text>
</g>
<!-- Node10 -->
<g id="node10" class="node">
<title>Node10</title>
<g id="a_node10"><a xlink:title=" ">
<polygon fill="none" stroke="#bfbfbf" points="268,-3822.5 268,-3912.5 433,-3912.5 433,-3822.5 268,-3822.5"/>
<text text-anchor="start" x="276" y="-3900.5" font-family="Helvetica,sans-Serif" font-size="10.00">AMatrix::MatrixExpression</text>
<text text-anchor="start" x="276" y="-3889.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; Matrix&lt; TDataType, TSize1,</text>
<text text-anchor="start" x="276" y="-3878.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TSize2 &gt;, AMatrix::row_major</text>
<text text-anchor="middle" x="350.5" y="-3867.5" font-family="Helvetica,sans-Serif" font-size="10.00">_access &gt;</text>
<polyline fill="none" stroke="#bfbfbf" points="268,-3860.5 433,-3860.5 "/>
<text text-anchor="middle" x="350.5" y="-3848.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#bfbfbf" points="268,-3841.5 433,-3841.5 "/>
<text text-anchor="middle" x="350.5" y="-3829.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node9 -->
<g id="edge9" class="edge">
<title>Node10&#45;&gt;Node9</title>
<path fill="none" stroke="midnightblue" d="M350.5,-3812.1C350.5,-3644.26 350.5,-3133.08 350.5,-2921.12"/>
<polygon fill="none" stroke="midnightblue" points="347,-3812.19 350.5,-3822.19 354,-3812.19 347,-3812.19"/>
</g>
<!-- Node11 -->
<g id="node11" class="node">
<title>Node11</title>
<g id="a_node11"><a xlink:title=" ">
<polygon fill="none" stroke="#bfbfbf" points="451,-3833.5 451,-3901.5 618,-3901.5 618,-3833.5 451,-3833.5"/>
<text text-anchor="start" x="459" y="-3889.5" font-family="Helvetica,sans-Serif" font-size="10.00">AMatrix::MatrixStorage</text>
<text text-anchor="middle" x="534.5" y="-3878.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TDataType, TSize1, TSize2 &gt;</text>
<polyline fill="none" stroke="#bfbfbf" points="451,-3871.5 618,-3871.5 "/>
<text text-anchor="middle" x="534.5" y="-3859.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#bfbfbf" points="451,-3852.5 618,-3852.5 "/>
<text text-anchor="middle" x="534.5" y="-3840.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node11&#45;&gt;Node9 -->
<g id="edge10" class="edge">
<title>Node11&#45;&gt;Node9</title>
<path fill="none" stroke="midnightblue" d="M526.85,-3823.32C499.42,-3668.43 405.56,-3138.39 367.12,-2921.33"/>
<polygon fill="none" stroke="midnightblue" points="523.45,-3824.16 528.64,-3833.4 530.34,-3822.94 523.45,-3824.16"/>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_nonlocal_v2_gens_nova_model__coll__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
